Index: src/main/java/com/nswdwy/scala/chapter06_day04/review/_10_Extends.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter06_day04/review/_10_Extends.scala	(date 1603414267400)
+++ src/main/java/com/nswdwy/scala/chapter06_day04/review/_10_Extends.scala	(date 1603414267400)
@@ -0,0 +1,52 @@
+package com.nswdwy.scala.chapter06_day04.review
+
+/**
+ * @author yycstart
+ * @create 2020-10-21 18:48
+ */
+object _10_Extends {
+  def main(args: Array[String]): Unit = {
+    println("<<<<<<<<<<<first-childExtends()<<<<<<<<<<<<<<<<<<<<<<<<")
+    val child1 = new childExtends();
+    println("<<<<<<<<<<<second-childExtends(\"xxxx\")<<<<<<<<<<<<<<<<<<<<<<<<")
+    val child2 = new childExtends("xxxx");
+    println("<<<<<<<<<<<<third-child2Extends()<<<<<<<<<<<<<<<<<<<<<<<")
+    /**
+     * TODO 继承有参数，创建对象无参数,先走辅助构造函数，this(),它会调用主构造函数this(name),将name传递给父类
+     */
+    val child3 = new child2Extends();
+    println("<<<<<<<<<<<<<forty-child2Extends(\"xxxx\")<<<<<<<<<<<<<<<<<<<<<<")
+    val child4 = new child2Extends("xxxx");
+
+  }
+
+  class parentExtends(name:String)  {
+    println("name=>"+name)
+    println("--------1---------")
+    //辅助构造函数
+    def this () {
+      this("zhangsan");
+      println("--------2---------")
+      println("this.name=>"+name)
+    }
+    println("--------3---------")
+  }
+
+  class childExtends(name:String) extends  parentExtends { //主构造函数
+    println("=====111=======")
+    def this() {
+      this("lisi")
+      println("=====222=======")
+    }
+    println("=====333=======")
+  }
+  //TODO 问：继承有参数，创建对象无参数,先走辅助构造函数，this(),它会调用主构造函数this(name),将name传递给父类
+  class child2Extends(name:String) extends  parentExtends(name) { //主构造函数
+    println("//////111")
+    def this() {
+      this("lisi")
+      println("//////222")
+    }
+    println("//////333")
+  }
+}
Index: src/main/java/com/nswdwy/scala/chapter06_day04/review/_9_Instance.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter06_day04/review/_9_Instance.scala	(date 1603285656569)
+++ src/main/java/com/nswdwy/scala/chapter06_day04/review/_9_Instance.scala	(date 1603285656569)
@@ -0,0 +1,28 @@
+package com.nswdwy.scala.chapter06_day04.review
+
+import scala.beans.BeanProperty
+
+/**
+ * @author yycstart
+ * @create 2020-10-21 18:48
+ */
+object _9_Instance {
+  def main(args: Array[String]): Unit = {
+    val user = new userInstance("lisi",12)
+  }
+
+  class userInstance(name:String) {  //主构造函数
+    println("------")
+
+    //辅助构造函数
+    def this () = {
+      this("zhangsan");
+      println("=============")
+    }
+    def this(name:String,age:Int){
+      this()
+      println("xxxxxxxxxxxxx")
+
+    }
+  }
+}
Index: src/test/java/com/teacher/scala/day03/chapter05/Scala05_Function_Hell8.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day03/chapter05/Scala05_Function_Hell8.scala	(date 1603188813334)
+++ src/test/java/com/teacher/scala/day03/chapter05/Scala05_Function_Hell8.scala	(date 1603188813334)
@@ -0,0 +1,25 @@
+package com.teacher.scala.day03.chapter05
+
+/**
+ * @author yycstart
+ * @create 2020-10-20 18:13
+ */
+object Scala05_Function_Hell8 {
+
+    def main(args: Array[String]): Unit = {
+
+        val s = "zhangsan"
+        def test(): Unit = {
+            println(s)
+        }
+
+        test()
+
+        // 所有函数赋值给对象都有闭包
+        // 所有的匿名函数都有闭包
+        //val a = test _
+
+
+
+    }
+}
Index: src/test/java/com/teacher/scala/day03/chapter05/Scala05_Function_Hell7.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day03/chapter05/Scala05_Function_Hell7.scala	(date 1603188813311)
+++ src/test/java/com/teacher/scala/day03/chapter05/Scala05_Function_Hell7.scala	(date 1603188813311)
@@ -0,0 +1,22 @@
+package com.teacher.scala.day03.chapter05
+
+/**
+ * @author yycstart
+ * @create 2020-10-20 18:13
+ */
+object Scala05_Function_Hell7 {
+
+    def main(args: Array[String]): Unit = {
+
+//        def test(): String = {
+//
+//        }
+
+        //val a : Function0[String] = test _
+        //val a : ()=>String = test _
+
+
+
+
+    }
+}
Index: src/test/java/com/teacher/scala/day03/chapter05/Scala05_Function_Hell6.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day03/chapter05/Scala05_Function_Hell6.scala	(date 1603197295280)
+++ src/test/java/com/teacher/scala/day03/chapter05/Scala05_Function_Hell6.scala	(date 1603197295280)
@@ -0,0 +1,49 @@
+package com.teacher.scala.day03.chapter05
+
+/**
+ * @author yycstart
+ * @create 2020-10-20 18:13
+ */
+object Scala05_Function_Hell6 {
+
+    def main(args: Array[String]): Unit = {
+
+        // TODO 将函数作为返回值来使用
+
+//         1) outer函数 => class文件中一定是方法
+//         2) 参数x编译后应该是方法的局部变量，当前方法的内部有效
+//         3) inner函数 => classw文件中一定是方法
+//         4) inner方法执行时间点，在outer方法执行后
+//         5) outer方法如果执行完了，会弹栈，其中的局部变量也会同时回收
+//         6) inner凭什么能用x? 因为进行了特殊的操作
+
+//         一个函数如果使用了外部的变量，那么这个变量需要改变生命周期
+//         这个时候函数将这个变量包含到函数的内部，形成一个闭合效果
+//         这个效果（环境）称之为闭包
+//         Scala2.12, 早期版本闭包采用的是匿名内部类实现
+        def outer ( x:Int ) = {
+            def inner( y : Int ) = {
+                x + y
+            }
+            inner _
+        }
+
+        // outer => inner
+        /*
+
+          public void test() {
+
+          }
+          test()
+          test()
+
+         */
+        val f = outer(20)
+        println(f(20))
+        println(outer(20)(10))
+
+
+
+
+    }
+}
Index: src/test/java/com/teacher/scala/day03/chapter05/Scala05_Function_Hell5.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day03/chapter05/Scala05_Function_Hell5.scala	(date 1603197517252)
+++ src/test/java/com/teacher/scala/day03/chapter05/Scala05_Function_Hell5.scala	(date 1603197517252)
@@ -0,0 +1,34 @@
+package com.teacher.scala.day03.chapter05
+
+/**
+ * @author yycstart
+ * @create 2020-10-20 18:13
+ */
+object Scala05_Function_Hell5 {
+
+    def main(args: Array[String]): Unit = {
+
+        // TODO 将函数作为返回值来使用
+        def outer( x:Int ) = {
+            def middle( y:Int ) = {
+                def inner( f : (Int, Int) => Int ) = {
+                    f(x, y)
+                }
+                inner _
+            }
+            middle _
+        }
+
+        println(outer(10)(10)(_ + _))
+        println("------------------")
+
+        def f1 = outer(20)
+        def f2 = f1(2)
+        print(f2(_ + _))
+
+
+
+
+
+    }
+}
Index: src/main/java/com/nswdwy/scala/chapter/Test.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter/Test.scala	(date 1603091618320)
+++ src/main/java/com/nswdwy/scala/chapter/Test.scala	(date 1603091618320)
@@ -0,0 +1,29 @@
+package com.nswdwy.scala.chapter
+
+/**
+ * @author yycstart
+ * @create 2020-10-17 11:49
+ */
+object Test {
+  def main(args: Array[String]): Unit = {
+//    val name : String = "zhangsan"
+//    print(name)
+//      10 + 10
+
+//    for(i <- 1 to 5;j = (2*i -1)){
+//      print(j)
+//    }
+
+  /*  for ( i <- 1 to 9) {
+      val m = 2 * i -1
+      println(" "*(9-i)+"*" * m)
+    }*/
+
+    for(i<- 1 to 9){
+      print("  "*(9-i));
+      print("^")
+      println("v^"*(2*i-1))
+    }
+  }
+
+}
Index: src/main/java/com/nswdwy/scala/chapter06_day04/review/_4_AccessTest.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter06_day04/review/_4_AccessTest.scala	(date 1603283169484)
+++ src/main/java/com/nswdwy/scala/chapter06_day04/review/_4_AccessTest.scala	(date 1603283169484)
@@ -0,0 +1,51 @@
+package com.atguigu.bigdata.scala.chapter06
+
+
+
+object Scala07_Object_Access {
+
+    def main(args: Array[String]): Unit = {
+
+        // TODO - 访问权限
+        // 所谓的权限，其实就是用户和服务之间的权利和限制
+
+
+    }
+}
+package Acess_test1{
+    package Acess_test2{
+        class Test03 {
+            private val t1: String = "zhangsan"
+            private[Acess_test1] val age: Int = 12
+
+            private def fun04(): Unit = {
+                println("fun04...")
+            }
+        }
+        class Test03_2{
+
+        }
+
+
+        }
+    package Acess_test2_2 {
+
+        class Test04_1 {
+            private val t1: String = "zhangsan"
+
+            private def fun04(): Unit = {
+                println("fun04...")
+            }
+        }
+
+        class Test04_2 {
+            val t04_2 = "t04_2..."
+
+//            private[Acess_test3] def fun_4_2(): Unit = {
+//                println("fun_4_2.....")
+//            }
+
+        }
+
+    }
+}
\ No newline at end of file
Index: src/main/java/com/nswdwy/scala/chapter06_day04/review/_8_Method.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter06_day04/review/_8_Method.java	(date 1603284043253)
+++ src/main/java/com/nswdwy/scala/chapter06_day04/review/_8_Method.java	(date 1603284043253)
@@ -0,0 +1,71 @@
+package com.nswdwy.scala.chapter06_day04.review;
+
+
+/**
+ * @author yycstart
+ * @create 2020-10-21 20:22
+ */
+public class _8_Method {
+    public static void main(String[] args) {
+        methodA m = new methodB();
+        m.fun();
+        System.out.println("-----------------");
+        methodC m2 = new methodD();
+        m2.fun();
+        System.out.println("-----------------");
+        methodE m3 = new methodF();
+        m3.fun();
+        System.out.println("-----------------");
+        methodG m4 = new methodH();
+        m4.fun();
+    }
+}
+class methodA{
+    int age = 12;
+    public void fun(){
+        System.out.println("A_age:" + age);
+    }
+}
+class methodB extends methodA{
+    int age = 22;
+    public void fun(){
+        System.out.println("B_age:" + age);
+    }
+}
+class methodC{
+    String name = "zhangsan";
+    public void fun(){
+        System.out.println("C_name:" + name);
+    }
+}
+class methodD extends methodC{
+    String name = "lisi";
+}
+
+class methodE{
+    int id = 12;
+    public void fun(){
+        System.out.println("E_id:" + (getId()+1.0) );//会调用加载类本身的方法
+    }
+    public int getId(){
+        return id;
+    }
+}
+class methodF extends methodE{
+    int id = 22;
+    public int getId(){
+        return id;
+    }
+}
+class methodG{
+    int id = 12;
+    public void fun(){
+        System.out.println("E_id:" + (getId()+1.0) );//会调用加载类本身的方法
+    }
+    public int getId(){
+        return id;
+    }
+}
+class methodH extends methodG{
+    int id = 22;
+}
\ No newline at end of file
Index: src/main/java/com/nswdwy/scala/chapter/Test01.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter/Test01.java	(date 1602985570214)
+++ src/main/java/com/nswdwy/scala/chapter/Test01.java	(date 1602985570214)
@@ -0,0 +1,19 @@
+package com.nswdwy.scala.chapter;
+
+import org.junit.Test;
+
+/**
+ * @author yycstart
+ * @create 2020-10-17 11:53
+ */
+public class Test01 {
+    public static void main(String[] args) {
+        int a = 12;
+        System.out.println(a);
+    }
+
+    @Test
+    public void test01(){
+        System.out.println("saasa");
+    }
+}
Index: src/main/java/com/nswdwy/scala/chapter03_day03/test.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter03_day03/test.java	(date 1603279885818)
+++ src/main/java/com/nswdwy/scala/chapter03_day03/test.java	(date 1603279885818)
@@ -0,0 +1,20 @@
+package com.nswdwy.scala.chapter03_day03;
+
+/**
+ * @author yycstart
+ * @create 2020-10-20 11:34
+ */
+public class test {
+    public static void main(String[] args) {
+        int t = te(12);
+        System.out.println(t);
+
+    }
+    public static  int tl(int y){
+        return y;
+    }
+    public static int te(int x){
+        int s = x + tl(12);
+        return s;
+    }
+}
Index: src/main/java/com/nswdwy/scala/chapter03_day03/function2.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter03_day03/function2.scala	(date 1603279885806)
+++ src/main/java/com/nswdwy/scala/chapter03_day03/function2.scala	(date 1603279885806)
@@ -0,0 +1,15 @@
+package com.nswdwy.scala.chapter03_day03
+
+/**
+ * @author yycstart
+ * @create 2020-10-20 10:34
+ */
+object function2 {
+  def main(args: Array[String]): Unit = {
+
+    2
+    2
+    3
+    4
+  }
+}
Index: src/test/java/com/teacher/scala/day01/chapter02/Scala02_Var2_Java.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day01/chapter02/Scala02_Var2_Java.java	(date 1603028087775)
+++ src/test/java/com/teacher/scala/day01/chapter02/Scala02_Var2_Java.java	(date 1603028087775)
@@ -0,0 +1,20 @@
+package com.teacher.scala.day01.chapter02;
+import java.util.*;
+public class Scala02_Var2_Java {
+    public static void main(String[] args) {
+
+        // 编译器可以执行常量计算
+//        byte b1 = 10;
+//        byte b = b1 + 10;
+        //System.out.println(b);
+
+//        List list = new ArrayList();
+//        list.clone();
+//        ArrayList list1 = new ArrayList();
+//        list1.clone();
+
+        int age;
+//        age = 10;
+//        System.out.println(age);
+    }
+}
Index: src/test/java/com/teacher/scala/day01/chapter02/Scala02_Var3.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day01/chapter02/Scala02_Var3.scala	(date 1602985059607)
+++ src/test/java/com/teacher/scala/day01/chapter02/Scala02_Var3.scala	(date 1602985059607)
@@ -0,0 +1,25 @@
+package com.teacher.scala.day01.chapter02
+
+object Scala02_Var3 {
+
+    def main(args: Array[String]): Unit = {
+
+
+        // 马丁：如果通过编译器可以推断出语法的话，那么语法可以省略，在编译时，由Scala自动补全
+
+        //val username : String = "zhangsan"
+        // 如果通过变量的值可以推断出变量的类型，那么类型可以省略的。
+        // 类型自动推断功能不能在多态中使用。
+        val username = "zhangsan"
+
+        // Scala中的变量在声明的时候必须初始化，否则发生错误
+        val name : String = "lisi"
+
+        var email : String = "xxxx@xxxx.com"
+        //email = true
+
+
+
+        println(username)
+    }
+}
Index: src/test/java/com/teacher/scala/day01/chapter02/Scala03_Var_Java.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day01/chapter02/Scala03_Var_Java.java	(date 1603028634117)
+++ src/test/java/com/teacher/scala/day01/chapter02/Scala03_Var_Java.java	(date 1603028634117)
@@ -0,0 +1,24 @@
+package com.teacher.scala.day01.chapter02;
+
+import java.lang.reflect.Field;
+
+public class Scala03_Var_Java {
+    public static void main(String[] args) throws Exception {
+
+        String s = " a b "; // 5
+
+//        s.trim(); // 3  trim去掉首尾半角空格
+//        System.out.println("!"+s+"!");
+        // ! a b !
+        //String没有提供改变自身内容的方法
+        // 反射
+        final Class<String> stringClass = String.class;
+        final Field value = stringClass.getDeclaredField("value");
+        value.setAccessible(true);
+
+        final char[] o = (char[])value.get(s);
+        o[2] = 'D';
+
+        System.out.println(s);
+    }
+}
Index: src/test/java/com/teacher/scala/day01/chapter02/Scala04_Label.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day01/chapter02/Scala04_Label.scala	(date 1602985059567)
+++ src/test/java/com/teacher/scala/day01/chapter02/Scala04_Label.scala	(date 1602985059567)
@@ -0,0 +1,44 @@
+package com.teacher.scala.day01.chapter02
+
+object Scala04_Label {
+
+    def main(args: Array[String]): Unit = {
+
+        // Scala语法中的标识符的基本用法和java一致
+//        val name :  String = "zhangsan"
+//        val name1 : String = "zhangsan"
+//        val name1_ : String = "zhangsan"
+//        val name1$ : String = "zhangsan"
+//        //val 2name1$ : String = "zhangsan"( X )
+//        //val class : String = "xxxx" (X)
+//        val Class : String = "xxxx"
+
+        // Scala是多范式的编程语言
+        // Scala中的标识符不需要记，用的时候报错就改
+        // 颜文字
+//        val :> : String = "xxxx"
+//        val ::: : String = "xxxx"
+        //val :-> : String = "xxxx"
+        //println(:->)
+//        val + : String = "xxxx"
+//        val - : String = "xxxx"
+//        val * : String = "xxxx"
+//        val / : String = "xxxx"
+//        val ~ : String = "xxxx"
+        //val ` : String = "xxxx" (X)
+//        val ! : String = "xxxx"
+        //val @@ : String = "xxxx" (X)
+        //val ## : String = "xxxx"  (X)
+//        val % : String = "xxxx"
+//        val ^ : String = "xxxx"
+//        val & : String = "xxxx"
+//        val > : String = "xxxx"
+        //val ( : String = "xxxx"
+        //val ) : String = "xxxx"
+
+        // 下划线可以声明为变量，但是不能访问。
+        val _ = "zhangsan"
+
+        //println(_)
+    }
+}
Index: src/test/java/com/teacher/scala/day01/chapter01/Scala01_HelloScala.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day01/chapter01/Scala01_HelloScala.scala	(date 1602985018131)
+++ src/test/java/com/teacher/scala/day01/chapter01/Scala01_HelloScala.scala	(date 1602985018131)
@@ -0,0 +1,62 @@
+package com.teacher.scala.day01.chapter01
+
+/*
+   1. object : 声明类的关键字, 可以同时声明对象
+
+   2. Scala01_HelloScala ： 类的名称，同时也是对象名称
+
+   3. def : defined(声明) 函数（方法）的关键字
+
+   4. main : 方法名称
+
+   5. (...) : 方法名称后面紧跟着的小括号，表示参数列表，多个参数用逗号隔开
+
+   6. args : Array[String] : 方法的参数
+
+       args : 参数名
+       Array[String] : 参数类型
+
+       java  => 参数类型   参数名称 => 强类型的语言 => 更看重类型
+       scala => 参数名称 : 参数类型 => 强类型的语言 => 更看重用法
+
+       中文 => 我  喜欢 那个喜欢我的  你
+       英文 => i  like the one who like  me
+
+       scala更关心怎么使用参数，所以名称在前。
+
+    7. Array[String] ： Scala语言是完全面向对象的语言，所以数组在scala中也是类
+
+        java  => String[]
+        scala => Array[String]
+
+    8.  java => method => String test()
+       scala => method => test() : String
+
+    9. Unit : Scala语言是完全面向对象的语言
+             java   => void
+             scala => Unit
+
+    10. java => User user = new User()
+        scala => method = 方法体对象
+
+    11. 大括号表示方法体
+
+    12. System.out.println
+        scala语言是基于java开发的，所以java的代码可以直接在scala中使用
+        也可以使用scala自己的打印语句
+
+    13. scala语言可以省略代码最后的分号
+        一般会每一行完成一段逻辑的代码的编写，所以就不需要使用分号区分逻辑，用换行符
+        如果一行代码中含有多个逻辑，那么就不能省略分号
+
+
+
+
+ */
+object Scala01_HelloScala {
+
+    def main(args: Array[String]): Unit = {
+        //System.out.println("Hello Scala")
+        println("Hello Scala") ;println("Hello Scala")
+    }
+}
Index: src/test/java/com/teacher/scala/day01/chapter01/Scala02_Method.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day01/chapter01/Scala02_Method.scala	(date 1603026758913)
+++ src/test/java/com/teacher/scala/day01/chapter01/Scala02_Method.scala	(date 1603026758913)
@@ -0,0 +1,17 @@
+package com.teacher.scala.day01.chapter01
+
+object Scala02_Method {
+
+    def main(args: Array[String]): Unit = {
+        // 方法调用
+        test()
+
+        // Scala语言是一个完全面向对象的语言，没有静态语法，没有static关键字
+        // 可以采用object关键字声明对象访问方法，模仿静态语法
+        Scala02_Method.test()
+    }
+    // 声明方法
+    def test():Unit = {
+        println("test...")
+    }
+}
Index: src/test/java/com/teacher/scala/day01/chapter01/Scala03_Test_Java.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day01/chapter01/Scala03_Test_Java.java	(date 1603279541714)
+++ src/test/java/com/teacher/scala/day01/chapter01/Scala03_Test_Java.java	(date 1603279541714)
@@ -0,0 +1,13 @@
+package com.teacher.scala.day01.chapter01;
+
+
+import com.teacher.scala.day04.bean.Emp;
+
+public class Scala03_Test_Java {
+    public static void main(String[] args) {
+
+        System.out.println(Emp.age);
+
+
+    }
+}
Index: src/test/java/com/teacher/scala/day01/chapter01/HelloScala.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day01/chapter01/HelloScala.scala	(date 1602985018121)
+++ src/test/java/com/teacher/scala/day01/chapter01/HelloScala.scala	(date 1602985018121)
@@ -0,0 +1,8 @@
+package com.teacher.scala.day01.chapter01
+
+object HelloScala {
+
+    def main(args: Array[String]): Unit = {
+        System.out.println("Hello Scala")
+    }
+}
Index: src/test/java/com/teacher/scala/day01/chapter02/Scala07_IO_Server.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day01/chapter02/Scala07_IO_Server.scala	(date 1602985217692)
+++ src/test/java/com/teacher/scala/day01/chapter02/Scala07_IO_Server.scala	(date 1602985217692)
@@ -0,0 +1,30 @@
+package com.teacher.scala.day01.chapter02
+
+import java.io.{FileWriter, InputStream, ObjectInputStream, PrintWriter}
+import java.net.{ServerSocket, Socket}
+
+import com.teacher.scala.day01.bean.Task
+
+
+object Scala07_IO_Server {
+
+    def main(args: Array[String]): Unit = {
+
+        var server = new ServerSocket(9999)
+        println("服务器启动，等待连接")
+
+        val client: Socket = server.accept()
+        println("客户端已经链接成功")
+
+        //val stream: InputStream = client.getInputStream
+        //val i: Int = stream.read()
+        //println("获取客户端传递的值 ： " + i)
+
+        val objIn = new ObjectInputStream(client.getInputStream)
+        val task = objIn.readObject().asInstanceOf[Task]
+        println("客户端发送的数据为 ： " + task.data)
+
+        client.close()
+        server.close()
+    }
+}
Index: src/test/java/com/teacher/scala/day01/chapter02/Scala07_IO1.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day01/chapter02/Scala07_IO1.scala	(date 1603032819639)
+++ src/test/java/com/teacher/scala/day01/chapter02/Scala07_IO1.scala	(date 1603032819639)
@@ -0,0 +1,18 @@
+package com.teacher.scala.day01.chapter02
+
+import java.io.{FileWriter, PrintWriter}
+
+import scala.io.{BufferedSource, Source}
+
+object Scala07_IO1 {
+
+    def main(args: Array[String]): Unit = {
+
+        // 装饰者设计模式
+        val out = new PrintWriter(new FileWriter("output/test.txt"))
+        out.println("zhangsan")
+        out.println("lisi")
+        out.flush()
+        out.close()
+    }
+}
Index: src/test/java/com/teacher/scala/day01/chapter02/Scala08_DataType.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day01/chapter02/Scala08_DataType.scala	(date 1603107250923)
+++ src/test/java/com/teacher/scala/day01/chapter02/Scala08_DataType.scala	(date 1603107250923)
@@ -0,0 +1,17 @@
+package com.teacher.scala.day01.chapter02
+
+import scala.io.{BufferedSource, Source}
+
+object Scala08_DataType {
+
+    def main(args: Array[String]): Unit = {
+
+        // Scala是完全面向对象的语言，所以没有基本类型。
+        // 将java中基本类型定义了对应的普通类型
+//         java => byte, short int long float double char boolean
+//         scala => Byte Short Int Long Float Double Char Boolean
+        val age : Int = 20
+
+        println(age)
+    }
+}
Index: src/test/java/com/teacher/scala/day01/chapter02/Scala08_DataType1.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day01/chapter02/Scala08_DataType1.scala	(date 1602985059561)
+++ src/test/java/com/teacher/scala/day01/chapter02/Scala08_DataType1.scala	(date 1602985059561)
@@ -0,0 +1,15 @@
+package com.teacher.scala.day01.chapter02
+
+object Scala08_DataType1 {
+
+    def main(args: Array[String]): Unit = {
+
+        // 万物皆对象
+        // 多态
+        // null为引用类型对象，无法直接给值类型对象
+//        val a : String = null
+//        val i : Int = null
+//        println(a)
+//        println(i)
+    }
+}
Index: src/test/java/com/teacher/scala/day01/chapter02/Scala05_Static_Java.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day01/chapter02/Scala05_Static_Java.java	(date 1602985059583)
+++ src/test/java/com/teacher/scala/day01/chapter02/Scala05_Static_Java.java	(date 1602985059583)
@@ -0,0 +1,19 @@
+package com.teacher.scala.day01.chapter02;
+
+import java.lang.reflect.Field;
+
+public class Scala05_Static_Java {
+    public static void main(String[] args) throws Exception {
+
+        Thread t1 = new Thread();
+        Thread t2 = new Thread();
+
+        t1.start();
+        t2.start();
+
+        // 核心区别字体不一样。
+        // sleep方法是静态方法，wait方法是成员方法
+        Thread.sleep(1000);  // main线程休眠
+        t2.wait();                 // t2线程等待
+    }
+}
Index: src/test/java/com/teacher/scala/day01/chapter02/Scala06_String.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day01/chapter02/Scala06_String.scala	(date 1603109842467)
+++ src/test/java/com/teacher/scala/day01/chapter02/Scala06_String.scala	(date 1603109842467)
@@ -0,0 +1,45 @@
+package com.teacher.scala.day01.chapter02
+
+object Scala06_String {
+
+    def main(args: Array[String]): Unit = {
+
+        // Scala中没有字符串，它的字符串其实就是java的字符串
+        val name : String = "zhangsan"
+
+        // 字符串的拼接
+        val email : String = "xxxxx"
+
+        //println(" name ：" + name + ", email : " + email)
+        // 传值字符串
+        //printf(" name ：%s, email : %s", name, email)
+
+        // 插值字符串
+        //println("name : ${name}, email: ${email}")
+        //println(s"name : ${name}, email: ${email}")
+
+        // JSON 字符串
+        // JSON => JavaScript Object Notation
+        // 将符合JSON格式的字符串称之为JSON字符串
+        // 插值字符串在JSON格式中会出现错误
+//        println(s"{\"name\":\"${name}\"}")
+
+        // 多行字符串 : JSON & SQL
+        // 竖线称之为顶格符
+        println(
+            s"""
+              {  "name" : "${name}" }
+              | zhangsan
+            """.stripMargin)
+
+        println(
+            """
+              | select
+              |    *
+              | from user
+              | where id = 1
+            """.stripMargin)
+
+
+    }
+}
Index: src/test/java/com/teacher/scala/day01/chapter02/Scala07_IO.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day01/chapter02/Scala07_IO.scala	(date 1603106677698)
+++ src/test/java/com/teacher/scala/day01/chapter02/Scala07_IO.scala	(date 1603106677698)
@@ -0,0 +1,33 @@
+package com.teacher.scala.day01.chapter02
+
+import scala.io.{BufferedSource, Source}
+
+object Scala07_IO {
+
+    def main(args: Array[String]): Unit = {
+
+        // 从控制台输入内容
+//        val line = scala.io.StdIn.readLine()
+//        println("line = " + line)
+
+        // 从文件中获取输入
+        // fromFile可以传递一个参数，这个参数其实是一个路径
+//         绝对路径：不可改变的路径
+//               本地路径 : file:///D:/
+//               网络路径：协议:IP:PORT/xxxxx/yyyy/zzzz
+
+        // 相对路径：可以改变的路径, 需要一个基准路径
+        //      ../   ./
+
+        // 如果想要从IDEA中读取文件，那么需要使用相对路径
+        // 这里相对路径的基准路径时IDEA中Project的根路径
+        val source: BufferedSource = Source.fromFile("input/word.txt")
+
+        val strings: Iterator[String] = source.getLines()
+        while (strings.hasNext) {
+            println(strings.next())
+        }
+
+        source.close()
+    }
+}
Index: src/test/java/com/teacher/scala/day01/chapter02/Scala07_IO_Client.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day01/chapter02/Scala07_IO_Client.scala	(date 1602985178683)
+++ src/test/java/com/teacher/scala/day01/chapter02/Scala07_IO_Client.scala	(date 1602985178683)
@@ -0,0 +1,36 @@
+package com.teacher.scala.day01.chapter02
+
+import java.io.{FileWriter, ObjectOutputStream, OutputStream, PrintWriter}
+import java.net.Socket
+
+import com.teacher.scala.day01.bean.Task
+
+
+
+object Scala07_IO_Client {
+
+    def main(args: Array[String]): Unit = {
+
+        // 建立和服务器的连接
+        val client = new Socket("localhost", 9999)
+
+
+        // 发送普通数据
+        //val stream: OutputStream = client.getOutputStream
+        //stream.write(10)
+
+        // 发送对象
+        val task : Task = new Task()
+        task.data = "zhangsan,lisi,wangwu"
+
+        // 对象输出流
+        val objOut = new ObjectOutputStream(client.getOutputStream)
+        objOut.writeObject(task)
+        objOut.flush()
+        objOut.close()
+
+
+        println("向服务器发送对象")
+        client.close()
+    }
+}
Index: src/test/java/com/teacher/scala/day01/chapter02/Scala08_DataType6_Java.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day01/chapter02/Scala08_DataType6_Java.java	(date 1602985059593)
+++ src/test/java/com/teacher/scala/day01/chapter02/Scala08_DataType6_Java.java	(date 1602985059593)
@@ -0,0 +1,34 @@
+package com.teacher.scala.day01.chapter02;
+
+public class Scala08_DataType6_Java {
+    public static void main(String[] args) throws Exception {
+
+        //  0000 0001
+        // 0000 0000 0000 0001
+        byte b = 10;
+        test(b);
+    }
+
+//
+//
+//
+//
+//
+//
+//
+//
+//
+//
+//    public static void test( byte b ) {
+//        System.out.println("bbbb");
+//    }
+    public static void test( char c ) {
+        System.out.println("cccc");
+    }
+    public static void test( int i ) {
+        System.out.println("iiii");
+    }
+//    public static void test( short s ) {
+//        System.out.println("ssss");
+//    }
+}
Index: src/test/java/com/teacher/scala/day01/chapter02/json.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day01/chapter02/json.html	(date 1602918368000)
+++ src/test/java/com/teacher/scala/day01/chapter02/json.html	(date 1602918368000)
@@ -0,0 +1,17 @@
+<script>
+
+    // function Emp() {
+    //     this.name = "zhangsan"
+    // }
+
+    //var emp = new Emp()
+
+    //alert(emp.name)
+
+    // JSON
+    var obj = {"name":"zhangsan", "age":20}
+    " {\"name\":\"zhangsan\", \"age\":20}"
+
+    alert(obj.name)
+
+</script>
\ No newline at end of file
Index: src/test/java/com/teacher/scala/day01/chapter02/Scala01_Comment.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day01/chapter02/Scala01_Comment.scala	(date 1602985059556)
+++ src/test/java/com/teacher/scala/day01/chapter02/Scala01_Comment.scala	(date 1602985059556)
@@ -0,0 +1,17 @@
+package com.teacher.scala.day01.chapter02
+
+object Scala01_Comment {
+
+    def main(args: Array[String]): Unit = {
+
+        // Scala注释和java一致的
+
+        // 单行注释
+        /*
+        多行注释
+         */
+        /**
+          * 文档注释
+          */
+    }
+}
Index: src/test/java/com/teacher/scala/day01/chapter02/Scala02_Var.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day01/chapter02/Scala02_Var.scala	(date 1603027734777)
+++ src/test/java/com/teacher/scala/day01/chapter02/Scala02_Var.scala	(date 1603027734777)
@@ -0,0 +1,23 @@
+package com.teacher.scala.day01.chapter02
+
+object Scala02_Var {
+
+    def main(args: Array[String]): Unit = {
+
+        // 变量 ： scala中采用var|val关键字声明变量
+        //         var 声明的变量，值是可以修改的
+        //         val 声明的变量，值不能修改的, 不能使用final替代
+
+
+        // java => 变量类型  变量名称  = 变量值
+        // scala => var 变量名称 : 变量类型 = 变量值
+        var  name : String = "zhangsan"
+        name = "wangwu"
+        // 马丁：能不能创建一个变量后，不让变量的值能改
+        //      推荐使用val
+        val username : String = "lisa"
+        //username = "zhaoliu"
+
+        println(name)
+    }
+}
Index: src/test/java/com/teacher/scala/day01/chapter02/Scala08_DataType2.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day01/chapter02/Scala08_DataType2.scala	(date 1602985059571)
+++ src/test/java/com/teacher/scala/day01/chapter02/Scala08_DataType2.scala	(date 1602985059571)
@@ -0,0 +1,12 @@
+package com.teacher.scala.day01.chapter02
+
+object Scala08_DataType2 {
+
+    def main(args: Array[String]): Unit = {
+
+
+    }
+    def test(): Nothing = {
+        throw new Exception
+    }
+}
Index: src/test/java/com/teacher/scala/day01/chapter02/Scala08_DataType3_Java.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day01/chapter02/Scala08_DataType3_Java.java	(date 1602985059617)
+++ src/test/java/com/teacher/scala/day01/chapter02/Scala08_DataType3_Java.java	(date 1602985059617)
@@ -0,0 +1,31 @@
+package com.teacher.scala.day01.chapter02;
+
+public class Scala08_DataType3_Java {
+    public static void main(String[] args) throws Exception {
+
+        byte b = 127;
+        b++; // java 一元运算符不会提升数据类型
+
+        // （byte）(127 + 1) = -128
+
+        // 0111 1111
+        //         1
+        //----------
+        // 0000 0000 0000 0000 0000 0000 1000 0000
+        //                               1000 0000
+
+        // 1 + 1111111    => 负数 + 7位最大值 => 8位中负数最大值 => -1
+        // 1 + 000 0000   => 负数 + 7位最小值 => 8位中负数最小值 => -128
+
+
+        // 127
+        // -128
+        // 128
+        System.out.println(b);
+
+        //b = (byte)i;
+
+
+
+    }
+}
Index: src/test/java/com/teacher/scala/day01/chapter02/Scala08_DataType4.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day01/chapter02/Scala08_DataType4.scala	(date 1602985059627)
+++ src/test/java/com/teacher/scala/day01/chapter02/Scala08_DataType4.scala	(date 1602985059627)
@@ -0,0 +1,19 @@
+package com.teacher.scala.day01.chapter02
+
+object Scala08_DataType4 {
+
+    def main(args: Array[String]): Unit = {
+
+        // 数字默认为Int类型，如果想限定类型，那么必须明确变量的类型，不能省略
+        val b : Byte = 10
+        val i : Int = b
+
+        // 在scala语法中没有强制类型转换，可以通过方法进行转换
+        // 马丁
+        // Scala语言中没有精度的概念
+        // Scala语言中任意值类型之间其实不能互相转换。类之间没有关系。
+        // 之所以可以转换，那么在编写编译器时自动帮助我们进行了转换。（隐式转换）
+        val bb : Byte = i.toByte
+    }
+
+}
Index: src/test/java/com/teacher/scala/day01/chapter02/Scala08_DataType5_Java.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day01/chapter02/Scala08_DataType5_Java.java	(date 1602985059597)
+++ src/test/java/com/teacher/scala/day01/chapter02/Scala08_DataType5_Java.java	(date 1602985059597)
@@ -0,0 +1,21 @@
+package com.teacher.scala.day01.chapter02;
+
+public class Scala08_DataType5_Java {
+    public static void main(String[] args) throws Exception {
+
+        A a = new B();
+        test(a);
+    }
+    public static void test( A a ) {
+        System.out.println("aaaa");
+    }
+    public static void test( B b ) {
+        System.out.println("bbbb");
+    }
+}
+class A {
+
+}
+class B extends A {
+
+}
Index: input/word.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- input/word.txt	(date 1603032534173)
+++ input/word.txt	(date 1603032534173)
@@ -0,0 +1,4 @@
+hello
+scala
+yjfjfjf
+fjk
\ No newline at end of file
Index: src/test/java/com/teacher/scala/day01/chapter02/Scala02_Var1.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day01/chapter02/Scala02_Var1.scala	(date 1602985059623)
+++ src/test/java/com/teacher/scala/day01/chapter02/Scala02_Var1.scala	(date 1602985059623)
@@ -0,0 +1,13 @@
+package com.teacher.scala.day01.chapter02
+
+object Scala02_Var1 {
+
+    def main(args: Array[String]): Unit = {
+
+
+        // 常量 & 变量
+        // 常量 ： 1, "a", 'B', true
+        // java 使用final修饰的变量称之为不可变变量
+        // final String name = xxxxx
+    }
+}
Index: src/test/java/com/teacher/scala/day02/chapter05/Scala04_Function_NightMare1.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day02/chapter05/Scala04_Function_NightMare1.scala	(date 1603104590400)
+++ src/test/java/com/teacher/scala/day02/chapter05/Scala04_Function_NightMare1.scala	(date 1603104590400)
@@ -0,0 +1,15 @@
+package com.teacher.scala.day02.chapter05
+
+object Scala04_Function_NightMare1 {
+
+    def main(args: Array[String]): Unit = {
+
+        def test(): String = {
+            "zhangsan"
+        }
+        println("yyyyyyyyyyyyy")
+        () => {"zhangsan"};
+
+            println("xxxxxxxxxxxxxxxxxxxx")
+    }
+}
Index: src/test/java/com/teacher/scala/day02/chapter05/Scala04_Function_NightMare.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day02/chapter05/Scala04_Function_NightMare.scala	(date 1603104590402)
+++ src/test/java/com/teacher/scala/day02/chapter05/Scala04_Function_NightMare.scala	(date 1603104590402)
@@ -0,0 +1,77 @@
+package com.teacher.scala.day02.chapter05
+
+object Scala04_Function_NightMare {
+
+    def main(args: Array[String]): Unit = {
+
+        // 噩梦
+        // 马丁：能不能让函数式编程变的简单一些。
+        //       如果我能猜出来的话，那么开发人员就不用写代码。
+        //       这种思想就转变为一个规则：至简原则（能省则省）
+//        def f1( name : String ): String = {
+//            return "Name : " + name
+//        }
+//        println(f1("zhangsan"))
+
+        // TODO 1. 如果明确声明返回值类型，那么return可以省略
+        def f1( name : String ): String = {
+            //return "Name : " + name
+            "Name:" + name
+        }
+        //println(f1("zhangsan"))
+
+        // TODO 2. 如果能够通过代码的逻辑推断出返回值类型，那么返回值类型可以省略
+        def f2( name : String ) = {
+            //return "Name : " + name
+            "Name:" + name
+//            val age = 20
+//            if ( age == 20 ) {
+//                20
+//            } else {
+//
+//            }
+        }
+        //println(f2("zhangsan"))
+
+        // TODO 3. 如果函数的主体内容只有一行代码，那么大括号可以省略的
+        //def f3( ) = "zhangsan"
+
+        // TODO 4. 如果参数列表中没有声明参数，那么参数列表的小括号可以省略
+        //def f4 = "zhangsan"
+        //val f44 = "zhangsan"
+
+        // 如果函数省略了参数列表，那么在调用时不能使用小括号
+        //println(f4)
+        //f4
+
+        // TODO 5. 如果想要将函数不返回任何值，并且不想声明Unit类型，可以连同等号一起省略
+        // 如果函数明确声明为Unit，那么函数体中return不起作用
+        // 如果函数体中存在return关键字，那么需要明确返回值类型，不能省略
+        // 省略了等号的函数称之为过程函数
+//        def f5() {
+//            //return "zhangsan"
+//            "zhangsan"
+//        }
+//
+//        println(f5())
+
+        // TODO 6. 如果只关心函数的实现逻辑，而不关心名称，那么可以将关键字和名称同时省略
+        //         没有名称的函数，称之为匿名函数
+        //         匿名函数不能直接被调用，一般会赋值给变量来使用，这个变量可以简单认为是函数名称
+//        def sum(x:Int, y:Int) :Int = {
+//            x + y
+//        }
+
+        val f = (x:Int, y:Int) => { x + y }
+
+        println(f(10, 20))
+
+
+//        List(1,2,3,4).reduce(
+//            (x:Int, y:Int) => {
+//                x + y
+//            }
+//        )
+//        List(1,2,3,4).reduce(_+_)
+    }
+}
Index: src/test/java/com/teacher/scala/day02/chapter05/Scala03_Function_Normal.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day02/chapter05/Scala03_Function_Normal.scala	(date 1603104590397)
+++ src/test/java/com/teacher/scala/day02/chapter05/Scala03_Function_Normal.scala	(date 1603104590397)
@@ -0,0 +1,62 @@
+package com.teacher.scala.day02.chapter05
+
+object Scala03_Function_Normal {
+
+    def main(args: Array[String]): Unit = {
+
+        // TODO 可变参数
+        // 传递多个含义相同的参数，但是个数不确定。
+        def f1( name:String, name1:String, name2:String ): Unit = {
+
+        }
+       // f1()
+        //f1("zhangsan", "lisi", "wangwu")
+        // 函数在调用传参时，第一个值会和第一个参数进行绑定，第二值会和第二个参数绑定，依此类推
+        // 如果参数的含义是相同的，但是个数不确定的场合，可以采用可变参数
+        // Java中存在可变参数，但是和Scala的语法不一样。scala采用的是星号
+        // 可变 参数在使用时就是当成集合来使用
+        def f2( name:String* ): Unit = {
+            println(name)
+        }
+
+        // 可变参数不考虑类型，必须放置在参数列表的最后
+        // 参数列表中最多只能存在一个可变参数，而且必须放置在最后
+//        def f22( name:String*, password:Int ): Unit = {
+//
+//        }
+
+        //f2() // => 空集合： List()
+        //f2("zhangsan") // => WrappedArray(zhangsan)
+        //f2("zhangsan", "lisi") // => WrappedArray(zhangsan, lisi)
+
+        // 函数的参数是无法改变的，就类似于使用val声明的变量
+//        def f3( password : String ): Unit = {
+//            var pswd = password
+//            if ( pswd == null ) {
+//                pswd = "123123"
+//            }
+//            println("密码为：" + pswd)
+//        }
+        //f3(null)
+
+        // TODO 参数默认值
+        // 为了解决参数默认值以及参数无法改变的问题，scala提供了参数的默认值
+        // 当调用函数时，如果不传递这个参数，那么默认值就起作用
+        //               如果从传递这个参数，那么默认值就不起作用了。
+//        def f4( password :String = "123123" ): Unit = {
+//            println(password)
+//        }
+//
+//        f4()
+//        f4("000000")
+
+        // TODO 带名参数
+        // 马丁 ： 传参时将名称带上
+        def f5( password:String = "000000", name:String ): Unit = {
+            println(s"name : ${name}, password : ${password}")
+        }
+
+        //f5("123123", "zhangsan")
+        f5(name="zhangsan")
+    }
+}
Index: src/test/java/com/teacher/scala/day02/chapter05/Scala01_Function_Java.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day02/chapter05/Scala01_Function_Java.java	(date 1603104590408)
+++ src/test/java/com/teacher/scala/day02/chapter05/Scala01_Function_Java.java	(date 1603104590408)
@@ -0,0 +1,11 @@
+package com.teacher.scala.day02.chapter05;
+
+public class Scala01_Function_Java {
+    public static void main(String[] args) {
+
+        System.out.println(upperFirst("test"));
+    }
+    public static String upperFirst( String s ) {
+        return s.substring(0,1).toUpperCase();
+    }
+}
Index: src/test/java/com/teacher/scala/day02/chapter05/Scala02_Function1.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day02/chapter05/Scala02_Function1.scala	(date 1603104590384)
+++ src/test/java/com/teacher/scala/day02/chapter05/Scala02_Function1.scala	(date 1603104590384)
@@ -0,0 +1,74 @@
+package com.teacher.scala.day02.chapter05
+
+object Scala02_Function1 {
+
+    def main(args: Array[String]): Unit = {
+
+        // 25
+        def test(
+                i1:Int,
+                i2:Int,
+                i3:Int,
+                i4:Int,
+                i5:Int,
+                i6:Int,
+                i7:Int,
+                i8:Int,
+                i9:Int,
+                i10:Int,
+                i11:Int,
+                i12:Int,
+                i13:Int,
+                i14:Int,
+                i15:Int,
+                i16:Int,
+                i17:Int,
+                i18:Int,
+                i19:Int,
+                i20:Int,
+                i21:Int,
+                i22:Int,
+                i23:Int,
+                i24:Int,
+                i25:Int
+                ): Unit = {
+            println("xxxxx")
+        }
+
+        test(
+            1,
+            1,
+            1,
+            1,
+            1,
+            1,
+            1,
+            1,
+            1,
+            1,
+            1,
+            1,
+            1,
+            1,
+            1,
+            1,
+            1,
+            1,
+            1,
+            1,
+            1,
+            1,
+            1,
+            1,
+            1
+        )
+
+        // 在将函数作为对象传递给别人使用的时候，那么函数的参数最多只能22个
+        // 函数类型, 参数最多只能为Function22
+        // Scala说完全面向对象语言 ： 函数也是对象
+        //
+        //val a : Function23 = test _
+        //val u : User = new User()
+
+    }
+}
Index: src/test/java/com/teacher/scala/day02/chapter05/Scala02_Function.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day02/chapter05/Scala02_Function.scala	(date 1603104590413)
+++ src/test/java/com/teacher/scala/day02/chapter05/Scala02_Function.scala	(date 1603104590413)
@@ -0,0 +1,57 @@
+package com.teacher.scala.day02.chapter05
+
+object Scala02_Function {
+
+    def main(args: Array[String]): Unit = {
+
+        // IO
+        // TODO 无参，无返回值函数
+        def f1(): Unit = {
+            println("f1...")
+        }
+        //f1() // 调用函数1
+        //f1   // 调用函数2，如果函数没有参数，那么可以在调用时省略小括号
+
+        // TODO 无参，有返回值函数
+        def f2(): String = {
+            return "zhangsan"
+        }
+
+//        val name = f2()
+//        val name1 = f2
+//        println(name)
+//        println(name1)
+
+        // TODO 有参，无返回值函数
+//        def f3( s : String ): Unit = {
+//            println("name = " + s)
+//        }
+//
+//        f3("zhangsan")
+
+        // TODO 有参，有返回值函数
+//        def f4( s : String ): String = {
+//            return "Name : " + s
+//        }
+//
+//        val name = f4("lisi")
+//        println(name)
+
+        // TODO 多参，无返回值函数
+//        def f5( name:String, name1 : String ): Unit = {
+//            println(name + ", " + name1)
+//        }
+//
+//        f5("zhangsan", "lisi")
+
+        // TODO 多参，有返回值函数
+        def f6( name:String, name1:String ): String = {
+            return "名称列表为：" +  name + ", " + name1
+        }
+
+        val namelist = f6("zhangsan", "lisi")
+        println(namelist)
+
+        // 参数的个数没有限制的，想传多少传多少
+    }
+}
Index: src/test/java/com/teacher/scala/day02/chapter05/Scala01_Function.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day02/chapter05/Scala01_Function.scala	(date 1603104590389)
+++ src/test/java/com/teacher/scala/day02/chapter05/Scala01_Function.scala	(date 1603104590389)
@@ -0,0 +1,53 @@
+package com.teacher.scala.day02.chapter05
+
+object Scala01_Function {
+
+    def main(args: Array[String]): Unit = {
+
+        // 函数的声明
+        /*
+        【修饰符】 def 函数名( 参数1，参数2 ): 返回值类型 = {
+             函数体
+         }
+
+         */
+
+        // 函数和方法？
+        // function & method
+        // 函数表示将特定的功能进行封装，然后调用这个功能。
+        // 方法其实也是类的功能的封装。然后通过这个类的对象访问方法
+        // scala中方法其实就是函数。但是声明在特殊的地方（类中）。所以需要遵循方法的约束（限制）
+        //       比如方法可以重载和重写的, 函数是不行的，
+        //       在同一个作用域中，如果含有相同名称的函数会出现错误
+
+        val s = "abc"
+
+//        def upperFirst( s:String ): String = {
+//            return s.substring(0,1).toUpperCase
+//        }
+//        def upperFirst(  ): String = {
+//            return "123"
+//        }
+//        upperFirst(s)
+
+
+
+    }
+//    def upperFirst( s:String ): String = {
+//        return s.substring(0,1).toUpperCase
+//    }
+//    def upperFirst( ): Unit = {
+//        //return s.substring(0,1).toUpperCase
+//    }
+    def test(): Unit = {
+//        def test1(): Unit ={
+//
+//        }
+//        def test2(): Unit = {
+//
+//        }
+//
+//        test1()
+//        test2()
+    }
+}
Index: src/test/java/com/teacher/scala/day02/chapter04/Scala04_Flow_while.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day02/chapter04/Scala04_Flow_while.scala	(date 1603110337751)
+++ src/test/java/com/teacher/scala/day02/chapter04/Scala04_Flow_while.scala	(date 1603110337751)
@@ -0,0 +1,28 @@
+package com.teacher.scala.day02.chapter04
+
+object Scala04_Flow_while {
+
+    def main(args: Array[String]): Unit = {
+
+//        while ( true ) {
+//
+//        }
+//        val iter= new java.util.HashMap().keySet().iterator()
+//        while ( iter.hasNext ) {
+//            val k = iter.next()
+//            val v = map.get(k)
+//        }
+        val s = "abc" * 2
+        println(s)
+
+//        val buf = new StringBuilder
+//        for (i <- 0 until 2) {
+//            buf.append("abc".toString())
+//        }
+//        println(buf.toString())
+
+
+
+    }
+
+}
Index: src/test/java/com/teacher/scala/day02/chapter04/Scala05_Flow_Break.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day02/chapter04/Scala05_Flow_Break.java	(date 1603104590410)
+++ src/test/java/com/teacher/scala/day02/chapter04/Scala05_Flow_Break.java	(date 1603104590410)
@@ -0,0 +1,18 @@
+package com.teacher.scala.day02.chapter04;
+
+public class Scala05_Flow_Break {
+    public static void main(String[] args) {
+
+        for ( int i = 1; i <= 10; i++ ) {
+            if ( i % 2 == 0 ) {
+                // Scala中没有break关键字
+                break;
+                // Scala中没有continue关键字
+                //continue;
+            }
+            System.out.println(i);
+        }
+        System.out.println("继续执行。。。");
+
+    }
+}
Index: src/test/java/com/teacher/scala/day02/chapter04/Scala03_Flow_for2.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day02/chapter04/Scala03_Flow_for2.scala	(date 1603104590418)
+++ src/test/java/com/teacher/scala/day02/chapter04/Scala03_Flow_for2.scala	(date 1603104590418)
@@ -0,0 +1,22 @@
+package com.teacher.scala.day02.chapter04
+
+object Scala03_Flow_for2 {
+
+    def main(args: Array[String]): Unit = {
+
+        // 默认情况下，for循环表达式的返回结果为Unit类型对象()
+        val result = for ( i <- 1 to 5 ) yield {
+            i * 2
+        }
+
+        println(result)
+
+        // yield关键字可以使用反引号进行引用声明
+        Thread.`yield`()
+
+        val `private` = "私有的"
+
+
+    }
+
+}
Index: src/test/java/com/teacher/scala/day02/chapter04/Scala03_Flow_for1.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day02/chapter04/Scala03_Flow_for1.scala	(date 1603104590378)
+++ src/test/java/com/teacher/scala/day02/chapter04/Scala03_Flow_for1.scala	(date 1603104590378)
@@ -0,0 +1,41 @@
+package com.teacher.scala.day02.chapter04
+
+object Scala03_Flow_for1 {
+
+    def main(args: Array[String]): Unit = {
+
+        // 循环守卫
+//        val a : Range = 1 to 5
+//
+//
+//        for ( i <- Range(1,5) if i != 3 ) {
+//            if ( i != 3 ) {
+//                println(i)
+//            }
+//
+//        }
+
+        // 循环步长
+//        for ( i <- Range(1,5, 2)  ) {
+//            println(i)
+//        }
+
+        // 循环嵌套
+        for ( i <- Range(1,5) ) { // i=3
+            for ( j <- Range(1,4) ) { // j = 1,2,3
+                println("i = " + i + ",j = " + j )
+            }
+        }
+        for ( i <- Range(1,5); j <- Range(1,4) ) {
+            println("i = " + i + ",j = " + j )
+        }
+
+        // 循环引入变量
+        for ( i <- Range(1,5); j = i - 1 ) {
+            println("j = " + j )
+        }
+
+
+    }
+
+}
Index: src/test/java/com/teacher/scala/day02/chapter04/Scala05_Flow_Break1.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day02/chapter04/Scala05_Flow_Break1.scala	(date 1603104590381)
+++ src/test/java/com/teacher/scala/day02/chapter04/Scala05_Flow_Break1.scala	(date 1603104590381)
@@ -0,0 +1,26 @@
+package com.teacher.scala.day02.chapter04
+
+import scala.util.control.Breaks
+
+object Scala05_Flow_Break1 {
+
+    def main(args: Array[String]): Unit = {
+
+        // Scala中没有continue,可以采用if条件代替
+
+        // Scala中没有break,因为不是面向对象的。通过使用面向对象的语法来代替
+        Breaks.breakable{
+            for ( i <- 1 to 10 ) {
+                if ( i % 2 == 0 ) {
+                    Breaks.break()
+                }
+                println(i)
+            }
+        }
+
+        System.out.println("继续执行。。。")
+
+
+    }
+
+}
Index: src/test/java/com/teacher/scala/day02/chapter04/Scala03_Flow_for.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day02/chapter04/Scala03_Flow_for.scala	(date 1603104590387)
+++ src/test/java/com/teacher/scala/day02/chapter04/Scala03_Flow_for.scala	(date 1603104590387)
@@ -0,0 +1,40 @@
+package com.teacher.scala.day02.chapter04
+
+object Scala03_Flow_for {
+
+    def main(args: Array[String]): Unit = {
+
+        /*
+        java
+
+        for ( int i = 0; i < 10; i=i+2 ) {
+            sout( i )
+        }
+
+        JDK1.5
+        javac.exe
+        for ( Object obj : list ) {
+           sout(obj)
+        }
+
+         */
+
+        // Scala中循环和JAVA中的增强for循环很类型
+        val range = 1 to 5 // from 1 to 5 => 1,2,3,4,5
+        //1.to(5)
+
+        val range1 = 1 until 5 // from 1 to 5 => 1,2,3,4
+        //1.until(5)
+
+//        for ( i <- range1 ) {
+//            println(i)
+//        }
+
+        for ( c <- "abc" ) {
+            println(c)
+        }
+
+
+    }
+
+}
Index: src/test/java/com/teacher/scala/day02/chapter04/Scala02_Flow_If1.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day02/chapter04/Scala02_Flow_If1.scala	(date 1603104590395)
+++ src/test/java/com/teacher/scala/day02/chapter04/Scala02_Flow_If1.scala	(date 1603104590395)
@@ -0,0 +1,22 @@
+package com.teacher.scala.day02.chapter04
+
+object Scala02_Flow_If1 {
+
+    def main(args: Array[String]): Unit = {
+
+
+        // 表达式是有返回值
+        val age = 40
+        val result = if ( age == 20 ) {
+            println("年龄等于20") // Unit
+            null
+        }
+
+        // 表达式的返回值结果为表达式满足条件的最后一行逻辑代码的执行结果
+        // Unit类型的对象只有一个，就是()
+        // 返回结果的类型？
+        println(result) // Any
+
+    }
+
+}
Index: src/test/java/com/teacher/scala/day02/chapter04/Scala02_Flow_If.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day02/chapter04/Scala02_Flow_If.scala	(date 1603104590415)
+++ src/test/java/com/teacher/scala/day02/chapter04/Scala02_Flow_If.scala	(date 1603104590415)
@@ -0,0 +1,33 @@
+package com.teacher.scala.day02.chapter04
+
+object Scala02_Flow_If {
+
+    def main(args: Array[String]): Unit = {
+
+        // TODO if
+        val age : Int = 30
+//        if ( age == 20 ) {
+//            println("年龄等于20")
+//            println("年龄不等于20")
+//        }
+//        if ( age == 30 ) {
+//            println("年龄等于30")
+//        } else {
+//            println("年龄不等于30")
+//        }
+
+        if ( age < 16 ) {
+            println("少年")
+        } else if (  age < 30 ) {
+            println("青年")
+        } else if (  age < 45 ) {
+            println("壮年")
+        } else if (  age < 60 ) {
+            println("中年")
+        } else {
+            println("老年")
+        }
+
+    }
+
+}
Index: src/test/java/com/teacher/scala/day02/chapter04/Scala01_Flow.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day02/chapter04/Scala01_Flow.scala	(date 1603104590392)
+++ src/test/java/com/teacher/scala/day02/chapter04/Scala01_Flow.scala	(date 1603104590392)
@@ -0,0 +1,18 @@
+package com.teacher.scala.day02.chapter04
+
+object Scala01_Flow {
+
+    def main(args: Array[String]): Unit = {
+        val j = 10
+        println(j)
+
+        // 先声明，再使用
+        test()
+
+
+
+    }
+    def test(): Unit = {
+
+    }
+}
Index: src/main/java/com/nswdwy/scala/chapter01/Test01.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter01/Test01.java	(date 1603074188462)
+++ src/main/java/com/nswdwy/scala/chapter01/Test01.java	(date 1603074188462)
@@ -0,0 +1,19 @@
+package com.nswdwy.scala.chapter01;
+
+/**
+ * @author yycstart
+ * @create 2020-10-17 11:53
+ */
+public class Test01 {
+    public static void main(String[] args) {
+//        int a = 1;
+//        int b = 1;
+//        a = a++;
+//        b = b++;
+//        System.out.println("a:" + a + ",b:"+ b);
+
+
+    }
+
+
+}
Index: src/main/java/com/nswdwy/scala/chapter01/test.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter01/test.scala	(date 1603071467117)
+++ src/main/java/com/nswdwy/scala/chapter01/test.scala	(date 1603071467117)
@@ -0,0 +1,9 @@
+package com.nswdwy.scala.chapter01
+
+/**
+ * @author yycstart
+ * @create 2020-10-19 9:37
+ */
+object test {
+
+}
Index: src/main/java/com/nswdwy/scala/chapter02/Function_Normal.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter02/Function_Normal.scala	(date 1603093313855)
+++ src/main/java/com/nswdwy/scala/chapter02/Function_Normal.scala	(date 1603093313855)
@@ -0,0 +1,15 @@
+package com.nswdwy.scala.chapter02
+
+/**
+ * @author yycstart
+ * @create 2020-10-19 15:38
+ */
+object Function_Normal {
+
+  def main(args: Array[String]): Unit = {
+      //多个含义相同的参数，个数不确定
+    def f1(ags: String*) :Unit={
+
+    }
+  }
+}
Index: src/main/java/com/nswdwy/scala/chapter02/test.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter02/test.scala	(date 1603092583799)
+++ src/main/java/com/nswdwy/scala/chapter02/test.scala	(date 1603092583799)
@@ -0,0 +1,36 @@
+package com.nswdwy.scala.chapter02
+
+/**
+ * @author yycstart
+ * @create 2020-10-19 15:24
+ */
+object test {
+  def main(args: Array[String]): Unit = {
+    //无参无返回值
+    def f1(): Unit ={
+      println("f1...")
+    }
+    //无参有返回值
+    def f2(): String ={
+      val s :String = "f2..."
+      return s;
+    }
+    //有参无返回值
+    def f3(s :String ): Unit ={
+      println(s)
+    }
+    //有参有返回值
+    def f4(): Unit ={
+
+    }
+    //多参无返回值
+    def f5(): Unit ={
+
+    }
+    //多参有返回值
+    def f6(): Unit ={
+
+    }
+  }
+
+}
Index: src/test/java/com/teacher/scala/day03/chapter05/Scala10_Function.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day03/chapter05/Scala10_Function.scala	(date 1603189009510)
+++ src/test/java/com/teacher/scala/day03/chapter05/Scala10_Function.scala	(date 1603189009510)
@@ -0,0 +1,18 @@
+package com.teacher.scala.day03.chapter05
+
+object Scala10_Function {
+
+    def main(args: Array[String]): Unit = {
+        // 函数, 编译后其实就是类中的方法，但是使用private，static， final修饰
+        def fun(): Unit = {
+            println("fun....")
+        }
+    }
+    // 方法， 编译后其实就是类的方法，所以可以根据对象来使用
+    def test(): Unit = {
+
+    }
+    def fun(): Unit = {
+
+    }
+}
Index: src/test/java/com/teacher/scala/day03/chapter05/Scala09_Function.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day03/chapter05/Scala09_Function.scala	(date 1603202790916)
+++ src/test/java/com/teacher/scala/day03/chapter05/Scala09_Function.scala	(date 1603202790916)
@@ -0,0 +1,21 @@
+package com.teacher.scala.day03.chapter05
+
+object Scala09_Function {
+
+    def main(args: Array[String]): Unit = {
+        def fun9(): String = {
+            println("function...")
+            "zhangsan"  // 10000 User Object
+        }
+        val a = fun9()
+        println("----------") // 10min
+       // val a = fun9()
+        println(a)
+
+        // 顺序执行
+//         function...
+//         ---------
+//         zhangsan
+
+    }
+}
Index: output/test.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- output/test.txt	(date 1603032847451)
+++ output/test.txt	(date 1603032847451)
@@ -0,0 +1,2 @@
+zhangsan
+lisi
Index: output/word.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- output/word.txt	(date 1602920366000)
+++ output/word.txt	(date 1602920366000)
@@ -0,0 +1,2 @@
+hello
+scala
\ No newline at end of file
Index: src/test/java/com/teacher/scala/day03/chapter06/Scala03_Object_Import_Java.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day03/chapter06/Scala03_Object_Import_Java.java	(date 1603189216723)
+++ src/test/java/com/teacher/scala/day03/chapter06/Scala03_Object_Import_Java.java	(date 1603189216723)
@@ -0,0 +1,14 @@
+package com.teacher.scala.day03.chapter06;
+
+
+import static com.teacher.scala.day01.bean.Student.id;
+import static com.teacher.scala.day01.bean.Student.reg;
+
+public class Scala03_Object_Import_Java {
+    public static void main(String[] args) {
+
+        reg();
+        System.out.println(id);
+
+    }
+}
Index: src/main/java/com/nswdwy/scala/chapter07_day07/practice/_1_Match.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter07_day07/practice/_1_Match.scala	(date 1603508417274)
+++ src/main/java/com/nswdwy/scala/chapter07_day07/practice/_1_Match.scala	(date 1603508417274)
@@ -0,0 +1,16 @@
+package com.nswdwy.scala.chapter07_day07.practice
+
+/**
+ * @author yycstart
+ * @create 2020-10-24 10:48
+ */
+object _1_Match {
+  def main(args: Array[String]): Unit = {
+    val list: List[Any] = List(1, 2, 3, 4, 5, "test")
+    val result = list.collect{
+      case d:Int => d+1
+    }
+    println(result)
+
+  }
+}
Index: src/test/java/com/teacher/scala/day07/cahpter10/Scala06_Transform.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day07/cahpter10/Scala06_Transform.scala	(date 1603528349853)
+++ src/test/java/com/teacher/scala/day07/cahpter10/Scala06_Transform.scala	(date 1603528349853)
@@ -0,0 +1,17 @@
+package com.teacher.scala.day07.cahpter10
+
+object Scala06_Transform {
+
+    def main(args: Array[String]): Unit = {
+
+        // 伴生对象有apply方法，是编译器默认识别的，所以apply可以不用写
+        // User()
+        // 伴生类对象也有apply方法，是编译器默认识别的，所以apply可以不用写
+
+        // scala中没有字符串，用的就是java中String
+        val s : String = "abcdefg"
+        //val c: Char = s.apply(0)
+        val c: Char = s(0)
+        println(c)
+    }
+}
Index: src/test/java/com/teacher/scala/day07/bean/Task.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day07/bean/Task.java	(date 1603528556084)
+++ src/test/java/com/teacher/scala/day07/bean/Task.java	(date 1603528556084)
@@ -0,0 +1,7 @@
+package com.teacher.scala.day07.bean;
+
+import java.io.Serializable;
+
+public class Task implements Serializable {
+    public String data = "zhangsan";
+}
Index: src/test/java/com/teacher/scala/day07/cahpter10/Scala05_Transform.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day07/cahpter10/Scala05_Transform.scala	(date 1603528427203)
+++ src/test/java/com/teacher/scala/day07/cahpter10/Scala05_Transform.scala	(date 1603528427203)
@@ -0,0 +1,56 @@
+package com.teacher.scala.day07.cahpter10
+
+
+object Scala05_Transform extends Test with MyTrait {
+
+    def main(args: Array[String]): Unit = {
+
+        // 当前作用域
+        // 父类(伴生对象)作用域
+        // 特质（伴生对象）作用域
+        // 包对象
+        // 使用的时候直接导入即可
+        import com.teacher.scala.day07.bean.TestTransform
+        val user = new UserYYY()
+        user.insertUser()
+        user.updateUser()
+    }
+    // 隐式类
+//    implicit class UserExt(user:User) {
+//        def updateUser(): Unit = {
+//            println("update user...")
+//        }
+//    }
+    class UserYYY {
+        def updateUser(): Unit = ???
+
+        def insertUser(): Unit = {
+            println("insert user...")
+        }
+    }
+}
+class Test {
+
+}
+object Test {
+//    implicit class UserExt(user:User) {
+//        def updateUser(): Unit = {
+//            println("update user...")
+//        }
+//    }
+}
+trait MyTrait {
+//    implicit class UserExt(user:User) {
+//        def updateUser(): Unit = {
+//            println("update user...")
+//        }
+//    }
+}
+object MyTrait {
+//    implicit class UserExt(user:User) {
+//        def updateUser(): Unit = {
+//            println("update user...")
+//        }
+//    }
+}
+
Index: src/test/java/com/teacher/scala/day07/cahpter12/Scala01_Regex.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day07/cahpter12/Scala01_Regex.scala	(date 1603528059392)
+++ src/test/java/com/teacher/scala/day07/cahpter12/Scala01_Regex.scala	(date 1603528059392)
@@ -0,0 +1,29 @@
+package com.teacher.scala.day07.cahpter12
+
+import scala.util.matching.Regex
+
+object Scala01_Regex {
+
+    def main(args: Array[String]): Unit = {
+
+        // 正则表达式
+        // 模式匹配用于匹配数据的规则
+        // 正则表达式也是一种匹配，只针对于字符串
+
+        // 定义规则
+//        val r: Regex = "a{2}".r
+//
+//        val s : String = "acaa"
+//
+//        val maybeString: Option[String] = r.findFirstIn(s)
+//        if ( maybeString.isEmpty ) {
+//            println("字符串不符合规则")
+//        } else {
+//            println("字符串符合规则 :" + maybeString.get)
+//        }
+
+        val pattern1 = new Regex("(S|x)cala")
+        val str1 = "Scala is scalable Language"
+        println((pattern1 findAllIn str1).mkString(","))
+    }
+}
Index: src/test/java/com/teacher/scala/day07/cahpter12/Scala02_Regex.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day07/cahpter12/Scala02_Regex.scala	(date 1603528059396)
+++ src/test/java/com/teacher/scala/day07/cahpter12/Scala02_Regex.scala	(date 1603528059396)
@@ -0,0 +1,20 @@
+package com.teacher.scala.day07.cahpter12
+
+import scala.util.matching.Regex
+
+object Scala02_Regex {
+
+    def main(args: Array[String]): Unit = {
+        // 构建正则表达式
+//        println(isMobileNumber("18801234567"))
+//        println(isMobileNumber("11111111111"))
+
+        val r = """([_A-Za-z0-9-]+(?:\.[_A-Za-z0-9-\+]+)*)(@[A-Za-z0-9-]+(?:\.[A-Za-z0-9-]+)*(?:\.[A-Za-z]{2,})) ?""".r
+        println(r.replaceAllIn("abc.edf+jianli@gmail.com   hello@gmail.com.cn", (m => "*****" + m.group(2))))
+    }
+    def isMobileNumber(number: String): Boolean ={
+        val regex = "^((13[0-9])|(14[5,7,9])|(15[^4])|(18[0-9])|(17[0,1,3,5,6,7,8]))[0-9]{8}$".r
+        val length = number.length
+        regex.findFirstMatchIn(number.slice(length-11,length)) != None
+    }
+}
Index: src/test/java/com/teacher/scala/day07/cahpter11/Scala04_Generic.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day07/cahpter11/Scala04_Generic.scala	(date 1603528030319)
+++ src/test/java/com/teacher/scala/day07/cahpter11/Scala04_Generic.scala	(date 1603528030319)
@@ -0,0 +1,32 @@
+package com.teacher.scala.day07.cahpter11
+
+object Scala04_Generic {
+
+    def main(args: Array[String]): Unit = {
+
+        //val c : Consumer[User] = new Consumer[User]
+        //val c : Consumer[Child] = new Consumer[Child]
+        //val data: User = c.consumer().data
+        //println(data)
+
+        val p : Producer[User] = new Producer[User]
+       // p.produce( new Message[User]() )
+        //p.produce( new Message[Parent]() )
+        //p.produce( new Message[Child]() )
+
+    }
+    class Consumer[T] {
+        // scala中泛型的上限采用是颜文字
+        def consumer():Message[_ <: T] = {
+            null
+        }
+    }
+    class Producer[T] {
+        // scala中泛型的下限采用是颜文字
+        def produce( m : Message[ _ >: T ] ): Unit = {
+        }
+    }
+    class Message[T] {
+        var data : T = _
+    }
+}
Index: src/test/java/com/teacher/scala/day07/cahpter11/Scala05_Generic.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day07/cahpter11/Scala05_Generic.scala	(date 1603528030307)
+++ src/test/java/com/teacher/scala/day07/cahpter11/Scala05_Generic.scala	(date 1603528030307)
@@ -0,0 +1,30 @@
+package com.teacher.scala.day07.cahpter11
+
+object Scala05_Generic {
+
+    def main(args: Array[String]): Unit = {
+        // 上下文限定和隐式转换有关系
+//        def f[A : Test](a: A) = println(a)
+//        implicit val test : Test[Child] = new Test[Child]
+//        f( new Child() )
+
+        //val list = List(1,2,3,4)
+
+        // Int, Int => Int
+        //val i: Int = list.reduce(_+_)
+        //list.reduceLeft()
+        //println(i)
+
+        val users: List[User] = List(
+            new User(), new User()
+        )
+//        val child: Child = users.reduce[Child](
+//            (x, y) => x
+//        )
+        val p: Parent = users.reduce[Parent](
+            (x, y) => x
+        )
+        println(p)
+
+    }
+}
Index: src/test/java/com/teacher/scala/day07/cahpter11/Scala03_Generic.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day07/cahpter11/Scala03_Generic.scala	(date 1603528030304)
+++ src/test/java/com/teacher/scala/day07/cahpter11/Scala03_Generic.scala	(date 1603528030304)
@@ -0,0 +1,39 @@
+package com.teacher.scala.day07.cahpter11
+
+object Scala03_Generic {
+
+    def main(args: Array[String]): Unit = {
+
+        // Scala中的泛型采用的是中括号声明
+        // 泛型不可变
+        val ttt1 : TTT[B] = new TTT[B]()
+        //val ttt2 : TTT[B] = new TTT[A]()
+        //val ttt3 : TTT[B] = new TTT[C]()
+
+        // Scala希望将类型和泛型当成一个整体来使用
+        // 这个整体的类型就存在上下级关系
+        //  如果 TTT[父类型]，那么TTT[子类型]就是TTT[父类型] 的子类
+        // 这种变化称之为泛型的协变 ：在泛型前增加特殊符号，+
+        // TODO class TTT[+T]
+        // val ttt3 : TTT[B] = new TTT[C]() (ok)
+        //val ttt2 : TTT[B] = new TTT[A]() （X）
+        // 还有一种情况，TTT[父类型]反过来当成TTT[子类型]的子类型
+        // 这种变化称之为泛型的逆变 ：在泛型前增加特殊符号，-
+        // TODO class TTT[-T]
+        //val ttt2 : TTT[B] = new TTT[A]()// (Ok)
+        //val ttt3 : TTT[B] = new TTT[C]() (X)
+
+    }
+}
+class TTT[-T] {
+
+}
+class A {
+
+}
+class B extends A {
+
+}
+class C extends B{
+
+}
Index: src/test/java/com/teacher/scala/day07/cahpter11/Scala03_Generic_Java.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day07/cahpter11/Scala03_Generic_Java.java	(date 1603528556081)
+++ src/test/java/com/teacher/scala/day07/cahpter11/Scala03_Generic_Java.java	(date 1603528556081)
@@ -0,0 +1,17 @@
+package com.teacher.scala.day07.cahpter11;
+
+
+
+import com.teacher.scala.day07.bean.Task;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public class Scala03_Generic_Java {
+    public static void main(String[] args) {
+
+        List<Task> list = new ArrayList<Task>();
+        System.out.println(list);
+    }
+}
+
Index: src/test/java/com/teacher/scala/day07/cahpter11/Scala01_Generic_Java.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day07/cahpter11/Scala01_Generic_Java.java	(date 1603528030313)
+++ src/test/java/com/teacher/scala/day07/cahpter11/Scala01_Generic_Java.java	(date 1603528030313)
@@ -0,0 +1,62 @@
+package com.teacher.scala.day07.cahpter11;
+
+import java.util.*;
+public class Scala01_Generic_Java {
+    public static void main(String[] args) {
+
+        // TODO 泛型和类型是两个截然不同的概念，也是两个不同层面的操作
+        // 泛型向后约束，无法向前约束
+
+        // 泛型其实是对外部类型的内部数据的类型进行约束
+//        List list = new ArrayList();
+//        list.add(new Emp());
+//
+//        List<User> users = list;
+//
+//        for ( User user: users ) {
+//            System.out.println(user);
+//        }
+        // TODO 泛型和类型无关
+        // 泛型不可变
+        //Test<User> userTest = new Test<User>();
+        //Test<User> userTest1 = new Test<Parent>();
+        //Test<User> userTest2 = new Test<Child>();
+        //List<String> wordList = new ArrayList<String>();
+        //test(wordList);
+
+        // TODO 泛型的上限和下限
+        test( User.class );
+        //test( Parent.class ); // Error
+        test( Child.class );
+
+        test1( User.class );
+        test1( Parent.class );
+        //test1( Child.class ); // Error
+
+    }
+    // 上限 : extends
+    public static void test(Class<? extends User> c) {
+
+    }
+    // 下限：super
+    public static void test1(Class<? super User> c) {
+
+    }
+//    public static void test( Collection<String> sss ) {
+//    }
+//    public static void test( List<Object> objs ) {
+//        System.out.println("test....");
+//    }
+}
+class Test<T> {
+
+}
+class Parent {
+
+}
+class User extends Parent {
+
+}
+class Child extends User {
+
+}
Index: src/test/java/com/teacher/scala/day07/cahpter11/Scala02_Generic_Java.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day07/cahpter11/Scala02_Generic_Java.java	(date 1603528030317)
+++ src/test/java/com/teacher/scala/day07/cahpter11/Scala02_Generic_Java.java	(date 1603528030317)
@@ -0,0 +1,30 @@
+package com.teacher.scala.day07.cahpter11;
+
+public class Scala02_Generic_Java {
+    public static void main(String[] args) {
+
+        Consumer c = new Consumer();
+        // 获取的数据一定要满足某些功能
+        // 泛型的上限一般是用于保证数据的功能不缺失
+        final Message<? extends User> consume = c.consume();
+        final User data = consume.data;
+
+        // 泛型的下限一般用于保证数据不进行扩展
+        new Producer().produce( new Message<User>() );
+        new Producer().produce( new Message<Parent>() );
+        //new Producer().produce( new Message<Child>() );（X）
+    }
+}
+class Message<T> {
+    public T data;
+}
+class Consumer {
+    public Message<? extends User> consume() {
+        return null;
+    }
+}
+class Producer {
+    public void produce( Message<? super User> m ) {
+
+    }
+}
Index: src/main/java/com/nswdwy/scala/chapter06_day04/review/_2_ClassTest.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter06_day04/review/_2_ClassTest.scala	(date 1603279885793)
+++ src/main/java/com/nswdwy/scala/chapter06_day04/review/_2_ClassTest.scala	(date 1603279885793)
@@ -0,0 +1,15 @@
+package com.nswdwy.scala.chapter06_day04.review
+
+/**
+ * @author yycstart
+ * @create 2020-10-21 18:48
+ */
+object _2_ClassTest {
+  def main(args: Array[String]): Unit = {
+
+  }
+  //声明类
+  class aa{
+
+  }
+}
Index: src/main/java/com/nswdwy/scala/chapter06_day04/review/_3_FieldTest.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter06_day04/review/_3_FieldTest.scala	(date 1603279885779)
+++ src/main/java/com/nswdwy/scala/chapter06_day04/review/_3_FieldTest.scala	(date 1603279885779)
@@ -0,0 +1,28 @@
+package com.nswdwy.scala.chapter06_day04.review
+
+import scala.beans.BeanProperty
+
+/**
+ * @author yycstart
+ * @create 2020-10-21 18:48
+ */
+object _3_FieldTest {
+  def main(args: Array[String]): Unit = {
+
+    val user : userField = new userField()
+    println(user.s2)
+    user.s2 = "zhangsan"
+    println(user.s2)
+    println("----------")
+    println(user.s3)
+    user.s3 = 12
+    println(user.s3)
+  }
+
+  class userField{
+//    val s1 : String = _  //val定义的变量不能用 _ ,来默认初始化
+    var s2 : String = _
+    @BeanProperty
+    var s3 : Int = _
+  }
+}
Index: src/main/java/com/nswdwy/scala/chapter06_day04/review/package.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter06_day04/review/package.scala	(date 1603279885812)
+++ src/main/java/com/nswdwy/scala/chapter06_day04/review/package.scala	(date 1603279885812)
@@ -0,0 +1,12 @@
+package com.nswdwy.scala.chapter06_day04
+
+/**
+ * @author yycstart
+ * @create 2020-10-21 18:14
+ */
+package object _1_review {
+  var name : String = "zhangsan"
+  def login() = {
+
+  }
+}
Index: src/main/java/com/nswdwy/scala/chapter06_day04/pratice/Test.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter06_day04/pratice/Test.scala	(date 1603279885803)
+++ src/main/java/com/nswdwy/scala/chapter06_day04/pratice/Test.scala	(date 1603279885803)
@@ -0,0 +1,14 @@
+package com.nswdwy.scala.chapter06_day04.pratice
+
+/**
+ * @author yycstart
+ * @create 2020-10-21 9:53
+ */
+object Test {
+  def main(args: Array[String]): Unit = {
+
+  }
+  class Th{
+
+  }
+}
Index: src/main/java/com/nswdwy/scala/chapter06_day04/pratice/TraitTest1.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter06_day04/pratice/TraitTest1.scala	(date 1603279885789)
+++ src/main/java/com/nswdwy/scala/chapter06_day04/pratice/TraitTest1.scala	(date 1603279885789)
@@ -0,0 +1,26 @@
+package com.nswdwy.scala.chapter06_day04.pratice
+
+/**
+ * @author yycstart
+ * @create 2020-10-21 16:06
+ */
+object TraitTest1 {
+
+  def main(args: Array[String]): Unit = {
+    new D()
+  }
+
+
+   trait A{
+      println("AAAAAAA")
+  }
+  trait B extends  A{
+      println("BBBBBBBB")
+  }
+  class C extends B {
+       println("CCCCC")
+  }
+  class D extends C with A with B{
+    println("DDDDDD")
+  }
+}
Index: src/test/java/com/teacher/scala/day07/bean/TestTransform.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day07/bean/TestTransform.scala	(date 1603518814202)
+++ src/test/java/com/teacher/scala/day07/bean/TestTransform.scala	(date 1603518814202)
@@ -0,0 +1,11 @@
+package com.teacher.scala.day07.bean
+
+import com.teacher.scala.day07.cahpter10.Scala05_Transform.UserYYY
+
+object TestTransform {
+    implicit class UserExt(user:UserYYY) {
+        def updateUser(): Unit = {
+            println("update user...")
+        }
+    }
+}
Index: src/main/java/com/nswdwy/scala/chapter06_day04/pratice/TraitTest.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter06_day04/pratice/TraitTest.scala	(date 1603279885809)
+++ src/main/java/com/nswdwy/scala/chapter06_day04/pratice/TraitTest.scala	(date 1603279885809)
@@ -0,0 +1,25 @@
+package com.nswdwy.scala.chapter06_day04.pratice
+
+/**
+ * @author yycstart
+ * @create 2020-10-21 16:06
+ */
+object TraitTest {
+
+  def main(args: Array[String]): Unit = {
+      new D()
+  }
+
+   trait A{
+      println("AAAAAAA")
+  }
+  trait B extends  A{
+      println("BBBBBBBB")
+  }
+  class C extends B {
+       println("CCCCC")
+  }
+  class D extends C with A with B{
+    println("DDDDDD")
+  }
+}
Index: src/test/java/com/teacher/scala/day07/cahpter10/Scala04_Transform.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day07/cahpter10/Scala04_Transform.scala	(date 1603518687225)
+++ src/test/java/com/teacher/scala/day07/cahpter10/Scala04_Transform.scala	(date 1603518687225)
@@ -0,0 +1,27 @@
+package com.teacher.scala.day07.cahpter10
+
+object Scala04_Transform {
+
+    def main(args: Array[String]): Unit = {
+
+        // 隐式转换其实转换的是类型
+//        implicit def transform( user:User ): UserExt = {
+//            new UserExt()
+//        }
+
+        val user = new User()
+        user.insertUser()
+        user.updateUser()
+    }
+    // 隐式类
+    implicit class UserExt(user:User) {
+        def updateUser(): Unit = {
+            println("update user...")
+        }
+    }
+    class User {
+        def insertUser(): Unit = {
+            println("insert user...")
+        }
+    }
+}
Index: src/test/java/com/teacher/scala/day03/chapter05/Scala05_Function_Hell4.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day03/chapter05/Scala05_Function_Hell4.scala	(date 1603188813318)
+++ src/test/java/com/teacher/scala/day03/chapter05/Scala05_Function_Hell4.scala	(date 1603188813318)
@@ -0,0 +1,42 @@
+package com.teacher.scala.day03.chapter05
+
+/**
+ * @author yycstart
+ * @create 2020-10-20 18:13
+ */
+object Scala05_Function_Hell4 {
+
+    def main(args: Array[String]): Unit = {
+
+        // TODO 将函数作为返回值来使用
+        /*
+          public User getUser() {
+              User user = new User();
+
+              return user;
+
+          }
+         */
+        def test() = {
+            def inner(): Unit = {
+                println("xxxxxx")
+            }
+            inner _
+        }
+//        def test1():()=>Unit = {
+//            def inner(): Unit = {
+//
+//            }
+//            inner
+//        }
+
+//        val f = test()
+//        f()
+        test()()
+
+
+
+
+
+    }
+}
Index: src/test/java/com/teacher/scala/day04/chapter06/Scala03_Object_Import.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day04/chapter06/Scala03_Object_Import.scala	(date 1603275085261)
+++ src/test/java/com/teacher/scala/day04/chapter06/Scala03_Object_Import.scala	(date 1603275085261)
@@ -0,0 +1,51 @@
+package com.teacher.scala.day04.chapter06
+
+object Scala03_Object_Import {
+
+    def main(args: Array[String]): Unit = {
+
+        // TODO import
+        /*
+
+           java : import 导类
+                  import static  静态导入(属性，方法)
+
+           马丁说：能不能对功能进行扩展
+         */
+        // 1. Scala可以导包
+        //new util.Date()
+
+        // 2. java中采用星号导入包中所有的类，但是scala采用的下划线
+        // import java.util._
+
+        // 3. import关键字可以在任意的位置的使用
+        //import java.util.Date
+        //val d = new Date()
+
+        // 4. 如果需要导入同一个包中大量的类，但是又没有下划线,可以写在一行当中
+        //import java.util.{List, Map, ArrayList, HashMap}
+
+        // 5. 如果导入不同包中有相同的类，那么会有冲突，可以隐藏类
+//        import java.util._
+//        import java.sql.{Date=>_, _}
+//        new Date()
+
+        // 6. java中java.lang包中的类是默认导入的，无序显示声明
+        //    scala中java.lang包中的类可以直接使用，无需导入
+        //    scala中scala包中的类可以直接使用，无需导入
+        //    scala中Predef类可以直接使用，无需导入
+        //println("abc")
+
+        // 7. scala中的import采用的是相对包路径来导入，以当前包为基准进行导入
+        //    可以采用绝对包路径进行访问
+        println(new _root_.java.util.HashMap())
+
+    }
+}
+//package java {
+//    package util {
+//        class HashMap {
+//            //override def finalize(): Unit = super.finalize()
+//        }
+//    }
+//}
Index: src/test/java/com/teacher/scala/day04/chapter06/Scala17_Object.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day04/chapter06/Scala17_Object.scala	(date 1603296664385)
+++ src/test/java/com/teacher/scala/day04/chapter06/Scala17_Object.scala	(date 1603296664385)
@@ -0,0 +1,13 @@
+package com.teacher.scala.day04.chapter06
+
+// 单例对象 => 类的初始化 => 执行构造方法体 => 类的主体内容
+object Scala17_Object extends App {
+    println("11111")
+    println("22222")
+    println("33333")
+//    println("11111")
+//    def main(args: Array[String]): Unit = {
+//        println("22222")
+//    }
+//    println("33333")
+}
\ No newline at end of file
Index: src/test/java/com/teacher/scala/day07/cahpter10/Scala02_Transform.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day07/cahpter10/Scala02_Transform.scala	(date 1603518687220)
+++ src/test/java/com/teacher/scala/day07/cahpter10/Scala02_Transform.scala	(date 1603518687220)
@@ -0,0 +1,31 @@
+package com.teacher.scala.day07.cahpter10
+
+object Scala02_Transform {
+
+    def main(args: Array[String]): Unit = {
+
+        implicit def transform( user : User ): UserExt = {
+            new UserExt()
+        }
+
+        // 隐式转换可以扩展功能
+        // ******************************
+        val user = new User()
+        user.insertUser()
+        // *****************************
+        user.updateUser()
+
+//        val b : Byte = 10
+//        val i : Int = b
+    }
+    class UserExt {
+        def updateUser(): Unit = {
+            println("update user....")
+        }
+    }
+    class User  {
+        def insertUser(): Unit = {
+            println("insert user....")
+        }
+    }
+}
Index: src/test/java/com/teacher/scala/day04/chapter06/Scala18_Object.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day04/chapter06/Scala18_Object.scala	(date 1603296961517)
+++ src/test/java/com/teacher/scala/day04/chapter06/Scala18_Object.scala	(date 1603296961517)
@@ -0,0 +1,20 @@
+package com.teacher.scala.day04.chapter06
+
+//import java.lang.{String=>S, _}
+
+object Scala18_Object {
+
+    def main(args: Array[String]): Unit = {
+
+        val user : User = new User();
+        val name : String = "zhangsan"
+        val id : Integer = 10
+
+        type U = User
+
+        println(new U)
+    }
+    class User {
+
+    }
+}
\ No newline at end of file
Index: src/test/java/com/teacher/scala/day07/cahpter10/Scala03_Transform.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day07/cahpter10/Scala03_Transform.scala	(date 1603528507923)
+++ src/test/java/com/teacher/scala/day07/cahpter10/Scala03_Transform.scala	(date 1603528507923)
@@ -0,0 +1,37 @@
+package com.teacher.scala.day07.cahpter10
+
+object Scala03_Transform {
+
+    def main(args: Array[String]): Unit = {
+
+        // 隐式参数
+        def reg( implicit password : String = "000000" ): Unit = {
+            println("密码为 " + password)
+        }
+
+        // 隐式变量
+        implicit val password : String = "123123"
+//        implicit val xxxxx : String = "111111"
+
+        // 隐式参数和隐式变量应该是类型统一
+
+        // 如果应用隐式参数，那么小括号可以省略
+        reg
+        // 如果没有省略，那么隐式参数不起作用，默认值起作用
+        reg()
+        // 如果传递参数，那么传递的就是最终参数
+        reg("456456")
+
+        val list = List(1,4,3,2)
+
+//        println(list.sortBy(num => num))
+//        println(list.sortBy(num => num)(Ordering.Int.reverse))
+
+
+//        def test( x:Int )(y:Int): Int = {
+//            x + y
+//        }
+//
+//        println(test(10))
+    }
+}
Index: src/test/java/com/teacher/scala/day04/chapter06/Scala15_Object_Java.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day04/chapter06/Scala15_Object_Java.java	(date 1603274931349)
+++ src/test/java/com/teacher/scala/day04/chapter06/Scala15_Object_Java.java	(date 1603274931349)
@@ -0,0 +1,20 @@
+package com.teacher.scala.day04.chapter06;
+
+public class Scala15_Object_Java {
+    public static void main(String[] args) {
+
+        final Class<Student> studentClass = Student.class;
+    }
+    class Student {
+        public int id;
+        @Override
+        public boolean equals(Object obj) {
+            if ( obj instanceof Student ) {
+                Student otherStudent = (Student)obj;
+                return otherStudent.id == this.id;
+            } else {
+                return false;
+            }
+        }
+    }
+}
Index: src/test/java/com/teacher/scala/day07/cahpter10/package.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day07/cahpter10/package.scala	(date 1603518754047)
+++ src/test/java/com/teacher/scala/day07/cahpter10/package.scala	(date 1603518754047)
@@ -0,0 +1,10 @@
+package com.teacher.scala.day07
+
+
+package object cahpter10 {
+//    implicit class UserExt(user:User) {
+//        def updateUser(): Unit = {
+//            println("update user...")
+//        }
+//    }
+}
Index: src/test/java/com/teacher/scala/day04/chapter06/Scala16_Object.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day04/chapter06/Scala16_Object.scala	(date 1603274931313)
+++ src/test/java/com/teacher/scala/day04/chapter06/Scala16_Object.scala	(date 1603274931313)
@@ -0,0 +1,15 @@
+package com.teacher.scala.day04.chapter06
+
+object Scala16_Object {
+
+    def main(args: Array[String]): Unit = {
+
+        println(Color.RED.id)
+
+    }
+    object Color extends Enumeration {
+        val RED = Value(1, "red")
+        val YELLOW = Value(2, "yellow")
+        val BLUE = Value(3, "blue")
+    }
+}
\ No newline at end of file
Index: src/test/java/com/teacher/scala/day07/cahpter10/Scala01_Transform.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day07/cahpter10/Scala01_Transform.scala	(date 1603518687217)
+++ src/test/java/com/teacher/scala/day07/cahpter10/Scala01_Transform.scala	(date 1603518687217)
@@ -0,0 +1,31 @@
+package com.teacher.scala.day07.cahpter10
+
+object Scala01_Transform {
+
+    def main(args: Array[String]): Unit = {
+
+        implicit def transform( d : Double ): Int = {
+            d.toInt
+        }
+
+
+        // OCP
+        // 编译器在编译时有可能编译不通过。
+        // 尝试在作用域范围内查找可以让程序编译通过的逻辑
+        // 然后使用这段逻辑进行二次编译，让编译通过
+        // 需要对指定的逻辑增加标记，告诉编译器这个标记的函数可以进行二次编译
+        // 相同作用域下，相同的隐式转换规则不同出现多次
+        // *******************************
+        val test = new Test()
+        val age : Int = test.age
+
+        println(age)
+        // ******************************
+
+    }
+    // 第三方类库 1.0 -> 2.0
+    class Test {
+
+        val age : Double = 20.5
+    }
+}
Index: src/test/java/com/teacher/scala/day03/chapter05/Scala05_Function_Hell.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day03/chapter05/Scala05_Function_Hell.scala	(date 1603189762342)
+++ src/test/java/com/teacher/scala/day03/chapter05/Scala05_Function_Hell.scala	(date 1603189762342)
@@ -0,0 +1,51 @@
+package com.teacher.scala.day03.chapter05
+
+/**
+ * @author yycstart
+ * @create 2020-10-20 18:13
+ */
+object Scala05_Function_Hell {
+
+    def main(args: Array[String]): Unit = {
+
+        // TODO 函数式编程 - 地狱版
+
+        // 将函数当成对象来用
+        // Scala是一个完全面向对象的语言，同时也是完全面向函数式编程的语言
+        // 函数也是对象
+        // 重复使用
+        // User user = new User();
+        // Person p = new User();
+        // Object obj = new User();
+        // user.name;
+        // user.login();
+
+        // TODO 将函数赋值给变量使用
+        //      那么函数应该有类型，就是函数类型
+        def test(): Unit = {
+            println("f1....")
+        }
+
+        // 如果函数声明的参数列表没有参数，那么在调用时小括号可以省略
+        val f1 = test
+        val f2 = test()
+        f1
+
+        // 想将函数作为一个整体的对象赋值给变量，不想让这个函数执行
+        // 可以采用特殊的符号来声明
+        //val f = test _
+        // User user = new User();
+        //f()
+
+        // 之所以之前使用函数赋值没有成功，因为编译器的自动推断功能
+        // 如果将函数作为对象来使用，那么可以不需要推断功能
+        // User user = new User()
+        // = new User()
+        // 函数类型的定义 ： In => Out
+        //                   () => Unit
+        val f3 : () => Unit = test
+        f3()
+
+
+    }
+}
Index: src/test/java/com/teacher/scala/day04/chapter06/Scala14_Object_Trait5.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day04/chapter06/Scala14_Object_Trait5.scala	(date 1603274931339)
+++ src/test/java/com/teacher/scala/day04/chapter06/Scala14_Object_Trait5.scala	(date 1603274931339)
@@ -0,0 +1,35 @@
+package com.teacher.scala.day04.chapter06
+
+object Scala14_Object_Trait5 {
+
+    def main(args: Array[String]): Unit = {
+
+        val mysql = new MySQL
+        // 特质的功能叠加
+        // 多个特质中相同的功能可以叠加在一起，但是执行顺序为从右向左
+        // 也可以根据实际情况跳过某一个功能
+        mysql.operData()
+
+    }
+    trait Operator {
+        def operData(): Unit = {
+            println("操作数据")
+        }
+    }
+    trait DB extends Operator {
+        override def operData(): Unit = {
+            print("向数据库中")
+            super[Operator].operData()
+        }
+    }
+    trait File extends Operator {
+        override def operData(): Unit = {
+            print("向文件中")
+            // super表示的不是父类（特质），表示上一个特质
+            super.operData()
+        }
+    }
+    class MySQL extends File with DB{
+
+    }
+}
\ No newline at end of file
Index: src/test/java/com/teacher/scala/day03/chapter05/Scala05_Function_Hell1.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day03/chapter05/Scala05_Function_Hell1.scala	(date 1603189937482)
+++ src/test/java/com/teacher/scala/day03/chapter05/Scala05_Function_Hell1.scala	(date 1603189937482)
@@ -0,0 +1,37 @@
+package com.teacher.scala.day03.chapter05
+
+/**
+ * @author yycstart
+ * @create 2020-10-20 18:13
+ */
+object Scala05_Function_Hell1 {
+
+    def main(args: Array[String]): Unit = {
+
+        // TODO 函数式编程 - 地狱版
+        def test1( i : Int ): Int = {
+            i * 2
+        }
+        // 函数类型：  In => Out
+        // 函数类型中，如果参数列表只有一个参数，小括号可以省略，但是如果没有参数，一般不能省略
+        val f:(Int)=>Int = test1
+        val f1:Int=>Int = test1
+//        println(f(10))
+//        println(f1(10))
+
+        def test2( name : String, password:String ): String = {
+            name + "," + password
+        }
+        def test3( name : String, password:String ): String = {
+            name + "," + password
+        }
+
+        val f2 : (String, String)=> String = test3
+        //val f2 : (String, String)=> String = test2
+        //val f2 = test2 _
+        //f2
+        println(f2("zhangsan", "123123"))
+
+
+    }
+}
Index: src/test/java/com/teacher/scala/day04/chapter06/Scala15_Object.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day04/chapter06/Scala15_Object.scala	(date 1603274931363)
+++ src/test/java/com/teacher/scala/day04/chapter06/Scala15_Object.scala	(date 1603274931363)
@@ -0,0 +1,21 @@
+package com.teacher.scala.day04.chapter06
+
+object Scala15_Object {
+
+    def main(args: Array[String]): Unit = {
+
+        val c: Class[User] = classOf[User]
+
+    }
+    class User {
+        var id : Int = _
+        override def equals(obj: Any): Boolean = {
+            if ( obj.isInstanceOf[User] ) {
+                val otherUser = obj.asInstanceOf[User]
+                otherUser.id == this.id
+            } else {
+                false
+            }
+        }
+    }
+}
\ No newline at end of file
Index: src/test/java/com/teacher/scala/day04/chapter06/Scala14_Object_Trait3_Java.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day04/chapter06/Scala14_Object_Trait3_Java.java	(date 1603274931355)
+++ src/test/java/com/teacher/scala/day04/chapter06/Scala14_Object_Trait3_Java.java	(date 1603274931355)
@@ -0,0 +1,22 @@
+package com.teacher.scala.day04.chapter06;
+
+public class Scala14_Object_Trait3_Java {
+    public static void main(String[] args) {
+
+        // 多态的传递
+        A14 a = new C14();
+
+        System.out.println(C14.class.getInterfaces().length);
+        System.out.println(a);
+    }
+}
+
+interface A14 {
+
+}
+class B14 {
+
+}
+class C14 extends B14 implements A14 {
+
+}
Index: src/main/java/com/nswdwy/scala/chapter03_day03/function1.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter03_day03/function1.scala	(date 1603279885785)
+++ src/main/java/com/nswdwy/scala/chapter03_day03/function1.scala	(date 1603279885785)
@@ -0,0 +1,64 @@
+package com.nswdwy.scala.chapter03_day03
+
+/**
+ * @author yycstart
+ * @create 2020-10-20 9:43
+ */
+object function1 {
+  def main(args: Array[String]): Unit = {
+    //
+    def test01(): String ={
+      "zhangsan"
+    }
+    val s1 = test01
+    val s1_2 = test01 _
+    val s1_3 = test01()
+    val s1_4 :()=>String = test01
+    val s1_5 :()=>String = test01 _
+    println(s1)  //zhangsan
+    println(s1_2) //com.nswdwy.scala.chapter03.function1$$$Lambda$1/142257191@17d99928
+    println(s1_3)  //zhangsan
+    println(s1_4)  //com.nswdwy.scala.chapter03.function1$$$Lambda$2/245257410@2b80d80f
+    println(s1_5)  //com.nswdwy.scala.chapter03.function1$$$Lambda$3/455659002@3ab39c39
+
+    println("----------------------------------")
+    def test02(name : String): Unit ={
+      println(name)
+    }
+    val s2 = test02("lisi")
+//    val s2_2 :(String)=>() = test02("lisi")  //false
+
+    println("------------------------------------")
+
+    def test03(name : String): String ={
+      name
+    }
+
+    val s3 = test03("test03")
+    /**
+     * Error:(38, 41) _ must follow method; cannot follow String
+     * val s3_2:(String) => String = test03("test03_2..") _ //报错
+     */
+//    val s3_2:(String) => String = test03("test03_2..") _ //报错
+
+    println(s3)
+//    print(s3_2)
+    println("------------------------------------")
+
+    def  test04(name:String,password:String): String ={
+        name + "," + password
+    }
+    val s4 = test04("zhangsan","123321")
+    /**
+     * Error:(48, 46) type mismatch;
+     * found   : String
+     * required: (String, String) => String
+     * val s4_2:(String,String)=>String = test04("zhangsan","123321") //
+     */
+//    val s4_2:(String,String)=>String = test04("zhangsan","123321") //
+    val s4_3 = test04("zhangsan","123321")
+    println(s4)
+//    println(s4_2)
+    println(s4_3)
+  }
+}
Index: src/test/java/com/teacher/scala/day04/chapter06/Scala14_Object_Trait4.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day04/chapter06/Scala14_Object_Trait4.scala	(date 1603274931308)
+++ src/test/java/com/teacher/scala/day04/chapter06/Scala14_Object_Trait4.scala	(date 1603274931308)
@@ -0,0 +1,25 @@
+package com.teacher.scala.day04.chapter06
+
+object Scala14_Object_Trait4 {
+
+    def main(args: Array[String]): Unit = {
+
+        // 一个类混入多个无关的特征，那么包含相同的方法时，会出现问题。
+
+//        val user = new User()
+//        user.run()
+    }
+    trait Runnable {
+        def run(): Unit = {
+            println("run....")
+        }
+    }
+    trait Test {
+        def run(): Unit = {
+            println("test....")
+        }
+    }
+//    class User extends Test with Runnable {
+//
+//    }
+}
\ No newline at end of file
Index: src/test/java/com/teacher/scala/day03/chapter05/Scala05_Function_Hell3.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day03/chapter05/Scala05_Function_Hell3.scala	(date 1603195264117)
+++ src/test/java/com/teacher/scala/day03/chapter05/Scala05_Function_Hell3.scala	(date 1603195264117)
@@ -0,0 +1,58 @@
+package com.teacher.scala.day03.chapter05
+
+/**
+ * @author yycstart
+ * @create 2020-10-20 18:13
+ */
+object Scala05_Function_Hell3 {
+
+    def main(args: Array[String]): Unit = {
+
+        /*
+        // TODO 函数也是对象
+        def test(): Unit = {
+            //println()
+        }
+        // User user = new User()
+        // println(user)
+        val f = test _
+        println(f)
+         */
+
+        // TODO 匿名函数的至简原则
+        def test( name:String ): Unit = {
+            println(name)
+        }
+
+        def fn( f : (String)=>Unit ): Unit = {
+            f("zhangsan")
+        }
+
+//        fn( test )
+//        fn( (name:String)=>{println(name)} )
+//        fn( (name)=>{println(name)} )
+//        fn( name=>{println(name)} )
+//        fn( name=>println(name) )
+        //fn( println(_) ) // 匿名函数至简版
+//        fn( println )  // 函数就叫println
+
+        /*def test(x:Int, y:Int, f:(Int, Int)=>Int) = {
+            f( x, y )
+        }*/
+
+//        test(10, 20, (x:Int, y:Int)=>{x + y})
+//        test(10, 20, (x, y)=>{x + y})
+//        test(10, 20, (x, y)=>x + y)
+        // 匿名函数中，参数在逻辑中处理中只使用了一次，那么可以采用下划线代替
+        // 参数如果出现多次，或使用的顺序不正确，那么无法使用下划线代替
+       /* println(test(10, 20, _ + _))
+        println(test(10, 20, _ * _))
+        println(test(10, 20, _ - _))
+        println(test(10, 20, _ / _))*/
+
+
+
+
+
+    }
+}
Index: src/test/java/com/teacher/scala/day04/chapter06/Scala13_Object_Trait2.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day04/chapter06/Scala13_Object_Trait2.scala	(date 1603274931368)
+++ src/test/java/com/teacher/scala/day04/chapter06/Scala13_Object_Trait2.scala	(date 1603274931368)
@@ -0,0 +1,28 @@
+package com.teacher.scala.day04.chapter06
+
+object Scala13_Object_Trait2 {
+
+    def main(args: Array[String]): Unit = {
+
+        // 动态混入功能，实现功能扩展
+        val user = new User() with UserExt
+        user.insertUser()
+        user.updateUser()
+    }
+//    class Parent {
+//        def updateUser(): Unit = {
+//            println("update user...")
+//        }
+//    }
+    trait UserExt {
+        def updateUser(): Unit = {
+            println("update user...")
+        }
+    }
+    class User {
+        def insertUser(): Unit = {
+            println("insert user...")
+        }
+
+    }
+}
\ No newline at end of file
Index: src/test/java/com/teacher/scala/day03/chapter05/Scala05_Function_Hell2.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day03/chapter05/Scala05_Function_Hell2.scala	(date 1603190844775)
+++ src/test/java/com/teacher/scala/day03/chapter05/Scala05_Function_Hell2.scala	(date 1603190844775)
@@ -0,0 +1,68 @@
+package com.teacher.scala.day03.chapter05
+
+/**
+ * @author yycstart
+ * @create 2020-10-20 18:13
+ */
+object Scala05_Function_Hell2 {
+
+    def main(args: Array[String]): Unit = {
+
+        // TODO 函数式编程 - 地狱版
+
+        // TODO 将函数作为参数进行传递
+        /*
+          // 另外一个函数
+           public void test( User user ) {
+
+           }
+
+           User user = new User(); // 函数对象
+           test(user)
+
+         */
+
+        def test( f : (String)=>String) = {
+            f("zhangsan")
+        }
+
+        def f( s : String ): String = {
+            s * 2
+        }
+
+        val v = f _
+
+        println(test(v))
+        /*def test( name : String, f: (String)=> String ):Unit = {
+            println(f(name))
+        }*/
+
+//        def f( s : String ): String = {
+//            s * 2
+//        }
+        /*
+          User y= new User();
+          User g = y
+          b.name
+          b.age
+          b.login
+
+         */
+        // 如果函数的名称不重要，那么可以声明关键字和名称
+        //val a = (s:String)=>{ s * 2 }
+        //println(test(a))
+        // TODO : 完整的写法
+        //test( (s: String) => {s * 2} )
+        // TODO : 匿名函数也可以遵循至简原则
+        // 1. 如果参数类型可以推断，那么类型可以省略
+        //test( (s) => {s * 2}  )
+        // 2. 如果参数列表中只有一个参数，那么小括号可以省略
+        //test( s => {s * 2} )
+        // 3. 如果函数的逻辑代码只有一行，那么大括号可以省略
+        //test( s => s * 2 )
+        // 4. 如果函数逻辑中，参数只使用了一次，那么可以省略这个参数,使用下划线代替
+//        test( "lisi", _ * 2)
+
+
+    }
+}
Index: src/test/java/com/teacher/scala/day04/chapter06/Scala14_Object_Trait3.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day04/chapter06/Scala14_Object_Trait3.scala	(date 1603274931325)
+++ src/test/java/com/teacher/scala/day04/chapter06/Scala14_Object_Trait3.scala	(date 1603274931325)
@@ -0,0 +1,36 @@
+package com.teacher.scala.day04.chapter06
+
+object Scala14_Object_Trait3 {
+
+    def main(args: Array[String]): Unit = {
+
+        // TODO 多个特征的混入和使用
+        // 特质的初始化顺序
+        // 从左到右依次初始化，但是如果存在上下级关系的特质，先初始化上级，然后再初始化下级
+        new User()
+        // 如果特质和父类同时存在，那么初始化应该先操作父类，然后在初始化特质
+
+        /*
+        aaaaaaa
+        bbbbbbb
+        ppppppp
+        cccccc
+        uuuuuuu
+         */
+    }
+    trait A {
+        println("aaaaa")
+    }
+    trait B extends A{
+        println("bbbbbb")
+    }
+    trait C {
+        println("cccccc")
+    }
+    class Parent extends B {
+        println("ppppp")
+    }
+    class User extends Parent with C with B with A{
+        println("uuuuuu")
+    }
+}
\ No newline at end of file
Index: src/test/java/com/teacher/scala/day04/chapter06/Scala13_Object_Trait.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day04/chapter06/Scala13_Object_Trait.scala	(date 1603274931357)
+++ src/test/java/com/teacher/scala/day04/chapter06/Scala13_Object_Trait.scala	(date 1603274931357)
@@ -0,0 +1,36 @@
+package com.teacher.scala.day04.chapter06
+
+object Scala13_Object_Trait {
+
+    def main(args: Array[String]): Unit = {
+
+        // TODO Scala中没有接口的概念，可以将多个类中相同的特征剥离出来，形成独立的结构，称之为特质
+        //      使用trait关键字来声明
+        // java中所有的接口在scala中都是按照特质来使用
+        // 如果一个类符合某一个特征，那么就可以将类混入特征
+        // 使用extends关键字混入
+
+        // 特质在编译后其实就是interface，而混入的类编译后其实就是实现interface
+        // 特质中可以声明抽象方法的，那么混入的类也应该重写这个抽象方法。
+
+        new Person();
+
+    }
+    // 声明特质（特征）
+    trait Runnable {
+        // 声明抽象方法
+        def run() : Unit
+        def test(): Unit = {
+
+        }
+    }
+    // 声明类，混入特征
+    class Person extends Runnable {
+        def run() : Unit = {
+
+        }
+        override def test(): Unit = {
+
+        }
+    }
+}
\ No newline at end of file
Index: src/test/java/com/teacher/scala/day04/chapter06/Scala13_Object_Trait1.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day04/chapter06/Scala13_Object_Trait1.scala	(date 1603274931290)
+++ src/test/java/com/teacher/scala/day04/chapter06/Scala13_Object_Trait1.scala	(date 1603274931290)
@@ -0,0 +1,29 @@
+package com.teacher.scala.day04.chapter06
+
+object Scala13_Object_Trait1 {
+
+    def main(args: Array[String]): Unit = {
+
+        // TODO 特质也可以继承类
+        // 特质可以理解为接口和抽象类的结合体。
+        //new Person()
+
+        // 如果一个类有父类，同时又想混入特征。
+        // 那么需要使用extends关键字继承父类，使用with关键字来混入特征
+        // 如果有多个特征需要混入，那么需要多个with
+
+        // 如果没有父类，只有特征，那么可以使用extends关键字来混入特征
+
+    }
+
+    trait Runnable extends Exception {
+
+    }
+    class Parent {
+
+    }
+
+//    class Person extends Parent with Runnable {
+//
+//    }
+}
\ No newline at end of file
Index: src/test/java/com/teacher/scala/day04/chapter06/Scala12_Object_Single.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day04/chapter06/Scala12_Object_Single.scala	(date 1603292810907)
+++ src/test/java/com/teacher/scala/day04/chapter06/Scala12_Object_Single.scala	(date 1603292810907)
@@ -0,0 +1,34 @@
+package com.teacher.scala.day04.chapter06
+
+
+object Scala12_Object_Single {
+
+    def main(args: Array[String]): Unit = {
+
+        Person.test()
+//        UserXXX.test()
+        println("xxxxxxxxxxxxx")
+    }
+    // java中单例对象
+//     1. 构造方法私有化
+//     2. 静态返回本类型，公共的方法
+//     3. 静态属性
+    // scala中单例对象
+//     1. 主构造函数的前面增加private，辅助构造方法前也可以将private
+//     2. Scala中没有静态操作。
+
+     class User private() {
+
+        private def this( name:String ) ={
+            this()
+        }
+    }
+//     3. Scala中采用特殊的关键字(object)直接声明单例对象
+//        object关键字可以声明类，同时可以声明单例对象
+//        将这个对象称之为伴生对象, 将对应class关键字声明的类称之伴生类
+    object Person {
+        def test(): Unit = {
+
+        }
+    }
+}
\ No newline at end of file
Index: src/test/java/com/teacher/scala/day04/chapter06/Scala12_Object_Single1.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day04/chapter06/Scala12_Object_Single1.scala	(date 1603279529165)
+++ src/test/java/com/teacher/scala/day04/chapter06/Scala12_Object_Single1.scala	(date 1603279529165)
@@ -0,0 +1,32 @@
+package com.teacher.scala.day04.chapter06
+
+
+object Scala12_Object_Single1 {
+
+    def main(args: Array[String]): Unit = {
+
+        // 如果通过伴生对象的apply方法创建对象，那么编译器可以自动识别，所以apply方法名可以省略
+        //println(User.apply())
+        //println(User("zhangsan"))
+
+        println(User) // => 获取的单例对象本身
+        println(new User()) // => 通过构造方法创建的对象
+        println(User())    // => 通过apply方法构造对象
+    }
+    // 伴生类
+    //class User private() {
+    class User() {
+
+    }
+    // 伴生对象
+    // 可以访问伴生类中的松所有内容，包括私有的
+    // 伴生对象一般使用apply方法创建伴生类对象
+    // apply方法可以重载的
+    object User {
+//        def apply() = {
+//            new User()
+//        }
+          def apply(): User = new User()
+          def apply(name:String): User = new User()
+    }
+}
\ No newline at end of file
Index: src/test/java/com/teacher/scala/day07/cahpter09/Scala01_Exception.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day07/cahpter09/Scala01_Exception.scala	(date 1603518664322)
+++ src/test/java/com/teacher/scala/day07/cahpter09/Scala01_Exception.scala	(date 1603518664322)
@@ -0,0 +1,42 @@
+package com.teacher.scala.day07.cahpter09
+
+import java.io.IOException
+
+object Scala01_Exception {
+
+    def main(args: Array[String]): Unit = {
+
+        // 鲁棒性 => 健壮性
+        // 编译期异常 => 提示性异常
+        // 运行时异常 => BUG
+        // 马丁说： 异常不要分类
+        // Scala中任何的异常都不需要显示的处理
+        //throw new Exception
+
+        // 异常处理和模式匹配非常类似
+        /*
+          try {
+
+          } catch ( java.lang.ArithmeticException e ) {
+
+          } catch ( Exception e ) {
+
+          }
+
+
+         */
+        //  scala中捕捉多个异常时，范围小的异常应该在前，范围大的异常应该在后
+        // 如果没有匹配任务的异常，那么会直接将异常抛出给JVM
+        try {
+            val x = 0
+            val y = 10 / x
+        } catch  {
+            case io : IOException => println("io")
+            //case e : java.lang.ArithmeticException => println("yyyyy")
+            //case e : Exception => println("xxxxxx")
+        } finally {
+
+        }
+
+    }
+}
Index: src/test/java/com/teacher/scala/day04/chapter06/Scala11_Object_Abstract.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day04/chapter06/Scala11_Object_Abstract.scala	(date 1603274931333)
+++ src/test/java/com/teacher/scala/day04/chapter06/Scala11_Object_Abstract.scala	(date 1603274931333)
@@ -0,0 +1,33 @@
+package com.teacher.scala.day04.chapter06
+
+object Scala11_Object_Abstract {
+
+    def main(args: Array[String]): Unit = {
+
+        // 抽象类无法创建对象
+        val user = new Child();
+    }
+
+    // 不完整的类称之为抽象类
+    abstract class User {
+
+    }
+    abstract class Person {
+        // 不完整的 方法称之为抽象方法
+        // 如果一个类中存在抽象方法，那么这个类就是抽象类，或者将方法补充完整
+        def run():Unit
+        // 不完整的属性称之为抽象属性
+        // 抽象属性在编译时，不会产生属性，只会产生属性对应的set,get抽象方法
+        var name : String
+    }
+    // 如果子类继承的父类为抽象类，那么要么将类声明为抽象类，要么将抽象方法补充完整
+    // 补充完整其实就是方法的重写
+    // 如果父类存在抽象属性，那么子类要么声明为抽象的要么将属性补充完整
+    class Child extends Person {
+        var name : String = "zhangsan"
+        def run():Unit = {
+
+        }
+    }
+
+}
\ No newline at end of file
Index: src/test/java/com/teacher/scala/day07/cahpter08/Scala10_Match.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day07/cahpter08/Scala10_Match.scala	(date 1603518641370)
+++ src/test/java/com/teacher/scala/day07/cahpter08/Scala10_Match.scala	(date 1603518641370)
@@ -0,0 +1,32 @@
+package com.teacher.scala.day07.cahpter08
+
+object Scala10_Match {
+
+    def main(args: Array[String]): Unit = {
+        // 将该List(1,2,3,4,5,6,"test")中的Int类型的元素加一，并去掉字符串
+        val list : List[Any] = List(1,2,3,4,5,6,"test")
+
+        // 改变需求
+        //println(list.filter(d => d.isInstanceOf[Int]).map(d => d.asInstanceOf[Int] + 1))
+//        val result = list.map(
+//            data => {
+//                data match {
+//                    case i : Int => i + 1
+//                    case d => d
+//                }
+//            }
+//        ).filter(d=>d.isInstanceOf[Int])
+
+        // 采集数据, 符合条件的数据会被采集并做处理
+        // 这样的函数称之为偏（部分）函数
+        // 一般情况下，偏函数就是使用case的模式匹配
+        val result = list.collect{
+            case i : Int => i + 1
+        }
+
+        println(result)
+
+
+    }
+
+}
Index: src/test/java/com/teacher/scala/day04/chapter06/Scala11_Object_Abstract1.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day04/chapter06/Scala11_Object_Abstract1.scala	(date 1603274931305)
+++ src/test/java/com/teacher/scala/day04/chapter06/Scala11_Object_Abstract1.scala	(date 1603274931305)
@@ -0,0 +1,27 @@
+package com.teacher.scala.day04.chapter06
+
+object Scala11_Object_Abstract1 {
+
+    def main(args: Array[String]): Unit = {
+
+        new Child().run()
+    }
+    class Parent {
+        val name : String = "zhangsan"
+        def run(): Unit = {
+
+            //name = "wangwu" // => name_$eq("wangwu") => Child => name => wangwu
+            println(name)   // => name() => Child => name => wangwu
+
+        }
+    }
+    class Child extends Parent {
+        // scala中如果子类声明了和父类一样的属性，那么必须采用override关键字，明确声明
+        override val name : String = "lisi"
+        // scala中如果子类想要重写完整的方法，必须要明确告诉编译器，需要增加修饰符
+        override def run(): Unit = {
+            super.run()
+        }
+    }
+
+}
\ No newline at end of file
Index: src/test/java/com/teacher/scala/day04/chapter06/Scala09_Object_Instance1.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day04/chapter06/Scala09_Object_Instance1.scala	(date 1603274931319)
+++ src/test/java/com/teacher/scala/day04/chapter06/Scala09_Object_Instance1.scala	(date 1603274931319)
@@ -0,0 +1,38 @@
+package com.teacher.scala.day04.chapter06
+
+object Scala09_Object_Instance1 {
+
+    def main(args: Array[String]): Unit = {
+
+        // TODO 创建对象
+        //val user = new User() // 调用类的构造方法
+        // 如果想要声明多个构造方法，那么需要提供类的辅助构造方法
+        // scala中类的构造方法分为2大类，一类是主构造方法，一类是辅助构造方法
+        // 主构造方法其实就是类名后面的参数列表
+        // 辅助构造方法用于辅助主构造方法创建对象
+        // 主要用主构造方法创建对象，完成类的初始化操作，通过辅助构造方法完成功能的补充
+        // 辅助构造方法不能独立使用，必须直接或间接调用主构造方法
+        // 主构造方法不是一定为无参的构造方法
+
+        val user = new User("zhangsan", 30)
+
+    }
+    // 主构造函数
+    class User( name:String ) {
+
+        println("xxxxxxx")
+
+        // 辅助构造方法 ： this
+        def this() = {
+            this("zhangsan")
+            println("yyyy")
+        }
+        def this( name : String, age:Int ) = {
+            this()
+            println("zzzzz")
+        }
+
+
+    }
+
+}
\ No newline at end of file
Index: src/test/java/com/teacher/scala/day07/cahpter08/Scala08_Match.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day07/cahpter08/Scala08_Match.scala	(date 1603518641376)
+++ src/test/java/com/teacher/scala/day07/cahpter08/Scala08_Match.scala	(date 1603518641376)
@@ -0,0 +1,34 @@
+package com.teacher.scala.day07.cahpter08
+
+object Scala08_Match {
+
+    def main(args: Array[String]): Unit = {
+
+        //new User().test()
+        //User.xxxx()
+        //println(User)
+
+        new User()
+        // apply方法不是专门用于创建伴生类对象
+        // 仅仅是一个可以被编译器识别的方法
+        // apply方法是可以创建其他类型的对象
+        val d = User() // User.apply()
+        println(d)
+    }
+    // 伴生类
+    class User() {
+        // 成员方法
+        def test(): Unit = {
+
+        }
+    }
+    // 伴生对象
+    object User {
+        def apply(): java.util.Date = new java.util.Date()
+        // 静态语法
+        def xxxx(): Unit = {
+
+        }
+    }
+
+}
Index: src/test/java/com/teacher/scala/day04/chapter06/Scala10_Object_Extends.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day04/chapter06/Scala10_Object_Extends.scala	(date 1603286609475)
+++ src/test/java/com/teacher/scala/day04/chapter06/Scala10_Object_Extends.scala	(date 1603286609475)
@@ -0,0 +1,38 @@
+package com.teacher.scala.day04.chapter06
+
+object Scala10_Object_Extends {
+
+    def main(args: Array[String]): Unit = {
+
+        // TODO 类的继承和java一致的。是类的单继承
+        // 子类继承父类
+        // 继承父类的同时等同于调用父类的构造方法
+        val child = new Child("zhangsan")
+    }
+
+    // 111111
+    // 333333
+    // 444444
+    // 666666
+
+    class Parent( name:String ) {
+        println("1111")
+        def this() {
+            this("xxxxx")
+            println("2222222")
+        }
+        println("33333")
+    }
+    class Child(name:String) extends Parent(name) {
+        println("44444...")
+        def this() {
+            this("yyyyy")
+            println("555555")
+        }
+        println("6666666")
+    }
+//    class SubChild extends Child {
+//
+//    }
+
+}
\ No newline at end of file
Index: src/test/java/com/teacher/scala/day07/cahpter08/Scala09_Match.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day07/cahpter08/Scala09_Match.scala	(date 1603518641384)
+++ src/test/java/com/teacher/scala/day07/cahpter08/Scala09_Match.scala	(date 1603518641384)
@@ -0,0 +1,56 @@
+package com.teacher.scala.day07.cahpter08
+
+object Scala09_Match {
+
+    def main(args: Array[String]): Unit = {
+
+//        val list = List(
+//            ("a", 1), ("b", 2), ("c", 3)
+//        )
+
+//        println(list.toMap.mapValues(
+//            cnt => cnt * 2
+//        ).toList)
+
+//        def fun( t : (String,Int) ): (String, Int) = {
+//            (t._1, t._2 * 2)
+//        }
+//
+//        list.map(fun)
+
+//        println(list.map{
+//            case (word, count) => {
+//                (word, count * 2)
+//            }
+//        })
+
+//        val list = List(
+//            ((1, "zhangsan"), 30)
+//        )
+//
+//        println(list.map{
+//            case ( (prv, item), cnt ) => {
+//                ( prv, (item, cnt) )
+//            }
+//        })
+
+        val list = List(
+            ("a", 1), ("b", 1), ("c", 2)
+        )
+
+        val result = list.filter{
+            case (_, cnt) => {
+                cnt % 2 == 1
+            }
+        }
+
+        list.groupBy{
+            case ( _, cnt ) => {
+                cnt
+            }
+        }
+        println(result)
+
+    }
+
+}
Index: src/test/java/com/teacher/scala/day04/chapter06/Scala08_Object_Method_Java.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day04/chapter06/Scala08_Object_Method_Java.java	(date 1603282595811)
+++ src/test/java/com/teacher/scala/day04/chapter06/Scala08_Object_Method_Java.java	(date 1603282595811)
@@ -0,0 +1,39 @@
+package com.teacher.scala.day04.chapter06;
+
+public class Scala08_Object_Method_Java {
+    public static void main(String[] args) {
+
+//        AAA08 a = new AAA08();
+//        System.out.println(a.sum()); // 20
+
+//        BBB08 a = new BBB08();
+//        System.out.println(a.sum()); // 40
+
+        // 父类和子类同时存在相同的方法，存在方法的重写，JVM为了能够区分方法，采用特殊的处理机制
+        // 动态绑定机制：在程序运行时，调用对象的成员方法时，会将方法和当前对象的实际内存进行绑定，然后调用。
+        // 属性没有动态绑定机制，在哪里声明在哪里使用
+//        AAA08 a = new BBB08();
+//        System.out.println(a.sum()); // 40
+
+        AAA08 a = new BBB08();
+        System.out.println(a.sum()); // 20
+    }
+}
+class AAA08 {
+    public int i = 10;
+    public int sum() {
+        return getI() + 10;
+    }
+    public int getI() {
+        return i;
+    }
+}
+class BBB08 extends AAA08 {
+    public int i = 20;
+//    public int sum() {
+//        return i + 20;
+//    }
+    public int getI() {
+        return i;
+    }
+}
Index: src/test/java/com/teacher/scala/day07/cahpter08/Scala06_Match.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day07/cahpter08/Scala06_Match.scala	(date 1603518641379)
+++ src/test/java/com/teacher/scala/day07/cahpter08/Scala06_Match.scala	(date 1603518641379)
@@ -0,0 +1,24 @@
+package com.teacher.scala.day07.cahpter08
+
+object Scala06_Match {
+
+    def main(args: Array[String]): Unit = {
+
+        // TODO 模式匹配 - 匹配对象
+        val user = User("zhangsan", 30)
+        //user.name ="lisi"
+
+        // object => parameter (unapply)
+        user match {
+            case User("zhangsan", 30) => println("对象没有问题")
+            case _ => println("对象不符合要求")
+        }
+
+    }
+
+    // 马丁专门为模式匹配中的对象匹配创建了特殊的类：样例类，就是在class前增加case关键字
+    // 这个类可以当成普通类来使用，也可以当成特殊类使用
+    // 编译器在编译样例类时，会自动生成伴生对象，apply方法，unapply方法
+    // 样例类默认会实现可序列化接口
+    case class User(name: String, age: Int)
+}
Index: src/test/java/com/teacher/scala/day04/chapter06/Scala09_Object_Instance.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day04/chapter06/Scala09_Object_Instance.scala	(date 1603274931322)
+++ src/test/java/com/teacher/scala/day04/chapter06/Scala09_Object_Instance.scala	(date 1603274931322)
@@ -0,0 +1,23 @@
+package com.teacher.scala.day04.chapter06
+
+object Scala09_Object_Instance {
+
+    def main(args: Array[String]): Unit = {
+
+        // TODO 创建对象
+        val user = new User() // 调用类的构造方法
+        // Scala中构造方法的名字不是和类名相同
+        // Scala语言万物皆函数， 类也是函数
+        // 类名的后面可以增加小括号的,这个小括号就是代表构造参数列表
+
+        // Scala中类的主体内容其实就是类的构造方法体。
+        // 当构建对象时，构造方法就会执行，同时类的主体内容也会执行，所以就体现初始化的概念
+
+    }
+    class User() {
+        // 类的主体
+        // 函数体
+        //println("123")
+    }
+
+}
\ No newline at end of file
Index: src/test/java/com/teacher/scala/day07/cahpter08/Scala07_Match.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day07/cahpter08/Scala07_Match.scala	(date 1603518641381)
+++ src/test/java/com/teacher/scala/day07/cahpter08/Scala07_Match.scala	(date 1603518641381)
@@ -0,0 +1,41 @@
+package com.teacher.scala.day07.cahpter08
+
+object Scala07_Match {
+
+    def main(args: Array[String]): Unit = {
+
+        // 匹配变量
+//        val ( id, name, age ) = (1, "zhangsan", 30)
+//
+//        println(name)
+
+        //println(t._2)
+//        val list = List(
+//            ("1-zhangsan", 30)
+//        )
+//        list.map(
+//            t => {
+//                val k = t._1
+//                val v = t._2
+//                val ks = k.split("-")
+//                ( ks(0), (ks(1), v) )
+//            }
+//        )
+
+//        val list = List(
+//            ((1,"zhangsan"), 30)
+//        )
+//        list.map(
+//            t => {
+//                ( t._1._1, ( t._1._2, t._2 ) )
+//            }
+//        )
+
+        val map = Map(("a", 1), ("b", 2))
+
+        for ( ( k, 2 ) <- map ) {
+            println( k )
+        }
+    }
+
+}
Index: src/test/java/com/teacher/scala/day02/chapter03/Scala02_Oper_Java.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day02/chapter03/Scala02_Oper_Java.java	(date 1603104633234)
+++ src/test/java/com/teacher/scala/day02/chapter03/Scala02_Oper_Java.java	(date 1603104633234)
@@ -0,0 +1,25 @@
+package com.teacher.scala.day02.chapter03;
+
+public class Scala02_Oper_Java {
+    public static void main(String[] args) {
+
+        // 等号的作用：赋值，将等号右边的计算结果赋值给等号的左边
+//        int i = 0;
+//        //int j = i++; // tmp = (i++) = 0, i = 1 =>  j = tmp = 0
+//        i = i++;     // tmp = (i++) = 0 i= 1,    => i = tmp = 0
+//
+//        System.out.println("i = " + i );
+
+        // 阶乘 ：一个大于1的数的阶乘等于这个数乘以这个数减一的阶乘
+        System.out.println(test(5));
+    }
+    // 阶乘
+    // 马丁说：不要有歧义
+    public static int test( int num ) {
+        if ( num <= 1 ) {
+            return 1;
+        } else {
+            return num * test(num-1);
+        }
+    }
+}
Index: src/test/java/com/teacher/scala/day04/chapter06/Scala07_Object_Access_Java.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day04/chapter06/Scala07_Object_Access_Java.java	(date 1603274931345)
+++ src/test/java/com/teacher/scala/day04/chapter06/Scala07_Object_Access_Java.java	(date 1603274931345)
@@ -0,0 +1,50 @@
+package com.teacher.scala.day04.chapter06;
+
+public class Scala07_Object_Access_Java {
+    public static void main(String[] args) throws Exception {
+
+        // 访问权限
+        // 方法的提供者和调用者的关系
+        // 方法提供者：com.atguigu.bigdata.scala.chapter06.A
+        // 方法调用者：com.atguigu.bigdata.scala.chapter06.Scala07_Object_Access_Java
+
+        // 点不是调用的意思，表示从属关系
+        // 父子关系
+        // super
+
+        // 模板方法设计模式
+        /*
+
+           Parent{
+              run {
+                   step1
+                   step2 ( abstract )
+                   step3
+              }
+
+           }
+           Child  extends Parent{
+
+               step2 {
+
+               }
+           }
+           Child1 extends Parent {
+               step2 {
+
+               }
+           }
+
+
+
+         */
+        A a = new A();
+        a.clone();
+    }
+}
+class A{
+    @Override
+    protected Object clone() throws CloneNotSupportedException {
+        return super.clone();
+    }
+}
Index: src/test/java/com/teacher/scala/day07/cahpter08/Scala04_Match.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day07/cahpter08/Scala04_Match.scala	(date 1603518641365)
+++ src/test/java/com/teacher/scala/day07/cahpter08/Scala04_Match.scala	(date 1603518641365)
@@ -0,0 +1,18 @@
+package com.teacher.scala.day07.cahpter08
+
+object Scala04_Match {
+
+    def main(args: Array[String]): Unit = {
+
+        // TODO 模式匹配 - 匹配元组
+        for (tuple <- Array((0, 1), (1, 0), (1, 1), (1, 0, 2))) {
+            val result = tuple match {
+                case (0, _) => "0 ..." //是第一个元素是0的元组
+                case (y, 0) => "" + y + "0" // 匹配后一个元素是0的对偶元组
+                case (a, b) => "" + a + " " + b
+                case _ => "something else" //默认
+            }
+            println(result)
+        }
+    }
+}
Index: src/test/java/com/teacher/scala/day02/chapter03/Scala03_Oper_Java.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day02/chapter03/Scala03_Oper_Java.java	(date 1603104633243)
+++ src/test/java/com/teacher/scala/day02/chapter03/Scala03_Oper_Java.java	(date 1603104633243)
@@ -0,0 +1,14 @@
+package com.teacher.scala.day02.chapter03;
+
+public class Scala03_Oper_Java {
+    public static void main(String[] args) {
+
+        // JDBC
+        // Statement : 操作
+        //10;
+        new String("abc");
+    }
+    public static boolean isNotEmpty( String s ) {
+        return s != null  && s.trim().equals("");
+    }
+}
Index: src/test/java/com/teacher/scala/day04/chapter06/Scala08_Object_Method.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day04/chapter06/Scala08_Object_Method.scala	(date 1603274931295)
+++ src/test/java/com/teacher/scala/day04/chapter06/Scala08_Object_Method.scala	(date 1603274931295)
@@ -0,0 +1,24 @@
+package com.teacher.scala.day04.chapter06
+
+import scala.beans.BeanProperty
+
+object Scala08_Object_Method {
+
+    def main(args: Array[String]): Unit = {
+
+        // TODO 类的方法
+        // 类的方法其实就是类中声明的函数
+        // 遵循方法的限制和约束(重载和重写)
+        // scala中方法的重载和重写和java一样
+        val user = new User();
+        user.test()
+
+    }
+    class User {
+
+        def test(): Unit = {
+
+        }
+    }
+
+}
\ No newline at end of file
Index: src/test/java/com/teacher/scala/day07/cahpter08/Scala05_Match.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day07/cahpter08/Scala05_Match.scala	(date 1603518641373)
+++ src/test/java/com/teacher/scala/day07/cahpter08/Scala05_Match.scala	(date 1603518641373)
@@ -0,0 +1,31 @@
+package com.teacher.scala.day07.cahpter08
+
+object Scala05_Match {
+
+    def main(args: Array[String]): Unit = {
+
+        // TODO 模式匹配 - 匹配对象
+        // parameter => object (apply)
+        val user = User("zhangsan", 30)
+
+        // object => parameter (unapply)
+        user match {
+            case User("zhangsan", 20) => println("对象没有问题")
+            case _ => println("对象不符合要求")
+        }
+
+    }
+    // 类的构造方法中参数使用var或val声明
+    // 那么这个参数就直接作为类的属性使用
+    // var参数可以修改的，val参数不可以修改的。
+    class User(var name: String, val age: Int)
+    object User {
+        def apply( name:String, age:Int ) = {
+            new User(name, age)
+        }
+
+        def unapply(user: User): Option[(String, Int)] = {
+            Option( (user.name, user.age) )
+        }
+    }
+}
Index: src/main/java/com/nswdwy/scala/chapter02/for_.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter02/for_.scala	(date 1603109868756)
+++ src/main/java/com/nswdwy/scala/chapter02/for_.scala	(date 1603109868756)
@@ -0,0 +1,19 @@
+package com.nswdwy.scala.chapter02
+
+/**
+ * @author yycstart
+ * @create 2020-10-19 20:16
+ */
+object for_ {
+  def main(args: Array[String]): Unit = {
+    for ( i <- Range(1,5); j <- Range(1,4) ) {
+      println("i1 = " + i + ",j1 = " + j )
+    }
+    for ( i <- Range(1,5) ) {
+      for ( j <- Range(1,4) ) {
+        println("i2 = " + i + ",j2 = " + j )
+      }
+    }
+
+  }
+}
Index: src/test/java/com/teacher/scala/day04/chapter06/Scala07_Object_Access.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day04/chapter06/Scala07_Object_Access.scala	(date 1603281575879)
+++ src/test/java/com/teacher/scala/day04/chapter06/Scala07_Object_Access.scala	(date 1603281575879)
@@ -0,0 +1,72 @@
+package com.atguigu.bigdata.scala.chapter06
+
+import com.atguigu.bigdata.scala.chapter06.test.subtest1.TestAAA
+
+
+object Scala07_Object_Access {
+
+    def main(args: Array[String]): Unit = {
+
+        // TODO - 访问权限
+        // 所谓的权限，其实就是用户和服务之间的权利和限制
+        /*
+           以方法为例，方法的提供者和方法的调用者之间的关系
+           java :
+               1. private   : 私有 (同类)
+               2. (default) : 包访问 (同类，同包)
+               3. protected : 受保护权限 (同类，同包，子类)
+               4. public    : 公共的 (任意)
+
+          scala : 和java一样，也分为4种访问权限，但是不尽相同
+               1. private         : 私有
+               2. private[包名]   : 包访问权限, 包私有, 指定的包和子包都能访问
+               3. protected       : 受保护权限 只能同类和子类访问，同包不能访问
+               4. (public)        : 公共的
+
+         */
+
+        val aaa = new TestAAA()
+        //aaa.sex
+        //aaa.name
+        //aaa.age
+    }
+}
+package test {
+
+    package subtest1 {
+
+
+        class TestAAA {
+            private var name : String = "zhangsan"
+            private[test] var age : Int = 30
+            protected var email : String = "zzzzz"
+            var sex : String = "xxxx"
+
+        }
+        class TestCCC {
+            def test(): Unit = {
+                val aa = new TestAAA()
+                println(aa.age)
+                aa.sex
+                //aa.email
+            }
+        }
+    }
+
+    package subtest2 {
+
+        import com.atguigu.bigdata.scala.chapter06.test.subtest1.TestAAA
+
+        class TestBBB extends TestAAA {
+
+            def test(): Unit = {
+                //println(name)
+                println(age)
+                println(email)
+                println(sex)
+            }
+        }
+
+    }
+
+}
Index: src/test/java/com/teacher/scala/day07/cahpter08/Scala03_Match.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day07/cahpter08/Scala03_Match.scala	(date 1603518641368)
+++ src/test/java/com/teacher/scala/day07/cahpter08/Scala03_Match.scala	(date 1603518641368)
@@ -0,0 +1,48 @@
+package com.teacher.scala.day07.cahpter08
+
+object Scala03_Match {
+
+    def main(args: Array[String]): Unit = {
+
+        // TODO 模式匹配 - 匹配数组
+        for (arr <- Array(
+            Array(0),
+            Array(1, 0),
+            Array(0, 1, 0),
+            Array(1, 1, 0),
+            Array(1, 1, 0, 1),
+            Array("hello", 90))) { // 对一个数组集合进行遍历
+            val result = arr match {
+                case Array(0) => "0" //匹配Array(0) 这个数组
+                case Array(x, y) => x + "," + y //匹配有两个元素的数组，然后将将元素值赋给对应的x,y
+                case Array(0, _*) => "以0开头的数组" //匹配以0开头和数组
+                case _ => "something else"
+            }
+            //println("result = " + result)
+        }
+
+        // TODO - 模式匹配 - 匹配列表
+        for (list <- Array(
+            List(0),
+            List(1, 0),
+            List(0, 0, 0),
+            List(1, 0, 0),
+            List(88))) {
+            val result = list match {
+                case List(0) => "0" //匹配List(0)
+                case List(x, y) => x + "," + y //匹配有两个元素的List
+                case List(0, _*) => "0 ..."
+                case _ => "something else"
+            }
+
+            //println(result)
+        }
+
+        val list: List[Int] = List(1)
+
+        list match {
+            case first :: second :: rest => println(first + "-" + second + "-" + rest)
+            case _ => println("something else")
+        }
+    }
+}
Index: src/test/java/com/teacher/scala/day04/chapter06/Scala05_Object_Field.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day04/chapter06/Scala05_Object_Field.scala	(date 1603274931365)
+++ src/test/java/com/teacher/scala/day04/chapter06/Scala05_Object_Field.scala	(date 1603274931365)
@@ -0,0 +1,46 @@
+package com.teacher.scala.day04.chapter06
+
+object Scala05_Object_Field {
+
+    def main(args: Array[String]): Unit = {
+
+        val user = new User()
+
+        // 当访问对象的属性时，其实不是访问这个属性，是访问这个属性的get方法
+        println(user.age)
+        // 当给对象的属性赋值时，其实是访问这个属性的set方法进行赋值
+        user.name = "zhangsan"
+
+        //user.sex = "232323"
+
+        //user.name = "lisi"
+        //user.email = "xxx"
+
+    }
+    class User {
+
+        /*
+      private String name;
+      private int age;
+         */
+
+
+
+        // 声明属性 ： scala中类的属性其实就是类中变量
+        //var name : String = "zhangsan"
+        //val email : String = "zhangsan@test.com"
+        // 抽象属性
+        // 如果想要类似于java的属性默认初始化，那么可以采用下划线赋值
+        // Scala中类的属性在编译为class文件时，是私有的属性，但是同时会编译出属性的2个方法，用于访问这个属性
+        // 这两个方法类似于set,get方法
+        var name : String = _
+        var age : Int = _
+        // 使用val声明的变量不能使用下划线进行赋值
+        // 使用val声明的变量在编译时采用的是final修饰
+        // 使用val声明的变量在编译时不会产生set方法，所以无法修改
+        val sex : String = "1111"
+        //var name : String = null
+
+    }
+
+}
\ No newline at end of file
Index: src/test/java/com/teacher/scala/day02/chapter03/Scala01_Oper.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day02/chapter03/Scala01_Oper.scala	(date 1603108576470)
+++ src/test/java/com/teacher/scala/day02/chapter03/Scala01_Oper.scala	(date 1603108576470)
@@ -0,0 +1,23 @@
+package com.teacher.scala.day02.chapter03
+
+object Scala01_Oper {
+
+    def main(args: Array[String]): Unit = {
+
+        val s1 : String = new String("abc")
+        val s2 : String = "abc"
+        val s3 : String = new String("abc")
+
+        // Scala语法基于java的，但是不尽相同
+        //println( s1 == s2 ) // scala中的双等号会进行非空判断后，调用equals方法
+        //println( s1 == s3 ) // true
+
+//        println( s1.equals(s2) )
+//        println( s1.equals(s3) )
+
+        // scala中的eq方法在编译时会转换为java中的双等号语法。
+        // 马丁：编译器
+        println(s1.eq(s2))
+
+    }
+}
Index: src/test/java/com/teacher/scala/day04/chapter06/Scala06_Object_Field1.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day04/chapter06/Scala06_Object_Field1.scala	(date 1603274931303)
+++ src/test/java/com/teacher/scala/day04/chapter06/Scala06_Object_Field1.scala	(date 1603274931303)
@@ -0,0 +1,31 @@
+package com.teacher.scala.day04.chapter06
+
+import scala.beans.BeanProperty
+
+object Scala06_Object_Field1 {
+
+    def main(args: Array[String]): Unit = {
+
+        // Bean规范
+        // 类的属性应该同时提供公共的set, get方法
+        /*
+
+           private String name;
+           public void setName()
+           public String getName()
+
+         */
+        // 为了能够让声明的类的属性符合Bean规范，可以增加特殊的注解
+        // 增加注解后，Scala编译时会自动添加符合bean规范的set，get方法
+        val user = new User()
+        user.username
+//        user.setUsername()
+//        user.getUsername
+
+    }
+    class User {
+        @BeanProperty
+        var username : String = _
+    }
+
+}
\ No newline at end of file
Index: src/test/java/com/teacher/scala/day02/chapter03/Scala04_Oper.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day02/chapter03/Scala04_Oper.scala	(date 1603104633261)
+++ src/test/java/com/teacher/scala/day02/chapter03/Scala04_Oper.scala	(date 1603104633261)
@@ -0,0 +1,27 @@
+package com.teacher.scala.day02.chapter03
+
+object Scala04_Oper {
+
+    def main(args: Array[String]): Unit = {
+
+        // Scala是完全面向对象的，所以数字也是对象
+        // 万物皆对象
+        // 所以数字会有很多的方法
+        //val b = 10.toByte
+        // scala中的运算符其实就是对象的方法
+        //10 + 10
+        val i = 10.+(10)
+        // 马丁：希望代码开发变得简单，所以能推断出来的语法操作，就可以省略
+        //val j = 10 +(10)
+        val j = 10 + 10
+        println(i)
+
+        //j toString
+        // 标识符命名规则
+        10 % 10
+
+    }
+    def %(num:Int): Unit = {
+
+    }
+}
Index: src/test/java/com/teacher/scala/day04/chapter06/Scala03_Object_Import2.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day04/chapter06/Scala03_Object_Import2.scala	(date 1603274931298)
+++ src/test/java/com/teacher/scala/day04/chapter06/Scala03_Object_Import2.scala	(date 1603274931298)
@@ -0,0 +1,19 @@
+package com.teacher.scala.day04.chapter06
+
+import java.util.{HashMap => JavaHashMap}
+
+object Scala03_Object_Import2 {
+
+    def main(args: Array[String]): Unit = {
+
+        val user = new User()
+        // Scala中可以导入对象的所有内容
+        // Scala导入对象的变量必须使用val声明
+        import user._
+        println(username)
+
+    }
+    class User {
+        val username : String = "zhangsan"
+    }
+}
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- pom.xml	(date 1602985437037)
+++ pom.xml	(date 1602985437037)
@@ -0,0 +1,26 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <modelVersion>4.0.0</modelVersion>
+
+    <groupId>org.example</groupId>
+    <artifactId>Scala</artifactId>
+    <version>1.0-SNAPSHOT</version>
+
+    <dependencies>
+        <dependency>
+            <groupId>junit</groupId>
+            <artifactId>junit</artifactId>
+            <version>4.12</version>
+            <scope>test</scope>
+        </dependency>
+        <dependency>
+            <groupId>junit</groupId>
+            <artifactId>junit</artifactId>
+            <version>4.12</version>
+        </dependency>
+    </dependencies>
+
+
+</project>
\ No newline at end of file
Index: src/test/java/com/teacher/scala/day02/chapter03/Scala01_Oper_Java.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day02/chapter03/Scala01_Oper_Java.java	(date 1603104633257)
+++ src/test/java/com/teacher/scala/day02/chapter03/Scala01_Oper_Java.java	(date 1603104633257)
@@ -0,0 +1,19 @@
+package com.teacher.scala.day02.chapter03;
+
+public class Scala01_Oper_Java {
+    public static void main(String[] args) {
+
+        String s1 = null;
+        String s2 = "abc";
+        String s3 = new String("abc");
+
+        // Scala比较对象的内容，推荐使用双等号
+        System.out.println(s1 == s2);
+        System.out.println(s1 == s3);
+//        System.out.println(s1.equals(s2));
+//        System.out.println(s1.equals(s3));
+//
+//        System.out.println(s1.eq());
+
+    }
+}
Index: src/test/java/com/teacher/scala/day04/chapter06/Scala04_Object_Class.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day04/chapter06/Scala04_Object_Class.scala	(date 1603274931360)
+++ src/test/java/com/teacher/scala/day04/chapter06/Scala04_Object_Class.scala	(date 1603274931360)
@@ -0,0 +1,15 @@
+package com.teacher.scala.day04.chapter06
+
+object Scala04_Object_Class {
+
+    def main(args: Array[String]): Unit = {
+
+        val user = new User()
+
+    }
+    // 声明类
+    class User {
+        // 类的主体内容
+    }
+
+}
\ No newline at end of file
Index: src/main/java/com/nswdwy/scala/chapter07_day06/practice/function_ProvinceShop.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter07_day06/practice/function_ProvinceShop.scala	(date 1603470669057)
+++ src/main/java/com/nswdwy/scala/chapter07_day06/practice/function_ProvinceShop.scala	(date 1603470669057)
@@ -0,0 +1,96 @@
+package com.nswdwy.scala.chapter07_day06.practice
+
+/**
+ * @author yycstart
+ * @create 2020-10-23 23:46
+ */
+object function_ProvinceShop {
+  def main(args: Array[String]): Unit = {
+    // 1. 获取数据集
+    val list = List(
+      ("zhangsan", "河北", "鞋"),
+      ("lisi", "河北", "衣服"),
+      ("wangwu", "河北", "鞋"),
+      ("zhangsan", "河南", "鞋"),
+      ("lisi", "河南", "衣服"),
+      ("wangwu", "河南", "鞋"),
+      ("zhangsan", "河南", "鞋"),
+      ("lisi", "河北", "衣服"),
+      ("wangwu", "河北", "鞋"),
+      ("zhangsan", "河北", "鞋"),
+      ("lisi", "河北", "衣服"),
+      ("wangwu", "河北", "帽子"),
+      ("zhangsan", "河南", "鞋"),
+      ("lisi", "河南", "衣服"),
+      ("wangwu", "河南", "帽子"),
+      ("zhangsan", "河南", "鞋"),
+      ("lisi", "河北", "衣服"),
+      ("wangwu", "河北", "帽子"),
+      ("lisi", "河北", "衣服"),
+      ("wangwu", "河北", "电脑"),
+      ("zhangsan", "河南", "鞋"),
+      ("lisi", "河南", "衣服"),
+      ("wangwu", "河南", "电脑"),
+      ("zhangsan", "河南", "电脑"),
+      ("lisi", "河北", "衣服"),
+      ("wangwu", "河北", "帽子")
+    )
+
+    val startMap: List[(String, Int)] = list.map(
+      t => {
+        val key: String = t._2 + "-" + t._3
+        (key, 1)
+      }
+    )
+    println(startMap)
+    println("-----------------------------")
+    val groupMap: Map[String, List[(String, Int)]] = startMap.groupBy(_._1)
+    println(groupMap)
+    println("--------------------------------")
+    val basicMap: Map[String, Int] = groupMap.map(
+      t => {
+        val key: String = t._1
+        val value: Int = t._2.map(_._2).sum
+        (key, value)
+      }
+    )
+    println(basicMap)
+    println("------------------------------")
+    val midList: List[(String, (String, Int))] = basicMap.toList.map(
+      t => {
+        val strings: Array[String] = t._1.split("-")
+        val key: String = strings(0)
+        val midvalue: String = strings(1)
+        (key, (midvalue, t._2))
+      }
+    )
+    println(midList)
+    println("---------------------------------------")
+    val lastMap: Map[String, List[(String, (String, Int))]] = midList.groupBy(_._1)
+    /*println(lastMap)
+    println("------------------------------------------")
+    val finalMap: Map[String, List[(String, Int)]] = lastMap.map(
+      t => {
+        val key: String = t._1
+        val value: List[(String, Int)] = t._2.map(_._2)
+        (key, value)
+      }
+    )*/
+//    println(finalMap)
+//    println("-----------------------------------")
+//    finalMap.mapValues(
+//      list => {
+//        val itemSumList = list.map(_._2)
+//        itemSumList.sortBy(_._2)
+//      }
+//    )
+    println(lastMap)
+    println("-----------------------")
+    val endResult: Map[String, List[(String, Int)]] = lastMap.mapValues(
+      list => {
+        list.map(_._2).sortBy(_._2)(Ordering.Int.reverse)
+      }
+    )
+    println(endResult)
+  }
+}
Index: src/test/java/com/teacher/scala/day04/chapter06/Scala03_Object_Import_Java.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day04/chapter06/Scala03_Object_Import_Java.java	(date 1603274931352)
+++ src/test/java/com/teacher/scala/day04/chapter06/Scala03_Object_Import_Java.java	(date 1603274931352)
@@ -0,0 +1,21 @@
+package com.teacher.scala.day04.chapter06;
+import java.lang.reflect.Field;
+
+import static com.teacher.scala.day04.bean.Student.id;
+import static com.teacher.scala.day04.bean.Student.reg;
+
+public class Scala03_Object_Import_Java {
+    public static void main(String[] args) throws Exception{
+
+        reg();
+        System.out.println(id);
+
+        Class c = String.class;
+        Field f= String.class.getDeclaredField("value");
+        final String name = f.getName();
+        // username
+        String setMethodName = "set" + name.substring(0,1).toUpperCase() + name.substring(1);
+        // setUsername
+        //c.getMethod(setMethodName)
+    }
+}
Index: src/test/java/com/teacher/scala/day04/chapter06/Scala03_Object_Import1.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day04/chapter06/Scala03_Object_Import1.scala	(date 1603274931342)
+++ src/test/java/com/teacher/scala/day04/chapter06/Scala03_Object_Import1.scala	(date 1603274931342)
@@ -0,0 +1,13 @@
+package com.teacher.scala.day04.chapter06
+
+import java.util.{HashMap=>JavaHashMap}
+
+object Scala03_Object_Import1 {
+
+    def main(args: Array[String]): Unit = {
+
+        // TODO import 可以更改类名，起别名
+        new JavaHashMap
+
+    }
+}
Index: src/main/java/com/nswdwy/scala/chapter07_day06/practice/practice_HelloCount2.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter07_day06/practice/practice_HelloCount2.scala	(date 1603467915890)
+++ src/main/java/com/nswdwy/scala/chapter07_day06/practice/practice_HelloCount2.scala	(date 1603467915890)
@@ -0,0 +1,41 @@
+package com.nswdwy.scala.chapter07_day06.practice
+
+/**
+ * @author yycstart
+ * @create 2020-10-23 20:35
+ */
+object practice_HelloCount2 {
+  def main(args: Array[String]): Unit = {
+    val list = List(
+      ("Hello Hive Hadoop Scala", 4),
+      ("Hello Hive Hadoop", 3),
+      ("Hello Hive", 2),
+      ("Hello", 1)
+    )
+    val tuples: List[(String, Int)] = list.flatMap(
+      t => {
+        val keys: String = t._1
+        val value: Int = t._2
+        keys.split(" ").map(
+          key => {
+            (key, value)
+          }
+        )
+      }
+    )
+    println(tuples)
+    println("-----------------------------------")
+    val midMap: Map[String, List[(String, Int)]] = tuples.groupBy(_._1)
+    println(midMap)
+    println("------------------------------------")
+    val result: Map[String, Int] = midMap.map(
+      t => {
+        val key: String = t._1
+        val value: Int = t._2.map(_._2).sum
+        (key, value)
+      }
+    )
+    println(result)
+
+  }
+}
Index: src/main/java/com/nswdwy/scala/chapter07_day06/practice/practice_HelloCount.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter07_day06/practice/practice_HelloCount.scala	(date 1603467269446)
+++ src/main/java/com/nswdwy/scala/chapter07_day06/practice/practice_HelloCount.scala	(date 1603467269446)
@@ -0,0 +1,38 @@
+package com.nswdwy.scala.chapter07_day06.practice
+
+/**
+ * @author yycstart
+ * @create 2020-10-23 20:35
+ */
+object practice_HelloCount {
+  def main(args: Array[String]): Unit = {
+    val list = List(
+      ("Hello Hive Hadoop Scala", 4),
+      ("Hello Hive Hadoop", 3),
+      ("Hello Hive", 2),
+      ("Hello", 1)
+    )
+    val listString: List[String] = list.map(
+      t => {
+        (t._1 + " ") * t._2
+      }
+    )
+    println(listString)
+    println("------------------------------------")
+
+    val strings: List[String] = listString.flatMap(_.split(" "))
+    println(strings)
+    println("------------------------------------")
+    val midMap: Map[String, List[String]] = strings.groupBy(word => word)
+    println(midMap)
+    println("------------------------")
+    val result: Map[String, Int] = midMap.map(
+      t => {
+        val key: String = t._1
+        val sum: Int = t._2.size
+        (key, sum)
+      }
+    )
+    println(result)
+  }
+}
Index: src/main/java/com/nswdwy/scala/chapter07_day06/review/practice_functionGet2.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter07_day06/review/practice_functionGet2.scala	(date 1603466926458)
+++ src/main/java/com/nswdwy/scala/chapter07_day06/review/practice_functionGet2.scala	(date 1603466926458)
@@ -0,0 +1,36 @@
+package com.nswdwy.scala.chapter07_day06.review
+
+/**
+ * @author yycstart
+ * @create 2020-10-23 20:35
+ */
+object practice_functionGet2 {
+  def main(args: Array[String]): Unit = {
+    // TODO 今天晚上的练习 ： 两个Map的合并
+    //        val map1 = Map("a"->1,"b"->2)
+    //        val map2 = Map("a"->3,"c"->4)
+    //        => Map("a"->4, "b"->2, "c"->4)
+    //        xxxx.foldLeft(yyyy)(zzzz)
+
+       val map1 = Map("a"->1,"b"->2) //("a",1),("b",2)
+       val map2 = Map("a"->3,"c"->4) //("a",3),("c",4)
+
+    val list1: List[(String, Int)] = map1.toList
+    val list2: List[(String, Int)] = map2.toList
+//      val combineMap: Map[String, Int] = map1.++(map2)
+//      println(combineMap)
+
+    val comList: List[(String, Int)] = list1.++(list2)
+    println(comList)
+    val mid: Map[String, List[(String, Int)]] = comList.groupBy(_._1)
+    println(mid)
+    val result: Map[String, Int] = mid.map(
+      t => {
+        (t._1, t._2.map(_._2).sum)
+      }
+    )
+    println(result)
+
+
+  }
+}
Index: src/main/java/com/nswdwy/scala/chapter07_day06/review/practice_foldLeftGet.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter07_day06/review/practice_foldLeftGet.scala	(date 1603501474371)
+++ src/main/java/com/nswdwy/scala/chapter07_day06/review/practice_foldLeftGet.scala	(date 1603501474371)
@@ -0,0 +1,36 @@
+package com.nswdwy.scala.chapter07_day06.review
+
+/**
+ * @author yycstart
+ * @create 2020-10-23 20:35
+ */
+object practice_foldLeftGet {
+  def main(args: Array[String]): Unit = {
+    // TODO 今天晚上的练习 ： 两个Map的合并
+    //        val map1 = Map("a"->1,"b"->2)
+    //        val map2 = Map("a"->3,"c"->4)
+    //        => Map("a"->4, "b"->2, "c"->4)
+    //        xxxx.foldLeft(yyyy)(zzzz)
+
+       val map1 = Map("a"->1,"b"->2) //("a",1),("b",2)
+       val map2 = Map("a"->3,"c"->4) //("a",3),("c",4)
+
+    val list1: List[(String, Int)] = map1.toList
+    val list2: List[(String, Int)] = map2.toList
+//      val combineMap: Map[String, Int] = map1.++(map2)
+//      println(combineMap)
+
+    val comList: List[(String, Int)] = list1.++(list2)
+    println(comList)
+    val mid: Map[String, List[(String, Int)]] = comList.groupBy(_._1)
+    println(mid)
+    val result: Map[String, Int] = mid.map(
+      t => {
+        (t._1, t._2.map(_._2).sum)
+      }
+    )
+    println(result)
+
+
+  }
+}
Index: src/test/java/com/teacher/scala/day03/chapter05/Scala11_Function_Worker.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day03/chapter05/Scala11_Function_Worker.scala	(date 1603274596414)
+++ src/test/java/com/teacher/scala/day03/chapter05/Scala11_Function_Worker.scala	(date 1603274596414)
@@ -0,0 +1,29 @@
+package com.teacher.scala.day03.chapter05
+
+import java.io.ObjectInputStream
+import java.net.{ServerSocket, Socket}
+
+import com.teacher.scala.day01.bean.NewTask
+
+
+object Scala11_Function_Worker {
+
+    def main(args: Array[String]): Unit = {
+
+        val server = new ServerSocket(9999)
+        val master: Socket = server.accept()
+
+        val objIn = new ObjectInputStream(master.getInputStream)
+        val task: NewTask = objIn.readObject().asInstanceOf[NewTask]
+        objIn.close()
+        master.close()
+
+        for ( i <- task.data ) {
+            println(task.logic(i))
+        }
+        println("**** 计算完毕*****")
+        server.close
+
+    }
+
+}
Index: src/main/java/com/nswdwy/scala/chapter07_day06/practice/practice_functionGet2.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter07_day06/practice/practice_functionGet2.scala	(date 1603466748008)
+++ src/main/java/com/nswdwy/scala/chapter07_day06/practice/practice_functionGet2.scala	(date 1603466748008)
@@ -0,0 +1,36 @@
+package com.nswdwy.scala.chapter07_day06.practice
+
+/**
+ * @author yycstart
+ * @create 2020-10-23 20:35
+ */
+object practice_functionGet2 {
+  def main(args: Array[String]): Unit = {
+    // TODO 今天晚上的练习 ： 两个Map的合并
+    //        val map1 = Map("a"->1,"b"->2)
+    //        val map2 = Map("a"->3,"c"->4)
+    //        => Map("a"->4, "b"->2, "c"->4)
+    //        xxxx.foldLeft(yyyy)(zzzz)
+
+       val map1 = Map("a"->1,"b"->2) //("a",1),("b",2)
+       val map2 = Map("a"->3,"c"->4) //("a",3),("c",4)
+
+    val list1: List[(String, Int)] = map1.toList
+    val list2: List[(String, Int)] = map2.toList
+//      val combineMap: Map[String, Int] = map1.++(map2)
+//      println(combineMap)
+
+    val comList: List[(String, Int)] = list1.++(list2)
+    println(comList)
+    val mid: Map[String, List[(String, Int)]] = comList.groupBy(_._1)
+    println(mid)
+    val result: Map[String, Int] = mid.map(
+      t => {
+        (t._1, t._2.map(_._2).sum)
+      }
+    )
+    println(result)
+
+
+  }
+}
Index: src/main/java/com/nswdwy/scala/chapter07_day06/review/practice_functionGet.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter07_day06/review/practice_functionGet.scala	(date 1603466926468)
+++ src/main/java/com/nswdwy/scala/chapter07_day06/review/practice_functionGet.scala	(date 1603466926468)
@@ -0,0 +1,60 @@
+package com.nswdwy.scala.chapter07_day06.review
+
+/**
+ * @author yycstart
+ * @create 2020-10-23 20:35
+ */
+object practice_functionGet {
+  def main(args: Array[String]): Unit = {
+    // TODO 今天晚上的练习 ： 两个Map的合并
+    //        val map1 = Map("a"->1,"b"->2)
+    //        val map2 = Map("a"->3,"c"->4)
+    //        => Map("a"->4, "b"->2, "c"->4)
+    //        xxxx.foldLeft(yyyy)(zzzz)
+
+       val map1 = Map("a"->1,"b"->2) //("a",1),("b",2)
+       val map2 = Map("a"->3,"c"->4) //("a",3),("c",4)
+
+    val group1: Map[String, Map[String, Int]] = map1.groupBy(_._1)
+    val group2: Map[String, Map[String, Int]] = map2.groupBy(_._1)
+    println(group1)
+    println(group2)
+    println("-----------------")
+    val list1: List[(String, Map[String, Int])] = group1.toList
+    val list2: List[(String, Map[String, Int])] = group2.toList
+
+    println(list1)
+    println(list2)
+    println("-----------------------")
+    val allList: List[(String, Map[String, Int])] = list1 ::: list2 ::: Nil
+    println(allList)
+    println("------------------------")
+//    val groupList: Map[String, List[(String, Map[String, Int])]] = allList.groupBy(_._1)
+//    println(groupList)
+    println("-------------------------")
+
+    val midresult: List[(String, Int)] = allList.map(
+      t => {
+        val key: String = t._1
+        val sum: Int = t._2.get(key).sum
+        (key, sum)
+      }
+    )
+    println(midresult)
+    println("-------------------------")
+    val groupMap: Map[String, List[(String, Int)]] = midresult.groupBy(_._1)
+    println(groupMap)
+    println("-------------------------")
+    val result: Map[String, Int] = groupMap.map(
+      t => {
+        (t._1, t._2.map(_._2).sum)
+      }
+    )
+    println(result)
+
+
+
+
+
+  }
+}
Index: src/main/java/com/nswdwy/scala/chapter07_day06/practice/practice_foldLeftGet.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter07_day06/practice/practice_foldLeftGet.scala	(date 1603466138678)
+++ src/main/java/com/nswdwy/scala/chapter07_day06/practice/practice_foldLeftGet.scala	(date 1603466138678)
@@ -0,0 +1,36 @@
+package com.nswdwy.scala.chapter07_day06.practice
+
+/**
+ * @author yycstart
+ * @create 2020-10-23 20:35
+ */
+object practice_foldLeftGet {
+  def main(args: Array[String]): Unit = {
+    // TODO 今天晚上的练习 ： 两个Map的合并
+    //        val map1 = Map("a"->1,"b"->2)
+    //        val map2 = Map("a"->3,"c"->4)
+    //        => Map("a"->4, "b"->2, "c"->4)
+    //        xxxx.foldLeft(yyyy)(zzzz)
+
+       val map1 = Map("a"->1,"b"->2) //("a",1),("b",2)
+       val map2 = Map("a"->3,"c"->4) //("a",3),("c",4)
+
+    val list1: List[(String, Int)] = map1.toList
+    val list2: List[(String, Int)] = map2.toList
+//      val combineMap: Map[String, Int] = map1.++(map2)
+//      println(combineMap)
+
+    val comList: List[(String, Int)] = list1.++(list2)
+    println(comList)
+    val mid: Map[String, List[(String, Int)]] = comList.groupBy(_._1)
+    println(mid)
+    val result: Map[String, Int] = mid.map(
+      t => {
+        (t._1, t._2.map(_._2).sum)
+      }
+    )
+    println(result)
+
+
+  }
+}
Index: src/test/java/com/teacher/scala/day03/chapter06/Scala03_Object_Import.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day03/chapter06/Scala03_Object_Import.scala	(date 1603276324955)
+++ src/test/java/com/teacher/scala/day03/chapter06/Scala03_Object_Import.scala	(date 1603276324955)
@@ -0,0 +1,47 @@
+package com.teacher.scala.day03.chapter06
+
+object Scala03_Object_Import {
+
+    def main(args: Array[String]): Unit = {
+
+        // TODO import
+        /*
+
+           java : import 导类
+                  import static  静态导入(属性，方法)
+
+           马丁说：能不能对功能进行扩展
+         */
+//         1. Scala可以导包
+//        new util.Date()
+
+//         2. java中采用星号导入包中所有的类，但是scala采用的下划线
+//         import java.util._
+
+        // 3. import关键字可以在任意的位置的使用
+//        import java.util.Date
+//        val d = new Date()
+
+        // 4. 如果需要导入同一个包中大量的类，但是又没有下划线,可以写在一行当中
+        //import java.util.{List, Map, ArrayList, HashMap}
+
+        // 5. 如果导入不同包中有相同的类，那么会有冲突，可以隐藏类
+//        import java.util._
+//        import java.sql.{Date=>_, _}
+//        new Date()
+
+        // 6. java中java.lang包中的类是默认导入的，无序显示声明
+        //    scala中java.lang包中的类可以直接使用，无需导入
+        //    scala中scala包中的类可以直接使用，无需导入
+        //    scala中Predef类可以直接使用，无需导入
+        //println("abc")
+
+        // 7. scala中的import采用的是相对包路径来导入，以当前包为基准进行导入
+        //    可以采用绝对包路径进行访问
+        println(new _root_.java.util.HashMap())
+
+    }
+}
+class HashMap {
+            //override def finalize(): Unit = super.finalize()
+        }
Index: src/test/java/com/teacher/scala/day03/chapter06/package.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day03/chapter06/package.scala	(date 1603188824720)
+++ src/test/java/com/teacher/scala/day03/chapter06/package.scala	(date 1603188824720)
@@ -0,0 +1,9 @@
+package com.teacher.scala.day03
+
+package object chapter06 {
+
+    var name : String = "zhangsan"
+    def login() = {
+
+    }
+}
Index: src/main/java/com/nswdwy/scala/chapter07_day06/review/_9_Function_Fold.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter07_day06/review/_9_Function_Fold.scala	(date 1603457658804)
+++ src/main/java/com/nswdwy/scala/chapter07_day06/review/_9_Function_Fold.scala	(date 1603457658804)
@@ -0,0 +1,14 @@
+package com.nswdwy.scala.chapter07_day06.review
+
+/**
+ * @author yycstart
+ * @create 2020-10-22 0:11
+ */
+object _9_Function_Fold {
+    def main(args: Array[String]): Unit = {
+        // TODO Function Fold
+
+
+    }
+
+}
Index: src/test/java/com/teacher/scala/day03/chapter06/Scala02_Object_Package.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day03/chapter06/Scala02_Object_Package.scala	(date 1603188824728)
+++ src/test/java/com/teacher/scala/day03/chapter06/Scala02_Object_Package.scala	(date 1603188824728)
@@ -0,0 +1,33 @@
+package com.teacher.scala.day03.chapter06
+
+class Emp {
+
+    }
+    object Scala02_Object_Package {
+            def main(args: Array[String]): Unit = {
+
+                // TODO 面向对象编程 - package
+
+                /*
+                   java 中 package 作用？
+                   1. 管理类 ： Chapter01_Scala01_HelloWorld
+                   2. 区分类 ： DateSQL, DateUtil
+                   3. 包访问权限 :
+
+                   马丁说：能不能给package语法提供更加强大的功能。
+                   1. 包名和源码文件的物理路径没有关系
+                   2. package可以多次声明使用
+                   3. package可以体现上下级关系
+                   4. 在同一个源码中，上级包声明的内容，在子包中使用可以不需要导入
+                   5. 将package当成一个对象, 其中声明的属性和方法可以在子包中直接用
+                 */
+                new Emp()
+
+                login()
+
+            }
+
+        }
+
+
+
Index: src/main/java/com/nswdwy/scala/chapter07_day06/practice/practice_functionGet.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter07_day06/practice/practice_functionGet.scala	(date 1603459640595)
+++ src/main/java/com/nswdwy/scala/chapter07_day06/practice/practice_functionGet.scala	(date 1603459640595)
@@ -0,0 +1,60 @@
+package com.nswdwy.scala.chapter07_day06.practice
+
+/**
+ * @author yycstart
+ * @create 2020-10-23 20:35
+ */
+object practice_functionGet {
+  def main(args: Array[String]): Unit = {
+    // TODO 今天晚上的练习 ： 两个Map的合并
+    //        val map1 = Map("a"->1,"b"->2)
+    //        val map2 = Map("a"->3,"c"->4)
+    //        => Map("a"->4, "b"->2, "c"->4)
+    //        xxxx.foldLeft(yyyy)(zzzz)
+
+       val map1 = Map("a"->1,"b"->2) //("a",1),("b",2)
+       val map2 = Map("a"->3,"c"->4) //("a",3),("c",4)
+
+    val group1: Map[String, Map[String, Int]] = map1.groupBy(_._1)
+    val group2: Map[String, Map[String, Int]] = map2.groupBy(_._1)
+    println(group1)
+    println(group2)
+    println("-----------------")
+    val list1: List[(String, Map[String, Int])] = group1.toList
+    val list2: List[(String, Map[String, Int])] = group2.toList
+
+    println(list1)
+    println(list2)
+    println("-----------------------")
+    val allList: List[(String, Map[String, Int])] = list1 ::: list2 ::: Nil
+    println(allList)
+    println("------------------------")
+//    val groupList: Map[String, List[(String, Map[String, Int])]] = allList.groupBy(_._1)
+//    println(groupList)
+    println("-------------------------")
+
+    val midresult: List[(String, Int)] = allList.map(
+      t => {
+        val key: String = t._1
+        val sum: Int = t._2.get(key).sum
+        (key, sum)
+      }
+    )
+    println(midresult)
+    println("-------------------------")
+    val groupMap: Map[String, List[(String, Int)]] = midresult.groupBy(_._1)
+    println(groupMap)
+    println("-------------------------")
+    val result: Map[String, Int] = groupMap.map(
+      t => {
+        (t._1, t._2.map(_._2).sum)
+      }
+    )
+    println(result)
+
+
+
+
+
+  }
+}
Index: src/test/java/com/teacher/scala/day03/chapter06/Scala01_Object.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day03/chapter06/Scala01_Object.scala	(date 1603188824732)
+++ src/test/java/com/teacher/scala/day03/chapter06/Scala01_Object.scala	(date 1603188824732)
@@ -0,0 +1,45 @@
+package com.teacher.scala.day03.chapter06
+
+object Scala01_Object {
+    def main(args: Array[String]): Unit = {
+
+        // TODO 面向对象编程
+        /*
+        java : 面向对象编程
+
+        package com.atguigu.test
+        import java.util.*;
+
+        public class User extends Person implements XXXX {
+
+           private String name;
+           public void setName( String name ) {
+               this.name = name;
+           }
+           public String getName() {
+              return this.name;
+           }
+        }
+
+        User user = new User();
+        user.setName("zhangsan")
+        System.out.println(user.getName())
+         */
+
+        // 创建对象
+        val user : User = new User()
+        println(user.name)
+        user.test()
+    }
+    // 声明类
+    class User{
+        // scala中类的属性其实就是变量
+        val name : String = "zhangsan"
+
+        // scala中类的方法其实就是函数
+        def test(): Unit = {
+            println("test....")
+        }
+    }
+
+}
Index: src/main/java/com/nswdwy/scala/chapter07_day06/review/_9_Function_Reduce.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter07_day06/review/_9_Function_Reduce.scala	(date 1603457481008)
+++ src/main/java/com/nswdwy/scala/chapter07_day06/review/_9_Function_Reduce.scala	(date 1603457481008)
@@ -0,0 +1,20 @@
+package com.nswdwy.scala.chapter07_day06.review
+
+import scala.collection.immutable
+import scala.collection.parallel.immutable.ParSeq
+
+/**
+ * @author yycstart
+ * @create 2020-10-22 0:11
+ */
+object _9_Function_Reduce {
+    def main(args: Array[String]): Unit = {
+        // TODO Function
+        val list : List[Int] = List(1, 2, 3, 4, 5)
+        val k1: Int = list.reduce(_ + _)
+        val k2: Option[Int] = list.reduceOption(_ + _)
+        println("k1---->"+k1)
+        println("k2--->"+ k2)
+    }
+
+}
Index: src/main/java/com/nswdwy/scala/chapter/HelloScala.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter/HelloScala.scala	(date 1603246906666)
+++ src/main/java/com/nswdwy/scala/chapter/HelloScala.scala	(date 1603246906666)
@@ -0,0 +1,13 @@
+package com.nswdwy.scala.chapter
+
+
+/**
+ * @author yycstart
+ * @create 2020-10-17 10:27
+ */
+object HelloScala {
+  def main(args: Array[String]): Unit = {
+    System.out.println("Hello Scala")
+    println("Scala Hello")
+  }
+}
Index: src/main/java/com/nswdwy/scala/chapter07_day06/review/_8_Par.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter07_day06/review/_8_Par.scala	(date 1603454807279)
+++ src/main/java/com/nswdwy/scala/chapter07_day06/review/_8_Par.scala	(date 1603454807279)
@@ -0,0 +1,21 @@
+package com.nswdwy.scala.chapter07_day06.review
+
+import scala.collection.parallel.immutable.ParSeq
+import scala.collection.{immutable, mutable}
+
+/**
+ * @author yycstart
+ * @create 2020-10-22 0:11
+ */
+object _8_Par {
+    def main(args: Array[String]): Unit = {
+        // TODO Par
+        //单核并发
+        val k1: immutable.IndexedSeq[String] = (1 to 100).map(ll => Thread.currentThread().getName)
+        //多核并行（其中可能伴随并发）
+        val k2: ParSeq[String] = ((1 to 100)).par.map(x => Thread.currentThread().getName)
+        println(k1)
+        println(k2)
+    }
+
+}
Index: src/main/java/com/nswdwy/scala/chapter07_day06/review/_7_Queue.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter07_day06/review/_7_Queue.scala	(date 1603454477439)
+++ src/main/java/com/nswdwy/scala/chapter07_day06/review/_7_Queue.scala	(date 1603454477439)
@@ -0,0 +1,24 @@
+package com.nswdwy.scala.chapter07_day06.review
+
+import scala.collection.mutable
+
+/**
+ * @author yycstart
+ * @create 2020-10-22 0:11
+ */
+object _7_Queue {
+    def main(args: Array[String]): Unit = {
+        // TODO Queue
+        val que: mutable.Queue[Int] = new mutable.Queue[Int]()
+        que.enqueue(1, 3, 2, 6, 5, 4, 7, 8, 9)
+        println("sss------------>"+que)
+        println("bbb--------"+que.dequeue())
+        //出队列
+        println("bbb--------"+que.dequeue())
+        //向队列中添加（入对）
+        que.enqueue(111)
+        // 先进先出，
+        println(que)
+    }
+
+}
Index: src/test/java/com/teacher/scala/day04/bean/Task.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day04/bean/Task.java	(date 1603274737725)
+++ src/test/java/com/teacher/scala/day04/bean/Task.java	(date 1603274737725)
@@ -0,0 +1,7 @@
+package com.teacher.scala.day04.bean;
+
+import java.io.Serializable;
+
+public class Task implements Serializable {
+    public String data = "zhangsan";
+}
Index: src/test/java/com/teacher/scala/day04/bean/Test.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day04/bean/Test.java	(date 1603274737737)
+++ src/test/java/com/teacher/scala/day04/bean/Test.java	(date 1603274737737)
@@ -0,0 +1,10 @@
+package com.teacher.scala.day04.bean;
+
+public class Test {
+
+    public static void main(String[] args) {
+        BBB bbb = new BBB();
+        bbb.test();
+    }
+
+}
\ No newline at end of file
Index: src/test/java/com/teacher/scala/day04/bean/ScalaUser.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day04/bean/ScalaUser.scala	(date 1603274737719)
+++ src/test/java/com/teacher/scala/day04/bean/ScalaUser.scala	(date 1603274737719)
@@ -0,0 +1,5 @@
+package com.teacher.scala.day04.bean
+
+class ScalaUser {
+
+}
Index: src/test/java/com/teacher/scala/day04/bean/Student.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day04/bean/Student.java	(date 1603274737728)
+++ src/test/java/com/teacher/scala/day04/bean/Student.java	(date 1603274737728)
@@ -0,0 +1,9 @@
+package com.teacher.scala.day04.bean;
+
+public class Student {
+    public String name;
+    public static int id = 10;
+    public static void reg() {
+
+    }
+}
Index: src/test/java/com/teacher/scala/day04/bean/ScalaClassObject.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day04/bean/ScalaClassObject.scala	(date 1603274737735)
+++ src/test/java/com/teacher/scala/day04/bean/ScalaClassObject.scala	(date 1603274737735)
@@ -0,0 +1,8 @@
+package com.teacher.scala.day04.bean
+
+class ScalaClassObject {
+// 成员方法
+}
+object ScalaClassObject {
+// 静态方法
+}
Index: src/main/java/com/nswdwy/scala/chapter07_day06/review/_6_Tuple.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter07_day06/review/_6_Tuple.scala	(date 1603453851575)
+++ src/main/java/com/nswdwy/scala/chapter07_day06/review/_6_Tuple.scala	(date 1603453851575)
@@ -0,0 +1,27 @@
+package com.nswdwy.scala.chapter07_day06.review
+
+/**
+ * @author yycstart
+ * @create 2020-10-22 0:11
+ */
+object _6_Tuple {
+    def main(args: Array[String]): Unit = {
+        // TODO Tuple
+
+        val tuple: (Int, String, Double) = (1, "name", 1.0)
+        val arity: Int = tuple.productArity
+        println("--1---"+arity)
+        println("-------------------------")
+        val value: Any = tuple.productElement(1)
+        println("2____"+value)
+        println("-------------------------------")
+
+        val iterator: Iterator[Any] = tuple.productIterator
+        println(iterator+"---")
+        while (iterator.hasNext){
+            println(iterator.next()+ ">>")
+        }
+
+    }
+
+}
Index: src/test/java/com/teacher/scala/day04/bean/ScalaObjectUser.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day04/bean/ScalaObjectUser.scala	(date 1603274737732)
+++ src/test/java/com/teacher/scala/day04/bean/ScalaObjectUser.scala	(date 1603274737732)
@@ -0,0 +1,5 @@
+package com.teacher.scala.day04.bean
+
+object ScalaObjectUser {
+
+}
Index: src/main/java/com/nswdwy/scala/chapter07_day06/review/_5_Map1.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter07_day06/review/_5_Map1.scala	(date 1603453202867)
+++ src/main/java/com/nswdwy/scala/chapter07_day06/review/_5_Map1.scala	(date 1603453202867)
@@ -0,0 +1,24 @@
+package com.nswdwy.scala.chapter07_day06.review
+
+/**
+ * @author yycstart
+ * @create 2020-10-22 0:11
+ */
+object _5_Map1 {
+    def main(args: Array[String]): Unit = {
+        // TODO Map
+        val map: Map[String, Any] = Map(("name", "zhangsan"), ("id", 1), "age" -> 19, "email" -> "zhang@")
+        val keys: Iterable[String] = map.keys
+        println("1-----------"+keys)
+        println("----------------------------------------")
+        println("2--map.keySet---"+map.keySet)
+        println("----------------------------------------")
+        val iterator: Iterator[String] = map.keysIterator
+        while (iterator.hasNext){
+            println("3------"+iterator.next())
+        }
+        println("----------------------------------------")
+
+    }
+
+}
Index: src/test/java/com/teacher/scala/day04/bean/Emp.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day04/bean/Emp.java	(date 1603274737707)
+++ src/test/java/com/teacher/scala/day04/bean/Emp.java	(date 1603274737707)
@@ -0,0 +1,8 @@
+package com.teacher.scala.day04.bean;
+
+public class Emp {
+    public static final int age = 30;
+    static {
+        System.out.println("emp....");
+    }
+}
Index: src/test/java/com/teacher/scala/day04/bean/NewTask.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day04/bean/NewTask.scala	(date 1603274737722)
+++ src/test/java/com/teacher/scala/day04/bean/NewTask.scala	(date 1603274737722)
@@ -0,0 +1,7 @@
+package com.teacher.scala.day04.bean
+
+class NewTask extends Serializable {
+
+    val data = 1 to 5
+    val logic = (x:Int) => x * 2
+}
Index: src/test/java/com/teacher/scala/day04/bean/AAA.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day04/bean/AAA.java	(date 1603274737714)
+++ src/test/java/com/teacher/scala/day04/bean/AAA.java	(date 1603274737714)
@@ -0,0 +1,15 @@
+package com.teacher.scala.day04.bean;
+
+public class AAA {
+    private String name = "zhangsan";
+
+    private String age;
+
+    public void setAge( String age ) {
+        this.age = age;
+        name = age.substring(0,1);
+    }
+    public String getAge() {
+        return this.age;
+    }
+}
Index: src/test/java/com/teacher/scala/day04/bean/BBB.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day04/bean/BBB.java	(date 1603274737711)
+++ src/test/java/com/teacher/scala/day04/bean/BBB.java	(date 1603274737711)
@@ -0,0 +1,10 @@
+package com.teacher.scala.day04.bean;
+
+public class BBB extends AAA {
+    public String name = "lisi";
+
+    public void test() {
+//        System.out.println(this.name);
+//        System.out.println(super.name);
+    }
+}
Index: src/test/java/com/teacher/scala/day04/bean/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day04/bean/User.java	(date 1603274737717)
+++ src/test/java/com/teacher/scala/day04/bean/User.java	(date 1603274737717)
@@ -0,0 +1,9 @@
+package com.teacher.scala.day04.bean;
+
+public class User {
+    public static int age;
+    static {
+        age = 30;
+        System.out.println("user....");
+    }
+}
Index: src/test/java/com/teacher/scala/day05/chapter07/Scala02_Collection_Method1.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day05/chapter07/Scala02_Collection_Method1.scala	(date 1603382883176)
+++ src/test/java/com/teacher/scala/day05/chapter07/Scala02_Collection_Method1.scala	(date 1603382883176)
@@ -0,0 +1,35 @@
+package com.teacher.scala.day05.chapter07
+
+import scala.collection.mutable.ArrayBuffer
+
+object Scala02_Collection_Method1 {
+
+    def main(args: Array[String]): Unit = {
+
+        // 集合常用的方法
+        val buffer = ArrayBuffer(1,2,3,4)
+
+        // 反转
+        println(buffer.reverse) //ArrayBuffer(4, 3, 2, 1)
+        // 获取前三条
+        println(buffer.take(3)) //ArrayBuffer(1, 2, 3)
+
+        // 获取后三条
+        //println(buffer.reverse.take(3).reverse)
+        println(buffer.takeRight(3))  //ArrayBuffer(2, 3, 4)
+        // 删除数据
+        println(buffer.drop(1))  //ArrayBuffer(2, 3, 4)
+        println(buffer.dropRight(1)) //ArrayBuffer(1, 2, 3)
+
+        // 头
+        println(buffer.head) // 1
+        // 尾
+        println(buffer.tail) // 【2，3，4】
+        // 最后一个
+        println(buffer.last) // 4
+        // 初始
+        println(buffer.init) // 【1，2，3】
+
+        // Array() + 1 => Array(1) + 2 =>
+    }
+}
Index: src/test/java/com/teacher/scala/day05/chapter07/Scala02_Collection_Method.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day05/chapter07/Scala02_Collection_Method.scala	(date 1603353703770)
+++ src/test/java/com/teacher/scala/day05/chapter07/Scala02_Collection_Method.scala	(date 1603353703770)
@@ -0,0 +1,27 @@
+package com.teacher.scala.day05.chapter07
+
+import scala.collection.mutable
+import scala.collection.mutable.ArrayBuffer
+
+object Scala02_Collection_Method {
+
+    def main(args: Array[String]): Unit = {
+
+        // 集合常用的方法
+        val buffer = ArrayBuffer(1,2,3,4)
+
+        println(buffer.length) // 4
+        println(buffer.size) // 4
+        println(buffer.isEmpty)
+        println(buffer.contains(3))
+
+        val iterator: Iterator[Int] = buffer.iterator
+        while ( iterator.hasNext ) {
+            println(iterator.next())
+        }
+
+        println(buffer.mkString(","))
+        buffer.foreach(println)
+
+    }
+}
Index: src/main/java/com/nswdwy/scala/chapter07_day06/review/_5_Map.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter07_day06/review/_5_Map.scala	(date 1603453543061)
+++ src/main/java/com/nswdwy/scala/chapter07_day06/review/_5_Map.scala	(date 1603453543061)
@@ -0,0 +1,36 @@
+package com.nswdwy.scala.chapter07_day06.review
+
+/**
+ * @author yycstart
+ * @create 2020-10-22 0:11
+ */
+object _5_Map {
+    def main(args: Array[String]): Unit = {
+        // TODO Map
+        val map: Map[String, Any] = Map(("name", "zhangsan"), ("id", 1), "age" -> 19, "email" -> "zhang@")
+        val values: Iterable[Any] = map.values
+        println("values--"+values)
+        println("--------------------------")
+        val iterator: Iterator[Any] = map.valuesIterator
+        while (iterator.hasNext){
+            println("iterator--"+iterator.next())
+        }
+        println("--------------------------")
+        val option: Option[Any] = map.get("name")
+        println("option--"+option)
+        println("----------------------------------")
+        val value: Any = map.getOrElse("name", "10")
+        println("value--"+value)
+        println("---------------------------------")
+        val option1: Option[Any] = map.get("13")
+        val option2: Option[Any] = map.get("name")
+        println("--option1--"+option1)
+        println("--option2--"+option2)
+        println("-------------------------------------")
+        val value1: Any = option1.getOrElse(0)
+        val value2: Any = option2.getOrElse(11)
+        println("--value1--"+value1)
+        println("--value2--"+value2)
+    }
+
+}
Index: src/test/java/com/teacher/scala/day05/chapter07/Scala01_Collection_Array4.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day05/chapter07/Scala01_Collection_Array4.scala	(date 1603353703767)
+++ src/test/java/com/teacher/scala/day05/chapter07/Scala01_Collection_Array4.scala	(date 1603353703767)
@@ -0,0 +1,36 @@
+package com.teacher.scala.day05.chapter07
+
+import scala.collection.mutable.ArrayBuffer
+
+object Scala01_Collection_Array4 {
+
+    def main(args: Array[String]): Unit = {
+
+        // 创建Array的可变数组
+       val arrayBuffer : ArrayBuffer[Int] = ArrayBuffer(1,2,3,4)
+
+        // 追加数据
+        arrayBuffer.append(1,2,3,4)
+
+        arrayBuffer.appendAll(Array(5,6,7,8))
+
+        // 插入数据
+        //arrayBuffer.insert(2, 5, 6) // 1，2，5，6，3，4
+
+        // 更新数据
+        //arrayBuffer.update(1, 10) // 1,2,3,4,5,6,7,8
+        //arrayBuffer(1) = 10       // 1,10,3,4,5,6,7,8
+
+        // 移除数据
+        //arrayBuffer.remove(1)  // 1,3,4,5,6,7,8
+        arrayBuffer.remove(1,3)  // 1,5,6,7,8
+
+        println(arrayBuffer)
+
+//        arrayBuffer.appendAll()
+
+//        arrayBuffer.update()
+//        arrayBuffer.remove()
+
+    }
+}
Index: src/test/java/com/teacher/scala/day05/chapter07/Scala01_Collection_Array5.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day05/chapter07/Scala01_Collection_Array5.scala	(date 1603353703742)
+++ src/test/java/com/teacher/scala/day05/chapter07/Scala01_Collection_Array5.scala	(date 1603353703742)
@@ -0,0 +1,21 @@
+package com.teacher.scala.day05.chapter07
+
+import scala.collection.mutable
+import scala.collection.mutable.ArrayBuffer
+
+object Scala01_Collection_Array5 {
+
+    def main(args: Array[String]): Unit = {
+
+        // 可变数组和不可变数组的转换
+
+        // 不可变 => 可变
+        val array = Array(1,2,3,4)
+        val buffer: mutable.Buffer[Int] = array.toBuffer
+
+        // 可变 => 不可变
+        val buff = ArrayBuffer(1,2,3,4)
+        val array1: Array[Int] = buff.toArray
+
+    }
+}
Index: src/main/java/com/nswdwy/scala/chapter07_day06/review/_3_Seq1.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter07_day06/review/_3_Seq1.scala	(date 1603452457492)
+++ src/main/java/com/nswdwy/scala/chapter07_day06/review/_3_Seq1.scala	(date 1603452457492)
@@ -0,0 +1,24 @@
+package com.nswdwy.scala.chapter07_day06.review
+
+import scala.collection.mutable.ListBuffer
+
+
+/**
+ * @author yycstart
+ * @create 2020-10-22 0:11
+ */
+object _3_Seq1 {
+    def main(args: Array[String]): Unit = {
+        val ints: ListBuffer[Int] = ListBuffer(1, 2, 3, 4)
+        val ints1 = List(3, 4, 5, 6)
+        //Scala中的空集合可以采用特殊
+        val list = 1 :: 2 :: 3:: 4::Nil
+        val list2 = 2::"3"::Nil
+        val list3 = 2::ints1::Nil
+        val list4 = 9::ints1:::2::Nil
+        println(list)
+        println(list2)
+        println(list3)
+        println(list4)
+    }
+}
Index: src/test/java/com/teacher/scala/day05/chapter07/Scala01_Collection_Array2.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day05/chapter07/Scala01_Collection_Array2.scala	(date 1603353703759)
+++ src/test/java/com/teacher/scala/day05/chapter07/Scala01_Collection_Array2.scala	(date 1603353703759)
@@ -0,0 +1,35 @@
+package com.teacher.scala.day05.chapter07
+
+object Scala01_Collection_Array2 {
+
+    def main(args: Array[String]): Unit = {
+
+        // 创建数组
+        //new Array[String](5)
+        //Array.apply(1,2,3,4)
+        // 使用Array的伴生对象来创建数组，传递参数
+        val ints1: Array[Int] = Array(1,2,3,4)
+        val ints2: Array[Int] = Array(5,6,7,8)
+
+        val ints3: Array[Int] = ints1 ++: ints2
+
+        //println(ints3.mkString(","))
+
+        // 多维数组
+        //var myMatrix = Array.ofDim[Int](3,3)
+        //myMatrix.foreach(list=>println(list.mkString(",")))
+
+        val arr6: Array[Int] = Array.concat(ints1, ints2)
+        //arr6.foreach(println)
+
+        // 创建指定范围的数组
+        val arr7: Array[Int] = Array.range(0,2)
+        //arr7.foreach(println)
+
+        // 创建并填充指定数量的数组
+        val arr8:Array[Int] = Array.fill[Int](5)(-1)
+        arr8.foreach(println)
+
+
+    }
+}
Index: src/main/java/com/nswdwy/scala/chapter07_day06/review/_4_Set.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter07_day06/review/_4_Set.scala	(date 1603452457487)
+++ src/main/java/com/nswdwy/scala/chapter07_day06/review/_4_Set.scala	(date 1603452457487)
@@ -0,0 +1,27 @@
+package com.nswdwy.scala.chapter07_day06.review
+
+/**
+ * @author yycstart
+ * @create 2020-10-22 0:11
+ */
+object _4_Set {
+    def main(args: Array[String]): Unit = {
+        val ints: Set[Int] = Set(1, 3, 2, 2, 1, 3, 4, 6, 5, 7)
+        val set: Set[Any] = Set(1, 3, 2, 2, 1, "aj", 5, 4, 6, 5, 7)
+        val list: List[Int] = List(4, 8, 7, 9)
+        val ints1 = ints + 8
+        val ints2 = ints + "__jj"
+        val ints3 = set + "__jj"
+        val ints4 = set + list
+        println(ints.size)
+        println(ints)
+        println(ints1)
+        println(ints2)
+        println(ints3)
+        println(ints4)
+        println(ints eq ints1)
+        println(ints eq ints2)
+
+
+    }
+}
Index: src/test/java/com/teacher/scala/day05/chapter07/Scala01_Collection_Array3.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day05/chapter07/Scala01_Collection_Array3.scala	(date 1603353703753)
+++ src/test/java/com/teacher/scala/day05/chapter07/Scala01_Collection_Array3.scala	(date 1603353703753)
@@ -0,0 +1,35 @@
+package com.teacher.scala.day05.chapter07
+
+import scala.collection.mutable.ArrayBuffer
+
+object Scala01_Collection_Array3 {
+
+    def main(args: Array[String]): Unit = {
+
+        // 创建Array的可变数组
+       val arrayBuffer : ArrayBuffer[Int] = new ArrayBuffer[Int]()
+
+        // 追加数据
+        arrayBuffer.append(1,2,3,4)
+
+        arrayBuffer.appendAll(Array(5,6,7,8))
+
+        // 插入数据
+        //arrayBuffer.insert(2, 5, 6) // 1，2，5，6，3，4
+
+        // 更新数据
+        //arrayBuffer.update(1, 10) // 1,2,3,4,5,6,7,8
+        //arrayBuffer(1) = 10       // 1,10,3,4,5,6,7,8
+
+        // 移除数据
+        //arrayBuffer.remove(1)  // 1,3,4,5,6,7,8
+        arrayBuffer.remove(1,3)  // 1,5,6,7,8
+
+        println(arrayBuffer)
+//        arrayBuffer.appendAll()
+
+//        arrayBuffer.update()
+//        arrayBuffer.remove()
+
+    }
+}
Index: src/main/java/com/nswdwy/scala/chapter07_day06/review/_4_Set1.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter07_day06/review/_4_Set1.scala	(date 1603452457490)
+++ src/main/java/com/nswdwy/scala/chapter07_day06/review/_4_Set1.scala	(date 1603452457490)
@@ -0,0 +1,25 @@
+package com.nswdwy.scala.chapter07_day06.review
+
+import scala.collection.mutable
+
+/**
+ * @author yycstart
+ * @create 2020-10-22 0:11
+ */
+object _4_Set1 {
+    def main(args: Array[String]): Unit = {
+        //TODO
+        val set: mutable.Set[Int] = mutable.Set(1,2,3,4,5,6)
+        val bool: Boolean = set.add(6)
+        val bool1: Boolean = set.add(7)
+        println(bool)
+        println(bool1)
+        // += 相当于将改变后的集合重新赋给原来集合，因此集合地址未改变
+        val value: set.type = set += 7
+        //即使可变集合 + 操作也会创建新的集合
+        val values: mutable.Set[Int] = set + 7
+        println(set eq value)
+        println(set eq values)
+
+    }
+}
Index: src/main/java/com/nswdwy/scala/chapter07_day06/review/_3_Seq.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter07_day06/review/_3_Seq.scala	(date 1603452352826)
+++ src/main/java/com/nswdwy/scala/chapter07_day06/review/_3_Seq.scala	(date 1603452352826)
@@ -0,0 +1,15 @@
+package com.nswdwy.scala.chapter07_day06.review
+
+/**
+ * @author yycstart
+ * @create 2020-10-22 0:11
+ */
+object _3_Seq {
+    def main(args: Array[String]): Unit = {
+        // TODO
+//        new Seq[String]()
+        val ints: Seq[Int] = Seq(1, 2, 3, 4)
+        println(ints.+:(0))
+    }
+
+}
Index: src/test/java/com/teacher/scala/day05/chapter07/Scala01_Collection_Array1.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day05/chapter07/Scala01_Collection_Array1.scala	(date 1603382056064)
+++ src/test/java/com/teacher/scala/day05/chapter07/Scala01_Collection_Array1.scala	(date 1603382056064)
@@ -0,0 +1,34 @@
+package com.teacher.scala.day05.chapter07
+
+import scala.collection.immutable
+
+object Scala01_Collection_Array1 {
+
+    def main(args: Array[String]): Unit = {
+
+        // TODO 集合 - 数组
+
+        val array: Array[Int] = new Array[Int](5)
+
+        // 集合中的update方法等同于集合后面小括号
+        //array(2) = "wangwu"
+        //array.update(2, "wangwu")
+
+        // scala中如果一个运算符使用冒号结尾，那么运算规则从后往前，从右向左
+        // 对Array的操作，增加元素，之间的数组并不会发生改变，会产生新的数组
+        val newArray: Array[Int] = array.+:(5)
+        val newArray1: Array[Int] = 5 +: array
+        val newArray2: Array[Int] = array :+ 6
+
+
+        println(array eq newArray)
+        println(newArray(2))
+        println(array.mkString(","))
+        println(newArray.mkString(","))
+        println(newArray1.mkString(","))
+        println(newArray2.mkString(","))
+
+
+
+    }
+}
Index: src/test/java/com/teacher/scala/day01/bean/Student.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day01/bean/Student.java	(date 1603274548781)
+++ src/test/java/com/teacher/scala/day01/bean/Student.java	(date 1603274548781)
@@ -0,0 +1,8 @@
+package com.teacher.scala.day01.bean;
+
+public class Student {
+    public static int id = 10;
+    public static void reg() {
+
+    }
+}
Index: src/test/java/com/teacher/scala/day01/bean/NewTask.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day01/bean/NewTask.scala	(date 1603274548785)
+++ src/test/java/com/teacher/scala/day01/bean/NewTask.scala	(date 1603274548785)
@@ -0,0 +1,7 @@
+package com.teacher.scala.day01.bean
+
+class NewTask extends Serializable {
+
+    val data = 1 to 5
+    val logic = (x:Int) => x * 2
+}
Index: src/test/java/com/teacher/scala/day01/bean/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day01/bean/User.java	(date 1603274548771)
+++ src/test/java/com/teacher/scala/day01/bean/User.java	(date 1603274548771)
@@ -0,0 +1,9 @@
+package com.teacher.scala.day01.bean;
+
+public class User {
+    public static int age;
+    static {
+        age = 30;
+        System.out.println("user....");
+    }
+}
Index: src/test/java/com/teacher/scala/day01/bean/Task.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day01/bean/Task.java	(date 1603274548777)
+++ src/test/java/com/teacher/scala/day01/bean/Task.java	(date 1603274548777)
@@ -0,0 +1,7 @@
+package com.teacher.scala.day01.bean;
+
+import java.io.Serializable;
+
+public class Task implements Serializable {
+    public String data = "zhangsan";
+}
Index: src/test/java/com/teacher/scala/day05/chapter07/Scala03_WordCount.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day05/chapter07/Scala03_WordCount.scala	(date 1603353703776)
+++ src/test/java/com/teacher/scala/day05/chapter07/Scala03_WordCount.scala	(date 1603353703776)
@@ -0,0 +1,48 @@
+package com.teacher.scala.day05.chapter07
+
+import scala.collection.mutable.ArrayBuffer
+import scala.math.Ordering
+
+object Scala03_WordCount {
+
+    def main(args: Array[String]): Unit = {
+
+        // TODO 集合 - WordCount
+        val lines = ArrayBuffer(
+            "Hello Scala Hive",
+            "Hello Scala",
+            "Scala"
+        )
+
+        // 1. 将数据拆分成一个一个的单词（扁平化）
+        //    line => words
+        val words = lines.flatMap(
+            line => {
+                line.split(" ")
+            }
+        )
+
+        // 2. 将相同的单词放置在一个组中
+        //    word => Array(word, word, word)
+        // k => word
+        // v => array
+        // (word, array) => A
+        // (word, count) => B
+        val groupMap: Map[String, ArrayBuffer[String]] = words.groupBy(word=>word)
+
+        // 3. 将分组后的数据进行统计
+        //   Array(word, word, word) => 3
+        val wordToCount: Map[String, Int] = groupMap.map(
+            t => {
+                val word = t._1
+                val array = t._2
+
+                (word, array.length)
+            }
+        )
+
+        // 4. 将统计结果打印在控制台上
+        println(wordToCount)
+
+    }
+}
Index: src/test/java/com/teacher/scala/day05/chapter07/Scala01_Collection_Array.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day05/chapter07/Scala01_Collection_Array.scala	(date 1603353703737)
+++ src/test/java/com/teacher/scala/day05/chapter07/Scala01_Collection_Array.scala	(date 1603353703737)
@@ -0,0 +1,39 @@
+package com.teacher.scala.day05.chapter07
+
+object Scala01_Collection_Array {
+
+    def main(args: Array[String]): Unit = {
+
+        // TODO 集合 - 数组
+
+        // 创建数组
+        // 数组有专门的类型Array
+        // 编译后和java的数组完全相同
+        val array: Array[String] = new Array[String](5)
+
+        // 对数据进行操作
+        // 数组的访问不能使用中括号，采用小括号访问,编译后其实就是中括号
+        array(0) = "zhangsan"
+        array(1) = "lisi"
+
+        // 对数据进行遍历
+        //println(array)
+//        for ( s <- array ) {
+//            println(s)
+//        }
+//        println(array.mkString(","))
+
+        def foreachFunction(s:String): Unit = {
+            println("s = " + s)
+        }
+        // foreach方法会将集合中的每一个元素用函数进行处理
+        //array.foreach(foreachFunction)
+//        array.foreach((s:String)=>{println("s =" +s)})
+//        array.foreach((s)=>{println("s =" +s)})
+//        array.foreach(s=>{println("s =" +s)})
+//        array.foreach(s=>println("s =" +s))
+//        array.foreach(println(_))
+        array.foreach(println)
+
+    }
+}
Index: src/main/java/com/nswdwy/scala/chapter03_day03/Function_Hell2.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter03_day03/Function_Hell2.scala	(date 1603279885782)
+++ src/main/java/com/nswdwy/scala/chapter03_day03/Function_Hell2.scala	(date 1603279885782)
@@ -0,0 +1,31 @@
+package com.nswdwy.scala.chapter03_day03
+
+/**
+ * @author yycstart
+ * @create 2020-10-20 18:35
+ */
+object Function_Hell2 {
+  def main(args: Array[String]): Unit = {
+
+    // TODO 将函数作为参数进行传递
+    def f(s:String)= {
+      s * 2
+    }
+    def test(f:String=>String)=f("zhangsan")
+    val s2 = f _
+    println(test(s2))
+    println("--------------")
+    //完整写法
+    println(test((s: String) => {s * 2}))
+    println(test((s: String) => s * 2))
+    println("---------------------------------")
+    println(test(s => s * 2))
+    println("----------------------------------")
+    def test00( name : String, f: (String)=> String ):Unit = {
+            println(f(name))
+        }
+    test00("lisi",_ * 2)
+
+
+  }
+}
Index: src/test/java/com/teacher/scala/day05/chapter07/Scala02_Collection_Method5.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day05/chapter07/Scala02_Collection_Method5.scala	(date 1603353703756)
+++ src/test/java/com/teacher/scala/day05/chapter07/Scala02_Collection_Method5.scala	(date 1603353703756)
@@ -0,0 +1,49 @@
+package com.teacher.scala.day05.chapter07
+
+import scala.collection.mutable.ArrayBuffer
+
+object Scala02_Collection_Method5 {
+
+    def main(args: Array[String]): Unit = {
+
+        // TODO 集合 - 功能函数
+        val buffer = ArrayBuffer(1,2,3,4)
+        // TODO filter
+        // 将数据集中的每一条数据进行过滤函数，当结果为true，数据保留，如果为false，数据丢弃
+        def filterFunction( num:Int ): Boolean = {
+            num % 2 == 1
+        }
+//        println(buffer.filter(filterFunction))
+//        println(buffer.filter(_ % 2 == 1))
+
+        // TODO groupBy
+        // 根据指定的规则对数据集中的数据进行分组
+        def groupFunction(num:Int): Int = {
+            num % 2
+        }
+        // 1 => 1
+        // 2 => 0
+        // 3 => 1
+        // 4 => 0
+        // 分组后的数据应该是Map (K - V)
+        // K - 分组的key
+        // V - 相同key的数据集
+        //println(buffer.groupBy(groupFunction))
+
+        val stringBuffer = ArrayBuffer( "Hello", "Hadoop", "Scala", "Spark" )
+
+        //println(stringBuffer.groupBy(_.substring(0, 1)))
+
+        // Scala中的键值对对象是一个特殊的集合
+        // K - V
+        // 在Scala中，可以将无关的数据作为整体使用，这个整体是一个特殊的集合，称之为元组
+        // 所谓的元组(tuple)，其实就是多个元素的组合。声明时用小括号即可
+        // 因为元组中的数据没有关系，所以一般是通过顺序号来访问
+        val t = (1,  "zhangsan", 30)
+        println(t._1)
+        println(t._2)
+        println(t._3)
+
+        // Scala中键值对对象就是元组,将只有两个元素的元组称之为键值对，也称之为对偶元组
+    }
+}
Index: src/test/java/com/teacher/scala/day05/chapter07/Scala02_Collection_Method6.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day05/chapter07/Scala02_Collection_Method6.scala	(date 1603353703745)
+++ src/test/java/com/teacher/scala/day05/chapter07/Scala02_Collection_Method6.scala	(date 1603353703745)
@@ -0,0 +1,20 @@
+package com.teacher.scala.day05.chapter07
+
+import scala.collection.mutable.ArrayBuffer
+import scala.math.Ordering
+
+object Scala02_Collection_Method6 {
+
+    def main(args: Array[String]): Unit = {
+
+        // TODO 集合 - 功能函数
+        val buffer = ArrayBuffer(1,4,2,3)
+        val stringBuffer = ArrayBuffer("1", "2","11", "3")
+
+        // TODO sortBy
+        // 根据指定的规则对数据集进行数据排序，默认为升序
+        //println(buffer.sortBy(num => num))
+        println(stringBuffer.sortBy(s => s.toInt))
+        println(stringBuffer.sortBy(s => s.toInt)(Ordering.Int.reverse))
+    }
+}
Index: src/test/java/com/teacher/scala/day05/chapter07/Scala02_Collection_Method3.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day05/chapter07/Scala02_Collection_Method3.scala	(date 1603382984527)
+++ src/test/java/com/teacher/scala/day05/chapter07/Scala02_Collection_Method3.scala	(date 1603382984527)
@@ -0,0 +1,38 @@
+package com.teacher.scala.day05.chapter07
+
+import scala.collection.mutable.ArrayBuffer
+
+object Scala02_Collection_Method3 {
+
+    def main(args: Array[String]): Unit = {
+
+        // 集合常用的方法
+        //val buffer = ArrayBuffer(1,2,3,4)
+        //val buffer1 = ArrayBuffer(3,4,5,6)
+
+        // 拉链,将两个数据集中相同位置的数据连接在一起
+        //println(buffer.zip(buffer1))
+
+        // 数据集中每三个数据的和
+        val buffer = ArrayBuffer(1,5,7,4,2,9,3,8)
+        // 1,5,7
+        // 5,7,4
+        // 7,4,2
+
+        // 1,5,7
+        // 5,7,4
+        // 滑动
+        val iterator: Iterator[ArrayBuffer[Int]] = buffer.sliding(3,3)
+        while ( iterator.hasNext ) {
+            val ints: ArrayBuffer[Int] = iterator.next()
+            println(ints.sum)  //13
+            /*
+            13
+            15
+            11
+             */
+
+        }
+
+    }
+}
Index: src/test/java/com/teacher/scala/day05/chapter07/Scala02_Collection_Method4.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day05/chapter07/Scala02_Collection_Method4.scala	(date 1603376512067)
+++ src/test/java/com/teacher/scala/day05/chapter07/Scala02_Collection_Method4.scala	(date 1603376512067)
@@ -0,0 +1,58 @@
+package com.teacher.scala.day05.chapter07
+
+import scala.collection.mutable.ArrayBuffer
+
+object Scala02_Collection_Method4 {
+
+    def main(args: Array[String]): Unit = {
+
+        val strings = new Array[String](10)
+        // TODO 集合 - 功能函数
+        val buffer = ArrayBuffer(1,2,3,4)
+        val stringBuffer = ArrayBuffer("Scala", "Hive", "Flume")
+        // A => B (转换，映射)
+        // Scala => S
+        // Hive => H
+        // Flume => F
+
+        // Int => B
+        def mapFunction(num:Int): Int = {
+            num * 2
+        }
+
+        // map方法可以实现这样的功能：
+        // 数据集中的每一条数据通过执行函数进行转换，这个转换没有特定的规则
+//        println(buffer.map(mapFunction))
+//        buffer.map( (num:Int)=>{num * 2} )
+//        buffer.map( (num)=>{num * 2} )
+//        buffer.map( num=>{num * 2} )
+//        buffer.map( num=>num * 2 )
+        //println(buffer.map(_ * 2))
+        //println(stringBuffer.map(_.substring(0, 1)))
+
+        // 扁平化
+        // 所谓的扁平化，其实就是将整体进行拆分，形成个体来使用
+        val buffer1: ArrayBuffer[ArrayBuffer[Int]] = ArrayBuffer(
+            ArrayBuffer(1, 2), ArrayBuffer(3, 4)
+        )
+
+        // 1,2,3,4
+        // buffer(), buffer()
+        //println(buffer1)
+        //val flatten: ArrayBuffer[Int] = buffer1.flatten
+        //println(flatten)
+
+        // "Hello Scala Hive" => "Hello", "Scala", "Hive"
+        val wordBuffer = ArrayBuffer("Hello Scala Hive", "Hello World")
+
+        //println(wordBuffer.flatten)
+        // 扁平映射
+        // 1 -> N
+//        println(wordBuffer.flatMap(
+//            str => {
+//                str.split(" ")
+//            }
+//        ))
+        println(wordBuffer.flatMap(_.split(" ")))
+    }
+}
Index: src/test/java/com/teacher/scala/day05/chapter07/Scala02_Collection_Method2.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day05/chapter07/Scala02_Collection_Method2.scala	(date 1603353703773)
+++ src/test/java/com/teacher/scala/day05/chapter07/Scala02_Collection_Method2.scala	(date 1603353703773)
@@ -0,0 +1,31 @@
+package com.teacher.scala.day05.chapter07
+
+import scala.collection.mutable.ArrayBuffer
+
+object Scala02_Collection_Method2 {
+
+    def main(args: Array[String]): Unit = {
+
+        // 集合常用的方法
+        val buffer = ArrayBuffer(1,2,3,4)
+        val buffer1 = ArrayBuffer(3,4,5,6)
+
+        // 简单计算
+        // 和
+        println(buffer.sum)
+        println(buffer.max)
+        println(buffer.min)
+        // 积
+        println(buffer.product)
+
+        // 交集
+        println(buffer.intersect(buffer1)) // 【3，4】
+        // 并集
+        println(buffer.union(buffer1)) // 【1，2，3，4，3，4，5，6】
+        // 差集
+        println(buffer.diff(buffer1)) // 【1，2】
+
+        // 去重
+        println(buffer.union(buffer1).distinct)
+    }
+}
Index: src/main/java/com/nswdwy/scala/chapter03_day03/Function_Hell4.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter03_day03/Function_Hell4.scala	(date 1603279885824)
+++ src/main/java/com/nswdwy/scala/chapter03_day03/Function_Hell4.scala	(date 1603279885824)
@@ -0,0 +1,27 @@
+package com.nswdwy.scala.chapter03_day03
+
+/**
+ * @author yycstart
+ * @create 2020-10-20 18:35
+ */
+object Function_Hell4 {
+  def main(args: Array[String]): Unit = {
+
+    // TODO 函数作为返回值
+
+    def test () = {
+      def ff() = {
+        println("lslsls")
+      }
+      ff _
+    }
+
+    println(test()) //只执行到第一层，获取到ff的地址值
+    test()() //执行到第二层
+
+
+
+
+
+  }
+}
Index: src/test/java/com/teacher/scala/day06/chapter08/Scala01_Match.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day06/chapter08/Scala01_Match.scala	(date 1603447576945)
+++ src/test/java/com/teacher/scala/day06/chapter08/Scala01_Match.scala	(date 1603447576945)
@@ -0,0 +1,25 @@
+package com.teacher.scala.day06.chapter08
+
+object Scala01_Match {
+
+    def main(args: Array[String]): Unit = {
+
+        val age = 20
+
+        // 模式匹配使用match语法
+        // 按照case顺序进行匹配
+        // 如果匹配成功，那么执行箭头右边的代码，执行完毕后，会自动切断匹配
+        // 如果都匹配不成功，那么执行下划线的分支。
+        // 如果所有的分支都没有匹配成功，会发生错误
+        age match {
+            case _  => println("其他")
+            case 10 => {
+                println("年龄为10")
+            }
+            case 20 => println("年龄为20")
+            case 30 => println("年龄为30")
+            //case _  => println("其他")
+        }
+
+    }
+}
Index: src/test/java/com/teacher/scala/day06/chapter08/Scala02_Match.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day06/chapter08/Scala02_Match.scala	(date 1603447576942)
+++ src/test/java/com/teacher/scala/day06/chapter08/Scala02_Match.scala	(date 1603447576942)
@@ -0,0 +1,35 @@
+package com.teacher.scala.day06.chapter08
+
+object Scala02_Match {
+
+    def main(args: Array[String]): Unit = {
+
+        // TODO 模式匹配 - 匹配常量
+        def describe(x: Any) = {
+            x match {
+                case 5 => "Int five"
+                case "hello" => "String hello"
+                case true => "Boolean true"
+                case '+' => "Char +"
+            }
+        }
+
+        // TODO 模式匹配 - 匹配类型
+        // 模式匹配中，类型的匹配其实是不考虑泛型的。
+        // 因为泛型和类型不是一回事。
+        // 数组类型是特殊情况，需要考虑泛型
+        def describe1(x: Any) = {
+            x match {
+                case i: Int => "Int"
+                case s: String => "String hello"
+                case m: List[Int] => "List"
+                case c: Array[Int] => "Array[Int]"
+                case someThing => "something else " + someThing
+            }
+        }
+
+        //println(describe1(List("1","2","3")))
+        // int[]
+        println(describe1(Array("1","2","3")))
+    }
+}
Index: src/main/java/com/nswdwy/scala/chapter03_day03/Function_Hell3.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter03_day03/Function_Hell3.scala	(date 1603279885775)
+++ src/main/java/com/nswdwy/scala/chapter03_day03/Function_Hell3.scala	(date 1603279885775)
@@ -0,0 +1,52 @@
+package com.nswdwy.scala.chapter03_day03
+
+/**
+ * @author yycstart
+ * @create 2020-10-20 18:35
+ */
+object Function_Hell3 {
+  def main(args: Array[String]): Unit = {
+
+    // TODO 匿名函数
+    def test(name:String): Unit ={
+      println(name)
+    }
+    def ff(test:String=>Unit): Unit ={
+      test("zhang_san")
+    }
+
+    ff(test)
+    ff(test:String=>Unit)
+    ff((name:String) => {println(name)})
+    ff(name => println(name))
+   /*
+       ff(_ => println(_))  //错误
+         //Error:(22, 21) missing parameter type for expanded
+      //function ((x$2: <error>) => println(x$2))
+
+    */
+    //ff(_ => println(_))//错误
+    ff(println(_))//匿名函数最简版
+    //扩充
+    ff(println) //函数就叫println
+
+
+
+  def fun(m:Int,n:Int,f:(Int,Int) => Int) = {
+       f(m,n)
+    }
+
+    println(fun(12, 10, (x, y) => x + y))
+    println("-------------------------")
+    println(fun(12, 11, _ + _))
+    println("-------------------------")
+    println(fun(11,11,_ - _))
+    println("-------------------------")
+    println(fun(11,11,_ * _))
+    println("-------------------------")
+    println(fun(11,11,_ / _))
+
+
+
+  }
+}
Index: src/test/java/com/teacher/scala/day06/chapter07/Scala17_Collection_Method10.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day06/chapter07/Scala17_Collection_Method10.scala	(date 1603447414796)
+++ src/test/java/com/teacher/scala/day06/chapter07/Scala17_Collection_Method10.scala	(date 1603447414796)
@@ -0,0 +1,47 @@
+package com.teacher.scala.day06.chapter07
+
+object Scala17_Collection_Method10 {
+
+    def main(args: Array[String]): Unit = {
+
+        val user1 = new User()
+        user1.id = 1
+        user1.age = 25
+
+        val user2 = new User()
+        user2.id = 2
+        user2.age = 30
+
+        val user3 = new User()
+        user3.id = 2
+        user3.age = 16
+
+       val list = List(
+           user1, user2, user3
+       )
+
+        //println(list.sortBy(_.id)(Ordering.Int.reverse))
+        // 自定义排序
+        println(list.sortWith(
+            (left, right) => {
+                // 排序方式满足预期返回true, 否则返回false
+                if (left.id  < right.id) {
+                    true
+                } else if ( left.id == right.id ) {
+                    left.age > right.age
+                } else {
+                    false
+                }
+            }
+        ))
+
+    }
+    class User {
+        var id : Int = _
+        var age : Int = _
+
+        override def toString: String = {
+            s"User[${id}, ${age}]"
+        }
+    }
+}
Index: src/test/java/com/teacher/scala/day03/chapter05/Scala08_Function.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day03/chapter05/Scala08_Function.scala	(date 1603202290934)
+++ src/test/java/com/teacher/scala/day03/chapter05/Scala08_Function.scala	(date 1603202290934)
@@ -0,0 +1,36 @@
+package com.teacher.scala.day03.chapter05
+
+object Scala08_Function {
+
+    def main(args: Array[String]): Unit = {
+
+        // TODO 递归
+//         1. 函数自己的逻辑处理中调用自己
+//         2. 递归函数应该有跳出递归逻辑
+//         3. 递归在调用时传递的参数应该有规律
+//         4. scala中递归函数必须显示声明返回值类型
+
+        //  阶乘
+        // 递归算法有问题
+        //println(test(100000000))
+
+//         scala语言中尾递归会在编译时，优化为while循环，所以不会出现问题
+//         java中也有尾递归，但是不能优化。也会出现问题，但是出问题的时间要晚于普通递归
+        test1()
+
+    }
+    // 尾递归 tail
+    def test1(): Unit = {
+        println("abc")
+        test1()
+
+    }
+    // 递归
+//    def test( num:Int ):Int = {
+//        if ( num <= 1 ) {
+//            1
+//        } else {
+//            num * test(num-1)
+//        }
+//    }
+}
Index: src/test/java/com/teacher/scala/day06/chapter07/Scala16_Req.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day06/chapter07/Scala16_Req.scala	(date 1603470482881)
+++ src/test/java/com/teacher/scala/day06/chapter07/Scala16_Req.scala	(date 1603470482881)
@@ -0,0 +1,94 @@
+package com.teacher.scala.day06.chapter07
+
+object Scala16_Req {
+
+    def main(args: Array[String]): Unit = {
+
+        // TODO 不同省份的商品点击排行
+        // 1. 获取数据集
+        val list = List(
+            ("zhangsan", "河北", "鞋"),
+            ("lisi", "河北", "衣服"),
+            ("wangwu", "河北", "鞋"),
+            ("zhangsan", "河南", "鞋"),
+            ("lisi", "河南", "衣服"),
+            ("wangwu", "河南", "鞋"),
+            ("zhangsan", "河南", "鞋"),
+            ("lisi", "河北", "衣服"),
+            ("wangwu", "河北", "鞋"),
+            ("zhangsan", "河北", "鞋"),
+            ("lisi", "河北", "衣服"),
+            ("wangwu", "河北", "帽子"),
+            ("zhangsan", "河南", "鞋"),
+            ("lisi", "河南", "衣服"),
+            ("wangwu", "河南", "帽子"),
+            ("zhangsan", "河南", "鞋"),
+            ("lisi", "河北", "衣服"),
+            ("wangwu", "河北", "帽子"),
+            ("lisi", "河北", "衣服"),
+            ("wangwu", "河北", "电脑"),
+            ("zhangsan", "河南", "鞋"),
+            ("lisi", "河南", "衣服"),
+            ("wangwu", "河南", "电脑"),
+            ("zhangsan", "河南", "电脑"),
+            ("lisi", "河北", "衣服"),
+            ("wangwu", "河北", "帽子")
+        )
+
+        // 2. 将数据进行结构的转换
+        // (姓名，省份，商品) => ( 省份-商品，1 )
+        val mapList = list.map(
+            t => {
+                (t._2 + "-" + t._3, 1)
+            }
+        )
+
+        // 3. 将转换结构后的数据进行分组聚合
+        // ( 省份-商品，1 ) => ( 省份-商品，sum )
+        val groupMap: Map[String, List[(String, Int)]] = mapList.groupBy(_._1)
+//        val keySumList = groupMap.map(
+//            t => {
+//                val k = t._1
+//                val list = t._2
+//                (k, list.size)
+//            }
+//        )
+        // 当对KV类型数据进行处理时，如果Key不变，只对V进行操作，其实可以采用mapValues
+        val keySumMap: Map[String, Int] = groupMap.mapValues(list=>list.size)
+
+
+        // 4. 将聚合后的结果进行结构的转换
+        // map方法只改变和转换数据的结构和类型，但是外部的容器的类型不变的。
+        // ( 省份-商品，sum ) => ( 省份，（商品，sum） )
+        val keySumList: List[(String, Int)] = keySumMap.toList
+        val prvToItemAndSumMap: List[(String, (String, Int))] = keySumList.map(
+            t => {
+                val k = t._1
+                val sum = t._2
+                val ks = k.split("-")
+                (ks(0), (ks(1), sum))
+            }
+        )
+
+        // 5. 将转换结构后的数据根据省份进行分组
+        // ( 省份，（商品，sum） ) => ( 省份，Iterator【 (商品1，sum1),(商品2， sum2) 】 )
+        val groupMap1: Map[String, List[(String, (String, Int))]] = prvToItemAndSumMap.groupBy(_._1)
+        println("----------------------------")
+        println(groupMap1)
+        println("--------------------------------")
+        // 6. 对分组后的数据进行排序（降序）
+        val result = groupMap1.mapValues(
+            list => {
+                val itemSumList: List[(String, Int)] = list.map(_._2)
+                // 排序
+                itemSumList.sortBy(_._2)(Ordering.Int.reverse)//.take(3)
+            }
+        )
+
+        // 7. 将结果打印在控制台上
+        println(result)
+
+
+
+    }
+}
Index: src/test/java/com/teacher/scala/day03/chapter05/Scala06_Function.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day03/chapter05/Scala06_Function.scala	(date 1603198094336)
+++ src/test/java/com/teacher/scala/day03/chapter05/Scala06_Function.scala	(date 1603198094336)
@@ -0,0 +1,57 @@
+package com.teacher.scala.day03.chapter05
+
+import scala.util.control.Breaks
+
+object Scala06_Function {
+
+    def main(args: Array[String]): Unit = {
+
+        // TODO 控制抽象
+        // 可以将函数作为一个对象传递给另外一个函数。
+        // 但是有时候只希望传递一段逻辑（代码）,而不是函数的整体
+        // 也就意味着将函数的一部分来使用，而不是整体，就和抽象一样。
+
+        // 控制抽象的声明
+        def fun(op:  => Unit) = {
+            op  // 执行参数逻辑
+        }
+
+        // 调用
+        // 如果函数的参数是多行，那么小括号可以采用大括号代替
+        fun{
+            val i = 10
+            val j = 20
+            println(i + j)
+        }
+
+        // 使用控制抽象，可以将一段代码逻辑作为参数传递个其他操作
+        // 这样，逻辑就不是固定不变的。可以动态发生变化，一般用于实现自定义语法
+        Breaks.breakable{
+            for ( i <- 1 to 10 ) {
+                if ( i % 2 == 0 ) {
+                    Breaks.break()
+                }
+            }
+        }
+
+
+
+    }
+    def logic(f:()=>Unit): Unit = {
+        step1()
+        f()
+        step3()
+    }
+    def step1(): Unit = {
+
+    }
+    def mysql(): Unit = {
+
+    }
+    def hbase(): Unit = {
+
+    }
+    def step3(): Unit = {
+
+    }
+}
Index: src/test/java/com/teacher/scala/day06/chapter07/Scala16_Req1.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day06/chapter07/Scala16_Req1.scala	(date 1603447414806)
+++ src/test/java/com/teacher/scala/day06/chapter07/Scala16_Req1.scala	(date 1603447414806)
@@ -0,0 +1,22 @@
+package com.teacher.scala.day06.chapter07
+
+object Scala16_Req1 {
+
+    def main(args: Array[String]): Unit = {
+
+        val list = List(1,2,1,2)
+        val list1 = List("Hello", "Hive")
+
+        def groupFunction(num:Int) :Int = {
+            num
+        }
+
+        // 在匿名函数使用时，如果传递的值直接返回，那么不能采用下划线代替，因为有歧义
+        val group: Map[Int, List[Int]] = list.groupBy(num=>num)
+        //list1.groupBy(_.substring(0,1))
+
+        println(group)
+
+
+    }
+}
Index: src/test/java/com/teacher/scala/day03/chapter05/Scala06_Function1.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day03/chapter05/Scala06_Function1.scala	(date 1603198094342)
+++ src/test/java/com/teacher/scala/day03/chapter05/Scala06_Function1.scala	(date 1603198094342)
@@ -0,0 +1,23 @@
+package com.teacher.scala.day03.chapter05
+
+import scala.util.control.Breaks
+
+object Scala06_Function1 {
+
+    def main(args: Array[String]): Unit = {
+
+        // TODO 控制抽象
+        whileOperator(true) {
+            println("zhangsan")
+        }
+
+    }
+    def whileOperator( flg : Boolean ) = {
+        def operator( op :  => Unit ) = {
+            if ( flg ) {
+                op
+            }
+        }
+        operator _
+    }
+}
Index: src/test/java/com/teacher/scala/day06/chapter07/Scala14_WordCount.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day06/chapter07/Scala14_WordCount.scala	(date 1603447414801)
+++ src/test/java/com/teacher/scala/day06/chapter07/Scala14_WordCount.scala	(date 1603447414801)
@@ -0,0 +1,38 @@
+package com.teacher.scala.day06.chapter07
+
+import scala.collection.mutable.ArrayBuffer
+
+object Scala14_WordCount {
+
+    def main(args: Array[String]): Unit = {
+
+        // TODO 集合 - WordCount
+        val lines = ArrayBuffer(
+            "Hello Hive Hadoop Scala Hello Hive Hadoop Scala Hello Hive Hadoop Scala Hello Hive Hadoop Scala",
+            "Hello Hive Hadoop Hello Hive Hadoop Hello Hive Hadoop",
+            "Hello Hive Hello Hive",
+            "Hello"
+        )
+
+        val list = List(
+            ("Hello Hive Hadoop Scala", 4),
+            ("Hello Hive Hadoop", 3),
+            ("Hello Hive", 2),
+            ("Hello", 1)
+        )
+        // Hello Hive Hadoop Scala Hello Hive Hadoop Scala Hello Hive Hadoop Scala Hello Hive Hadoop Scala
+        // Hello Hive Hadoop Hello Hive Hadoop Hello Hive Hadoop
+        // Hello Hive Hello Hive
+
+        // Tuple => String
+        val newLines = list.map(
+            t => {
+                // abc * 2 = abcabc
+                (t._1 + " ") * t._2
+            }
+        )
+        newLines.foreach(println)
+
+
+    }
+}
Index: src/main/java/com/nswdwy/scala/chapter03_day03/function_Hell5.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter03_day03/function_Hell5.scala	(date 1603279885796)
+++ src/main/java/com/nswdwy/scala/chapter03_day03/function_Hell5.scala	(date 1603279885796)
@@ -0,0 +1,29 @@
+package com.nswdwy.scala.chapter03_day03
+
+/**
+ * @author yycstart
+ * @create 2020-10-20 20:48
+ */
+object function_Hell5 {
+  def main(args: Array[String]): Unit = {
+    //TODO 闭包
+
+    def outer( x:Int ) = {
+      def middle( y:Int ) = {
+        def inner( f : (Int, Int) => Int ) = {
+          f(x, y)
+        }
+        inner _
+      }
+      middle _
+    }
+
+    println(outer(10)(10)(_ + _))
+    println("------------------")
+
+    def f1 = outer(20)
+    def f2 = f1(2)
+    print(f2(_ + _))
+
+  }
+}
Index: src/test/java/com/teacher/scala/day06/chapter07/Scala15_WordCount.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day06/chapter07/Scala15_WordCount.scala	(date 1603447414814)
+++ src/test/java/com/teacher/scala/day06/chapter07/Scala15_WordCount.scala	(date 1603447414814)
@@ -0,0 +1,59 @@
+package com.teacher.scala.day06.chapter07
+
+import scala.collection.mutable.ArrayBuffer
+
+object Scala15_WordCount {
+
+    def main(args: Array[String]): Unit = {
+
+        // TODO 集合 - WordCount
+
+        val list = List(
+            ("Hello Hive Hadoop Scala", 4),
+            ("Hello Hive Hadoop", 3),
+            ("Hello Hive", 2),
+            ("Hello", 1)
+        )
+        // ("Hello Hive Hadoop", 3) => ("hello", 3), ("hive", 3), ("hadoop", 3)
+        // ("Hello Hive", 2) => ("hello", 2), ("hive", 2)
+        // ("Hello", 1)
+
+        // ("Hello", 1,2,3,4)=>("hello", 10)
+        val flatResult = list.flatMap(
+            t => {
+                val str = t._1
+                val cnt = t._2
+                // (Hello, Hive)
+                str.split(" ").map(
+                    word => {
+                        ( word, cnt )
+                    }
+                )
+            }
+        )
+
+        // List((Hello,4), (Hive,4), (Hadoop,4), (Scala,4), (Hello,3), (Hive,3), (Hadoop,3), (Hello,2), (Hive,2), (Hello,1))
+        val groupMap: Map[String, List[(String, Int)]] = flatResult.groupBy(_._1)
+
+        // ( hello, [ (hello,4),("hello",3) ] )
+        // ( hello, 10)
+        val result = groupMap.map(
+            t => {
+                val word = t._1
+                // List((hello,4), (hello,3))
+                val list = t._2
+                // List(4,3,2,1)
+                val cntList = list.map(_._2)
+                (word, cntList.sum)
+                //(word, cntList.reduce(_+_))
+            }
+        )
+
+
+        println(result)
+
+
+
+
+    }
+}
Index: src/test/java/com/teacher/scala/day06/chapter07/Scala12_Collection_Method8.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day06/chapter07/Scala12_Collection_Method8.scala	(date 1603447414835)
+++ src/test/java/com/teacher/scala/day06/chapter07/Scala12_Collection_Method8.scala	(date 1603447414835)
@@ -0,0 +1,56 @@
+package com.teacher.scala.day06.chapter07
+
+import scala.collection.mutable.ArrayBuffer
+
+object Scala12_Collection_Method8 {
+
+    def main(args: Array[String]): Unit = {
+
+        // TODO 集合 - 计算方法
+        // scala集合提供了一些用于聚合数据功能函数，但是聚合的逻辑是不确定的，需要传递
+        // Mapper(打散) - Reducer(聚合)
+        // 1 => N => flatMap
+        // N => 1 => reduce(简化，规约)
+
+        // 将多个数据聚合成一条数据，但是聚合的规则不确定，需要通过函数来指定
+        //
+        val list = List(1,2,3,4,5)
+
+        // scala中数据操作一般都是两两操作
+
+        def reduceFunction(x:Int, y:Int): Int = {
+            x + y
+        }
+
+//        val i: Int = list.reduce(reduceFunction)
+//        val i: Int = list.reduce((x:Int, y:Int)=>{x + y})
+//        val i: Int = list.reduce((x, y)=>{x + y})
+//        val i: Int = list.reduce((x, y)=>x + y)
+
+        // 从源码的角度来讲，reduce底层就是reduceLeft
+
+        // 1,2,3,4,5
+
+        // (A1, A1) => A1
+        val i: Int = list.reduce(_-_) // -13
+
+        // (B, A) => B
+        val ii: Int = list.reduceLeft(_-_) // -13
+
+        // reversed.reduceLeft[B]((x, y) => op(y, x))
+        // 【1，2，3，4, 5】
+        // 【5, 4，3，2，1】 => 4 - 5 => -1
+        //                   => 3 -(-1) => 4
+        //                   => 2 - 4 => -2
+        //                   => 1 - (-2) => 3
+
+        // left : ((((1-2)-3)-4)-5)
+        // right : (1-(2-(3-(4-5))))
+
+        val iii = list.reduceRight(_-_) // -5
+
+        println(i)
+        println(ii)
+        println(iii)
+    }
+}
Index: src/test/java/com/teacher/scala/day06/chapter07/Scala13_Collection_Method9.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day06/chapter07/Scala13_Collection_Method9.scala	(date 1603447414818)
+++ src/test/java/com/teacher/scala/day06/chapter07/Scala13_Collection_Method9.scala	(date 1603447414818)
@@ -0,0 +1,33 @@
+package com.teacher.scala.day06.chapter07
+
+object Scala13_Collection_Method9 {
+
+    def main(args: Array[String]): Unit = {
+
+        // TODO 集合 - 计算方法
+
+        // reduce方法主要用于集合内部数据的聚合
+        // 但是在某些情况下，可以将集合数据和集合之外的数据进行聚合
+        // 这种操作称之为折叠
+
+        // fold方法存在函数的柯里化，存在两个参数列表
+        // 第一个参数列表表示集合之外的数据，称之为计算初始值 zero
+        // 第二个参数列表表示数据两两计算的规则
+        val list = List(1,2,3,4)
+        //val i: Int = list.fold(0)(_-_)
+        //list.foldLeft(0)(_+_)
+        // reversed.foldLeft(z)((x, y) => op(y, x))
+        // 0【4，3，2，1】 => (1 - (2 -(3 -(4 - 5))))
+        val ii = list.foldRight(5)(_-_)
+
+        // 将执行过程中的每一步操作保留结果
+        val ints: List[Int] = list.scanRight(5)(_-_)
+        println(ints)
+
+        // TODO 今天晚上的练习 ： 两个Map的合并
+        //        val map1 = Map("a"->1,"b"->2)
+        //        val map2 = Map("a"->3,"c"->4)
+        //        => Map("a"->4, "b"->2, "c"->4)
+        //        xxxx.foldLeft(yyyy)(zzzz)
+    }
+}
Index: src/test/java/com/teacher/scala/day06/chapter07/Scala10_Collection_Par.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day06/chapter07/Scala10_Collection_Par.scala	(date 1603454715399)
+++ src/test/java/com/teacher/scala/day06/chapter07/Scala10_Collection_Par.scala	(date 1603454715399)
@@ -0,0 +1,14 @@
+package com.teacher.scala.day06.chapter07
+
+
+object Scala10_Collection_Par {
+
+    def main(args: Array[String]): Unit = {
+        val result1 = (0 to 100).map{x => Thread.currentThread.getName}
+        val result2 = (0 to 100).par.map{x => Thread.currentThread.getName}
+
+        println(result1)
+        println(result2)
+
+    }
+}
Index: src/test/java/com/teacher/scala/day03/chapter05/Scala07_Function.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day03/chapter05/Scala07_Function.scala	(date 1603198094345)
+++ src/test/java/com/teacher/scala/day03/chapter05/Scala07_Function.scala	(date 1603198094345)
@@ -0,0 +1,40 @@
+package com.teacher.scala.day03.chapter05
+
+object Scala07_Function {
+
+    def main(args: Array[String]): Unit = {
+
+        // 函数柯里化 - Curry
+        val i = 100 // 5min
+        val j = 200 // 10min
+
+        def test( i : Int, j : Int ): Unit = {
+            // 10min
+            for ( a <- 1 to i ) {
+                println(a)
+            }
+
+            // 15min
+            for ( b <- 1 to j ) {
+                println(b)
+            }
+        }
+
+        // 科学家库里发现了方法参数必须全部准备完毕，才能调用函数
+        // 但是如果参数之间没有关系，那么就导致性能下降。而且同时增加了业务复杂度。
+        //test(i, j)
+        // 所以可以将参数通过参数列表给分离开
+        // 所以函数支持多个参数列表，每个参数列表表示一个含义，所以将复杂的逻辑简单化
+        def test1(i:Int)(j:Int): Int = {
+            i + j
+        }
+
+        //test1(10)(20)
+        def operator( x:Int, y:Int )( op:(Int, Int)=>Int ) = {
+            op(x, y)
+        }
+
+        println(operator(10, 20)(_ + _))
+
+    }
+}
Index: src/test/java/com/teacher/scala/day06/chapter07/Scala11_Collect_ThreadSafe.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day06/chapter07/Scala11_Collect_ThreadSafe.java	(date 1603447414784)
+++ src/test/java/com/teacher/scala/day06/chapter07/Scala11_Collect_ThreadSafe.java	(date 1603447414784)
@@ -0,0 +1,47 @@
+package com.teacher.scala.day06.chapter07;
+
+public class Scala11_Collect_ThreadSafe {
+    public static void main(String[] args) {
+
+        User11 user = new User11();
+
+        Thread t1 = new Thread(new Runnable() {
+            @Override
+            public void run() {
+                user.name = "zhangsan";
+                try {
+                    Thread.sleep(1000);
+                } catch ( Exception e ) {
+                    e.printStackTrace();
+                }
+                System.out.println(user.name);
+            }
+        });
+        Thread t2 = new Thread(new Runnable() {
+            @Override
+            public void run() {
+                user.name = "lisi";
+                try {
+                    Thread.sleep(1000);
+                } catch ( Exception e ) {
+                    e.printStackTrace();
+                }
+                System.out.println(user.name);
+            }
+        });
+
+        t1.start();
+        t2.start();
+
+        System.out.println("main方法执行完毕");
+
+        // main
+        // zhangsan(lisi)
+        // list(zhangsan)
+
+    }
+
+}
+class User11 {
+    public String name;
+}
Index: src/test/java/com/teacher/scala/day06/chapter07/Scala08_Collection_Tuple.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day06/chapter07/Scala08_Collection_Tuple.scala	(date 1603447414832)
+++ src/test/java/com/teacher/scala/day06/chapter07/Scala08_Collection_Tuple.scala	(date 1603447414832)
@@ -0,0 +1,36 @@
+package com.teacher.scala.day06.chapter07
+
+import scala.collection.mutable
+
+object Scala08_Collection_Tuple {
+
+    def main(args: Array[String]): Unit = {
+
+        // TODO - 集合 - Tuple
+        // 将无关数据封装为一个整体来使用，这种特定的结构称之为元组
+
+        val t = (
+                1,2,3,4,5,6,7,8,9,0,
+                1,2,3,4,5,6,7,8,9,0,
+                1,2
+        )
+        // 元组有专门的类型：TupleX
+        // 理解起来不方便，所以还可以用另外的方式声明类型
+        val t1 : (Int, String, Int) = (1, "zhangsan", 30)
+        // 元组中元素的数量最多能放置22个。这里强调的是元素的数量，而没有限制元素的类型
+
+        // 元组通过顺序号进行访问
+        println(t1._1)
+
+        // 通过索引进行访问
+        t1.productElement(0)
+
+        // 通过迭代器访问
+        t1.productIterator
+
+        // 如果一个元组中的元素的数量为2，那么称之为对偶元组，也称之为键值对
+
+        println(t)
+
+    }
+}
Index: src/test/java/com/teacher/scala/day06/chapter07/Scala09_Collection_Queue.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day06/chapter07/Scala09_Collection_Queue.scala	(date 1603447414823)
+++ src/test/java/com/teacher/scala/day06/chapter07/Scala09_Collection_Queue.scala	(date 1603447414823)
@@ -0,0 +1,21 @@
+package com.teacher.scala.day06.chapter07
+
+import scala.collection.mutable
+
+object Scala09_Collection_Queue {
+
+    def main(args: Array[String]): Unit = {
+
+        val que = new mutable.Queue[String]()
+        // 添加元素
+        // 先进先出
+        que.enqueue("a", "b", "c")
+        //val que1: mutable.Queue[String] = que += "d"
+        //println(que eq que1)
+        // 获取元素
+        println(que.dequeue())
+        println(que.dequeue())
+        println(que.dequeue())
+
+    }
+}
Index: src/test/java/com/teacher/scala/day06/chapter07/Scala07_Collection_Map.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day06/chapter07/Scala07_Collection_Map.scala	(date 1603447414798)
+++ src/test/java/com/teacher/scala/day06/chapter07/Scala07_Collection_Map.scala	(date 1603447414798)
@@ -0,0 +1,31 @@
+package com.teacher.scala.day06.chapter07
+
+import scala.collection.mutable
+
+object Scala07_Collection_Map {
+
+    def main(args: Array[String]): Unit = {
+
+        // TODO - 集合 - Map
+        val map = mutable.Map("a"->1, "b"->2,"c"->3)
+
+        // 空指针异常
+        // option : 选项
+        // Some : 有值， None : 无值
+        val maybeInt: Option[Int] = map.get("a") // Some(1)
+        val maybeInt1: Option[Int] = map.get("d") // None
+        // map集合允许放置空键空值
+        // Option类型专门用于解决空指针异常所产生的类型
+        if ( !maybeInt.isEmpty ) {
+            println(maybeInt.get)
+        }
+        // NoSuchElementException
+        // 获取数据，但是如果获取不到，设定一个默认值
+        //println(maybeInt1.get)
+        println(maybeInt1.getOrElse(0))
+
+        //map.get("d").getOrElse(0)
+        val i: Int = map.getOrElse("d", 0)
+        println(i)
+    }
+}
Index: src/test/java/com/teacher/scala/day06/chapter07/Scala07_Collection_Map1.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day06/chapter07/Scala07_Collection_Map1.scala	(date 1603447414804)
+++ src/test/java/com/teacher/scala/day06/chapter07/Scala07_Collection_Map1.scala	(date 1603447414804)
@@ -0,0 +1,22 @@
+package com.teacher.scala.day06.chapter07
+
+import scala.collection.mutable
+
+object Scala07_Collection_Map1 {
+
+    def main(args: Array[String]): Unit = {
+
+        // TODO - 集合 - Map
+        val map = mutable.Map("a"->1, "b"->2,"c"->3)
+
+        val kiterator: Iterator[String] = map.keysIterator
+        val keys: Iterable[String] = map.keys
+        val set: collection.Set[String] = map.keySet
+
+        map.values
+        val viterator: Iterator[Int] = map.valuesIterator
+
+        val kviterator: Iterator[(String, Int)] = map.iterator
+
+    }
+}
Index: src/main/java/com/nswdwy/scala/chapter03_day03/function_Hell6.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter03_day03/function_Hell6.scala	(date 1603279885821)
+++ src/main/java/com/nswdwy/scala/chapter03_day03/function_Hell6.scala	(date 1603279885821)
@@ -0,0 +1,21 @@
+package com.nswdwy.scala.chapter03_day03
+
+/**
+ * @author yycstart
+ * @create 2020-10-20 20:48
+ */
+object function_Hell6 {
+  def main(args: Array[String]): Unit = {
+    //TODO 控制抽象
+
+    def ff(op: => Unit) = {
+      op
+    }
+
+    ff{
+      val i = 10
+      val j = 12
+      println(i + j)
+    }
+  }
+}
Index: src/test/java/com/teacher/scala/day06/chapter07/Scala06_Collection_Map1.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day06/chapter07/Scala06_Collection_Map1.scala	(date 1603447414821)
+++ src/test/java/com/teacher/scala/day06/chapter07/Scala06_Collection_Map1.scala	(date 1603447414821)
@@ -0,0 +1,22 @@
+package com.teacher.scala.day06.chapter07
+
+import scala.collection.mutable
+
+object Scala06_Collection_Map1 {
+
+    def main(args: Array[String]): Unit = {
+
+        // TODO - 集合 - Map
+        val map = mutable.Map("a"->1, "b"->2,"c"->3)
+
+        map.put("d", 4)
+        map.put("a", 5)
+
+        map.update("c", 6)
+
+        map.remove("b")
+
+        println(map)
+
+    }
+}
Index: src/test/java/com/teacher/scala/day06/chapter07/Scala07_Collect_Map_Java.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day06/chapter07/Scala07_Collect_Map_Java.java	(date 1603447414790)
+++ src/test/java/com/teacher/scala/day06/chapter07/Scala07_Collect_Map_Java.java	(date 1603447414790)
@@ -0,0 +1,23 @@
+package com.teacher.scala.day06.chapter07;
+
+public class Scala07_Collect_Map_Java {
+    public static void main(String[] args) {
+
+        // 调用了一个为空对象的成员属性或成员方法
+
+        // NullPointerException
+        //User07 user = null;
+        //test(user.age); // 拆箱原理 ： Integer.intValue
+
+        Integer i1 = 200; // 装箱原理 ： Integer.valueOf
+        Integer i2 = 200;
+        System.out.println(i1 == i2);
+    }
+    public static void test( int age ) {
+        System.out.println(age);
+    }
+
+}
+class User07 {
+    public static Integer age;
+}
Index: src/test/java/com/teacher/scala/day06/chapter07/Scala05_Collection_Set1.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day06/chapter07/Scala05_Collection_Set1.scala	(date 1603447414812)
+++ src/test/java/com/teacher/scala/day06/chapter07/Scala05_Collection_Set1.scala	(date 1603447414812)
@@ -0,0 +1,31 @@
+package com.teacher.scala.day06.chapter07
+
+import scala.collection.mutable
+
+object Scala05_Collection_Set1 {
+
+    def main(args: Array[String]): Unit = {
+
+        // TODO - 集合 - Set
+
+        // 可变set集合是使用包名区分
+        val set = mutable.Set(1,2,3,4,3,4,5,6)
+
+        // 增加数据
+        //set.add(7) // 【1，2，3，4，5，6， 7】
+
+        // 更新 集合本身
+        //set.update(5, false) // 【1，2，3，4，5，6，7，8】
+
+        // 删除元素
+        //set.remove(1) // 【2，3，4，5，6，7，8】
+
+        // 可变集合也有可能产生新 的集合
+        set + 7
+        set += 7
+
+        println(set)
+
+
+    }
+}
Index: src/test/java/com/teacher/scala/day06/chapter07/Scala06_Collection_Map.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day06/chapter07/Scala06_Collection_Map.scala	(date 1603451745456)
+++ src/test/java/com/teacher/scala/day06/chapter07/Scala06_Collection_Map.scala	(date 1603451745456)
@@ -0,0 +1,27 @@
+package com.teacher.scala.day06.chapter07
+
+object Scala06_Collection_Map {
+
+    def main(args: Array[String]): Unit = {
+
+        // TODO - 集合 - Map
+
+        // Map集合描述了存储键值对对象，无序的，Key不能重复
+        // 两个元素的组合就是键值对，也是元组
+        //val kv = ("a", 1)
+
+        val map1 = Map(
+            ("a", 1), ("b", 2), ("c", 3),
+            ("a", 4), ("e", 5), ("c", 6)
+        )
+
+        // Scala中 -> 方法用于创建关联关系，形成键值对
+        val map2 = Map(
+            "a" -> 1, "b" -> 2, "c" -> 3
+        )
+
+        println(map1)
+        println(map2)
+
+    }
+}
Index: src/test/java/com/teacher/scala/day06/chapter07/Scala04_Collection_Seq1.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day06/chapter07/Scala04_Collection_Seq1.scala	(date 1603447414793)
+++ src/test/java/com/teacher/scala/day06/chapter07/Scala04_Collection_Seq1.scala	(date 1603447414793)
@@ -0,0 +1,24 @@
+package com.teacher.scala.day06.chapter07
+
+import scala.collection.mutable.ListBuffer
+
+object Scala04_Collection_Seq1 {
+
+    def main(args: Array[String]): Unit = {
+
+        // TODO - 集合 - Seq(List)
+        val list = ListBuffer(1,2,3,4)
+
+        //list.insert()
+        list.append(5) // 【1，2，3，4，5】
+        //list.appendAll()
+        list.update(3, 6) // 【1，2，3，6，5】
+        list.remove(2)   //  【1，2，6，5】
+
+        println(list)
+        //list.mkString()
+        //list.foreach()
+        //list.iterator
+        //list.group
+    }
+}
Index: src/main/java/com/nswdwy/scala/chapter03_day03/function_Hell7.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter03_day03/function_Hell7.scala	(date 1603279885815)
+++ src/main/java/com/nswdwy/scala/chapter03_day03/function_Hell7.scala	(date 1603279885815)
@@ -0,0 +1,37 @@
+package com.nswdwy.scala.chapter03_day03
+
+/**
+ * @author yycstart
+ * @create 2020-10-20 20:48
+ */
+object function_Hell7 {
+  def main(args: Array[String]): Unit = {
+    //TODO 函数柯里化
+
+
+  /*  val m = 10
+    val n = 15
+    def f1(m:Int,n:Int) = {
+        for(i <- 1 to m){
+          println(i)
+        }
+      for(j <- 1 to n){
+        print(j)
+      }
+      */
+    def test(m:Int,n:Int) = {
+      m + n
+    }
+
+    def test1(m:Int,n:Int)(op:(Int,Int)=>Int) = {
+      op(m,n)
+    }
+
+
+    println(test(12, 11))
+    println("-----------")
+    println(test1(10, 12)(_ + _))
+
+
+  }
+}
Index: src/test/java/com/teacher/scala/day06/chapter07/Scala05_Collection_Set.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day06/chapter07/Scala05_Collection_Set.scala	(date 1603447414829)
+++ src/test/java/com/teacher/scala/day06/chapter07/Scala05_Collection_Set.scala	(date 1603447414829)
@@ -0,0 +1,20 @@
+package com.teacher.scala.day06.chapter07
+
+object Scala05_Collection_Set {
+
+    def main(args: Array[String]): Unit = {
+
+        // TODO - 集合 - Set
+
+        // Set描述了无序，数据不可重复的集合
+        val set = Set(1,2,3,4,3,4,5,6)
+
+        val newSet: Set[Int] = set + 7
+
+        val newSet1: Set[Int] = newSet - 5
+
+        //println(set eq newSet)
+        println(newSet1)
+
+    }
+}
Index: src/main/java/com/nswdwy/scala/chapter07_day05/practice/_2_Array_methodFunction_wordcount.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter07_day05/practice/_2_Array_methodFunction_wordcount.scala	(date 1603377956240)
+++ src/main/java/com/nswdwy/scala/chapter07_day05/practice/_2_Array_methodFunction_wordcount.scala	(date 1603377956240)
@@ -0,0 +1,31 @@
+package com.nswdwy.scala.chapter07_day05.practice
+
+import scala.collection.mutable.ArrayBuffer
+
+
+/**
+ * @author yycstart
+ * @create 2020-10-22 0:11
+ */
+object _2_Array_methodFunction_wordcount {
+    def main(args: Array[String]): Unit = {
+        val strings: ArrayBuffer[String] = ArrayBuffer("Hello Scala Hive", "Hello Scala", "Scala")
+        val strings1: ArrayBuffer[String] = strings.flatMap(_.split(" "))
+        println(strings1)
+        println("-----------------------------")
+        val stringToStrings: Map[String, ArrayBuffer[String]] = strings1.groupBy(word => word)
+        println(stringToStrings)
+        println("---------------------------")
+        println(stringToStrings.map(t => {
+            val word = t._1
+            val array = t._2
+              (word,array.length)
+
+        }))
+        println("-------------------------------")
+        println(stringToStrings.map(t => (t._1,t._2.length)))
+
+
+    }
+
+}
Index: src/test/java/com/teacher/scala/day06/chapter07/Scala04_Collection_Seq.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day06/chapter07/Scala04_Collection_Seq.scala	(date 1603447414808)
+++ src/test/java/com/teacher/scala/day06/chapter07/Scala04_Collection_Seq.scala	(date 1603447414808)
@@ -0,0 +1,37 @@
+package com.teacher.scala.day06.chapter07
+
+object Scala04_Collection_Seq {
+
+    def main(args: Array[String]): Unit = {
+
+        // TODO - 集合 - Seq(List)
+        // scala默认提供的集合都是不可变的
+        //val seq = Seq(1,2,3,4)
+        // 创建集合
+        val list = List( 1,2,3,4 )
+
+        // 不可变集合对数据的操作会产生新的集合
+        //val list1: List[Int] = list :+ 5
+        //val list2: List[Int] = list.+:(5)
+        //val list2: List[Int] = 5 +: list
+
+        //println(list eq list1)
+        //println(list1)
+        //println(list2)
+
+        // 空集合,Scala中可以采用特殊对象
+        Nil // List()
+        val list3: List[Int] = 1::2::3::Nil
+        val list4: List[Int] = 4::5::list3:::Nil
+        val list5 = 4::5::list3::Nil
+
+        // 3::Nil => List(3)
+        // 2::List(3) => List(2,3)
+        // 1::List(2,3) => List(1,2,3)
+
+        println(list3)
+        println(list4)
+        println(list5)
+
+    }
+}
Index: src/main/java/com/nswdwy/scala/chapter07_day07/practice/_2_Match.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter07_day07/practice/_2_Match.scala	(date 1603530010673)
+++ src/main/java/com/nswdwy/scala/chapter07_day07/practice/_2_Match.scala	(date 1603530010673)
@@ -0,0 +1,17 @@
+package com.nswdwy.scala.chapter07_day07.practice
+
+/**
+ * @author yycstart
+ * @create 2020-10-24 10:48
+ */
+object _2_Match {
+  def main(args: Array[String]): Unit = {
+//    val a = 12.7
+//    println(a.toInt)
+    //TODO 模式匹配
+
+    for(
+
+    )
+  }
+}
Index: src/main/java/com/nswdwy/scala/chapter07_day05/practice/_1_Array_mutable.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter07_day05/practice/_1_Array_mutable.scala	(date 1603382692722)
+++ src/main/java/com/nswdwy/scala/chapter07_day05/practice/_1_Array_mutable.scala	(date 1603382692722)
@@ -0,0 +1,42 @@
+package com.nswdwy.scala.chapter07_day05.practice
+
+import scala.collection.mutable.ArrayBuffer
+
+/**
+ * @author yycstart
+ * @create 2020-10-22 0:11
+ */
+object _1_Array_mutable {
+    def main(args: Array[String]): Unit = {
+        /*
+           Scala中数组的访问使用 ()
+        */
+        val arr1: ArrayBuffer[Int] = new ArrayBuffer[Int]()
+        val arr2: ArrayBuffer[Int] = ArrayBuffer(3,4,5, 6)
+
+        //追加数据
+        arr1.append(1, 2, 3, 4)
+        //插入 (insert)
+        arr1.insert(1, 6)
+        println("ins---"+arr1)
+
+        //拼接
+        println("1---"+arr1.++(arr2))
+        //初始值
+        println("arr1初始值:  "+arr1.init)
+
+
+        //并集
+        println("arr1,arr2并集： "+arr1.union(arr2))
+        //拉链（两两匹配）
+        println("拉链:   "+arr1.zip(arr2))
+
+        val arrs3: ArrayBuffer[Int] = ArrayBuffer(1, 3, 5, 2, 9, 5)
+        val iterator: Iterator[ArrayBuffer[Int]] = arrs3.sliding(2, 2)
+        while (iterator.hasNext){
+            println(iterator.next())
+        }
+
+    }
+
+}
Index: src/main/java/com/nswdwy/scala/chapter07_day05/practice/_2_Array_methodFunction1.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter07_day05/practice/_2_Array_methodFunction1.scala	(date 1603338252403)
+++ src/main/java/com/nswdwy/scala/chapter07_day05/practice/_2_Array_methodFunction1.scala	(date 1603338252403)
@@ -0,0 +1,37 @@
+package com.nswdwy.scala.chapter07_day05.practice
+
+import scala.collection.mutable.ArrayBuffer
+
+
+/**
+ * @author yycstart
+ * @create 2020-10-22 0:11
+ */
+object _2_Array_methodFunction1 {
+    def main(args: Array[String]): Unit = {
+        val strings: ArrayBuffer[String] = ArrayBuffer("Hive", "Flume", "Kafka", "Spark","Hadoop","Scala")
+        println(strings.map(_.substring(0,1)))
+
+
+        val buffer: ArrayBuffer[Int] = ArrayBuffer(1, 2, 3, 4, 5, 6, 7, 8, 9)
+        //groupby后的数据为map==>K-分组的Key；V-相同的K的数据集
+
+        println(buffer.groupBy(_ % 2))
+        println(strings.groupBy(_.substring(0, 1)))
+
+
+        /*
+        元组:
+        -->使用：元组数据之间没有关系，一般用顺序号访问
+         */
+
+        val t = (1,"zhangsan",30)
+        println(t._1)
+        println(t._2)
+        println(t._3)
+        val strings1: ArrayBuffer[String] = ArrayBuffer("1", "22", "9", "8", "10")
+        println(strings1.sortBy(_.toInt))
+        println(strings1.sortBy(_.toInt)(Ordering.Int.reverse))
+    }
+
+}
Index: src/main/java/com/nswdwy/scala/chapter07_day05/practice/_1_Array_immutable.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter07_day05/practice/_1_Array_immutable.scala	(date 1603382419654)
+++ src/main/java/com/nswdwy/scala/chapter07_day05/practice/_1_Array_immutable.scala	(date 1603382419654)
@@ -0,0 +1,21 @@
+package com.nswdwy.scala.chapter07_day05.practice
+
+/**
+ * @author yycstart
+ * @create 2020-10-22 0:11
+ */
+object _1_Array_immutable {
+    def main(args: Array[String]): Unit = {
+        val ints: Array[Int] = new Array[Int](5)
+        println(ints.+:(5).mkString(","))//5,0,0,0,0,0
+
+        //右加
+        println(ints.:+(6).mkString(","))  //0,0,0,0,0,6  //常用
+        println((ints :+ 7).mkString(",")) //0,0,0,0,0,9
+        //左加
+        println(ints.+:(8).mkString(","))  //8,0,0,0,0,0  //常用
+        println((9 +: ints).mkString(",")) //7,0,0,0,0,0
+
+
+    }
+}
Index: src/main/java/com/nswdwy/scala/chapter07_day05/practice/_2_Array_methodFunction.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter07_day05/practice/_2_Array_methodFunction.scala	(date 1603337493302)
+++ src/main/java/com/nswdwy/scala/chapter07_day05/practice/_2_Array_methodFunction.scala	(date 1603337493302)
@@ -0,0 +1,25 @@
+package com.nswdwy.scala.chapter07_day05.practice
+
+import scala.collection.mutable.ArrayBuffer
+
+
+/**
+ * @author yycstart
+ * @create 2020-10-22 0:11
+ */
+object _2_Array_methodFunction {
+    def main(args: Array[String]): Unit = {
+        val strings: ArrayBuffer[String] = ArrayBuffer("Hive", "Flume", "Kafka", "Spark","Hadoop","Scala")
+        println(strings.map(_.substring(0,1)))
+
+
+        val buffer: ArrayBuffer[Int] = ArrayBuffer(1, 2, 3, 4, 5, 6, 7, 8, 9)
+        //groupby后的数据为map==>K-分组的Key；V-相同的K的数据集
+
+        println(buffer.groupBy(_ % 2))
+        println(strings.groupBy(_.substring(0, 1)))
+
+
+    }
+
+}
Index: src/main/java/com/nswdwy/scala/chapter07_day06/practice/_5_methodFunction_wordcount.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter07_day06/practice/_5_methodFunction_wordcount.scala	(date 1603438671269)
+++ src/main/java/com/nswdwy/scala/chapter07_day06/practice/_5_methodFunction_wordcount.scala	(date 1603438671269)
@@ -0,0 +1,48 @@
+package com.nswdwy.scala.chapter07_day06.practice
+
+import scala.collection.immutable
+
+
+/**
+ * @author yycstart
+ * @create 2020-10-22 0:11
+ */
+object _5_methodFunction_wordcount {
+    def main(args: Array[String]): Unit = {
+        val tuples: List[(String, Int)] = List(
+            ("Hello Scala Hive Spark", 4),
+            ("Hello Scala Hive", 3),
+            ("Hello Scala", 2),
+            ("Hello", 1)
+        )
+        val tuples1: List[(String, Int)] = tuples.flatMap(
+            t => {
+                val keys = t._1
+                val value: Int = t._2
+                val key = keys.split(" ")
+                key.map(
+                    word => (word, value)
+                )
+            }
+        )
+//            tuples1.foreach(println)
+        //List((Hello,4), (Scala,4), (Hive,4), (Spark,4), (Hello,3), (Scala,3), (Hive,3), (Hello,2), (Scala,2), (Hello,1))
+        println(tuples1)
+        println("-----------------------------")
+        val newMap: Map[String, List[(String, Int)]] = tuples1.groupBy(_._1)
+        //Map(Hello -> List((Hello,4), (Hello,3), (Hello,2), (Hello,1)), Spark -> List((Spark,4)), Scala -> List((Scala,4), (Scala,3), (Scala,2)), Hive -> List((Hive,4), (Hive,3)))
+        println(newMap)
+        println("------------------------------")
+        val result: Map[String, Int] = newMap.map(
+            t => {
+//                val key: String = t._1
+//                val sum: Int = t._2.map(_._2).sum //(4,3,2,1),(4,3,2),(4,3),(4)
+//                (key, sum)
+                (t._1,t._2.map(_._2).sum)
+            }
+        )
+        //Map(Hello -> 10, Spark -> 4, Scala -> 9, Hive -> 7)
+        println(result)
+    }
+
+}
Index: src/main/java/com/nswdwy/scala/chapter07_day06/practice/_6_Req.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter07_day06/practice/_6_Req.scala	(date 1603449643578)
+++ src/main/java/com/nswdwy/scala/chapter07_day06/practice/_6_Req.scala	(date 1603449643578)
@@ -0,0 +1,83 @@
+package com.nswdwy.scala.chapter07_day06.practice
+
+
+/**
+ * @author yycstart
+ * @create 2020-10-22 0:11
+ */
+object _6_Req {
+    def main(args: Array[String]): Unit = {
+        val list = List(
+            ("zhangsan", "河北", "鞋"),
+            ("lisi", "河北", "衣服"),
+            ("wangwu", "河北", "鞋"),
+            ("zhangsan", "河南", "鞋"),
+            ("lisi", "河南", "衣服"),
+            ("wangwu", "河南", "鞋"),
+            ("zhangsan", "河南", "鞋"),
+            ("lisi", "河北", "衣服"),
+            ("wangwu", "河北", "鞋"),
+            ("zhangsan", "河北", "鞋"),
+            ("lisi", "河北", "衣服"),
+            ("wangwu", "河北", "帽子"),
+            ("zhangsan", "河南", "鞋"),
+            ("lisi", "河南", "衣服"),
+            ("wangwu", "河南", "帽子"),
+            ("zhangsan", "河南", "鞋"),
+            ("lisi", "河北", "衣服"),
+            ("wangwu", "河北", "帽子"),
+            ("lisi", "河北", "衣服"),
+            ("wangwu", "河北", "电脑"),
+            ("zhangsan", "河南", "鞋"),
+            ("lisi", "河南", "衣服"),
+            ("wangwu", "河南", "电脑"),
+            ("zhangsan", "河南", "电脑"),
+            ("lisi", "河北", "衣服"),
+            ("wangwu", "河北", "帽子")
+        )
+        //2.数据进项结构转换,将省份和商品连接组成新的key   （姓名，省份，商品）=>（（省份，商品），1）
+        val mapList: List[(String, Int)] = list.map(
+            t => ( (t._2 + "-" + t._3), 1 )
+        )
+        //3.数据进项结构转换,然后对数据进行分组聚合 (（省份，商品）,sum)
+        val stringToTuples: Map[String, List[(String, Int)]] = mapList.groupBy(_._1)
+        //Map(河南-衣服 -> List((河南-衣服,1), (河南-衣服,1), (河南-衣服,1)), 河北-衣服 -> List((河北-衣服,1), (河北-衣服,1), (河北-衣服,1), (河北-衣服,1), (河北-衣服,1), (河北-衣服,1)), 河南-帽子 -> List((河南-帽子,1)), 河北-鞋 -> List((河北-鞋,1), (河北-鞋,1), (河北-鞋,1), (河北-鞋,1)), 河南-电脑 -> List((河南-电脑,1), (河南-电脑,1)), 河南-鞋 -> List((河南-鞋,1), (河南-鞋,1), (河南-鞋,1), (河南-鞋,1), (河南-鞋,1), (河南-鞋,1)), 河北-电脑 -> List((河北-电脑,1)), 河北-帽子 -> List((河北-帽子,1), (河北-帽子,1), (河北-帽子,1)))
+        println(stringToTuples)
+        println("-------------------------")
+        val stringToInt: Map[String, Int] = stringToTuples.map(
+            t => {
+                val key: String = t._1
+                val value: List[(String, Int)] = t._2
+                (key, value.length)
+            }
+        )
+        //Map(河南-衣服 -> 3, 河北-衣服 -> 6, 河南-帽子 -> 1, 河北-鞋 -> 4, 河南-电脑 -> 2, 河南-鞋 -> 6, 河北-电脑 -> 1, 河北-帽子 -> 3)
+        println(stringToInt)
+        println("-------------------------")
+
+        //4.汇总数量( 省份，（商品，sum）)
+        val getSumTuples: List[(String, (String, Int))] = stringToInt.toList.map(
+            t => {
+                val keys: Array[String] = t._1.split("-")
+                val value: Int = t._2
+                (keys(0), (keys(1), value))
+            }
+        )
+        //List((河南,(衣服,3)), (河北,(衣服,6)), (河南,(帽子,1)), (河北,(鞋,4)), (河南,(电脑,2)), (河南,(鞋,6)), (河北,(电脑,1)), (河北,(帽子,3)))
+        println(getSumTuples)
+        println("--------------------------------------")
+        //5. 将转换结构后的数据根据省份进行分组  (省份，intertor【（商品1，sum）】)
+        val groupbypro: Map[String, List[(String, (String, Int))]] = getSumTuples.groupBy(_._1)
+        //Map(河南 -> List((河南,(衣服,3)), (河南,(帽子,1)), (河南,(电脑,2)), (河南,(鞋,6))), 河北 -> List((河北,(衣服,6)), (河北,(鞋,4)), (河北,(电脑,1)), (河北,(帽子,3))))
+        println(groupbypro)
+        println("-----------------------------------")
+        //6. 对分组后的数据进行排序（降序）
+        val result: Map[String, List[(String, Int)]] = groupbypro.mapValues(
+            list => {
+                val tuples1: List[(String, Int)] = list.map(_._2)
+                tuples1.sortBy(_._2)(Ordering.Int.reverse)
+            }
+        )
+        println(result)
+    }
+}
Index: src/main/java/com/nswdwy/scala/chapter07_day06/practice/_4_Set1.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter07_day06/practice/_4_Set1.scala	(date 1603451586383)
+++ src/main/java/com/nswdwy/scala/chapter07_day06/practice/_4_Set1.scala	(date 1603451586383)
@@ -0,0 +1,25 @@
+package com.nswdwy.scala.chapter07_day06.practice
+
+import scala.collection.mutable
+
+/**
+ * @author yycstart
+ * @create 2020-10-22 0:11
+ */
+object _4_Set1 {
+    def main(args: Array[String]): Unit = {
+        //TODO
+        val set: mutable.Set[Int] = mutable.Set(1,2,3,4,5,6)
+        val bool: Boolean = set.add(6)
+        val bool1: Boolean = set.add(7)
+        println(bool)
+        println(bool1)
+        // += 相当于将改变后的集合重新赋给原来集合，因此集合地址未改变
+        val value: set.type = set += 7
+        //即使可变集合 + 操作也会创建新的集合
+        val values: mutable.Set[Int] = set + 7
+        println(set eq value)
+        println(set eq values)
+
+    }
+}
Index: src/main/java/com/nswdwy/scala/chapter07_day06/practice/_4_Set.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter07_day06/practice/_4_Set.scala	(date 1603451277960)
+++ src/main/java/com/nswdwy/scala/chapter07_day06/practice/_4_Set.scala	(date 1603451277960)
@@ -0,0 +1,28 @@
+package com.nswdwy.scala.chapter07_day06.practice
+
+
+/**
+ * @author yycstart
+ * @create 2020-10-22 0:11
+ */
+object _4_Set {
+    def main(args: Array[String]): Unit = {
+        val ints: Set[Int] = Set(1, 3, 2, 2, 1, 3, 4, 6, 5, 7)
+        val set: Set[Any] = Set(1, 3, 2, 2, 1, "aj", 5, 4, 6, 5, 7)
+        val list: List[Int] = List(4, 8, 7, 9)
+        val ints1 = ints + 8
+        val ints2 = ints + "__jj"
+        val ints3 = set + "__jj"
+        val ints4 = set + list
+        println(ints.size)
+        println(ints)
+        println(ints1)
+        println(ints2)
+        println(ints3)
+        println(ints4)
+        println(ints eq ints1)
+        println(ints eq ints2)
+
+
+    }
+}
Index: src/main/java/com/nswdwy/scala/chapter07_day06/practice/_3_Seq.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter07_day06/practice/_3_Seq.scala	(date 1603416531329)
+++ src/main/java/com/nswdwy/scala/chapter07_day06/practice/_3_Seq.scala	(date 1603416531329)
@@ -0,0 +1,17 @@
+package com.nswdwy.scala.chapter07_day06.practice
+
+
+
+/**
+ * @author yycstart
+ * @create 2020-10-22 0:11
+ */
+object _3_Seq {
+    def main(args: Array[String]): Unit = {
+        // TODO
+//        new Seq[String]()
+        val ints: Seq[Int] = Seq(1, 2, 3, 4)
+        println(ints.+:(0))
+    }
+
+}
Index: src/main/java/com/nswdwy/scala/chapter07_day06/practice/_3_Seq1.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter07_day06/practice/_3_Seq1.scala	(date 1603450430157)
+++ src/main/java/com/nswdwy/scala/chapter07_day06/practice/_3_Seq1.scala	(date 1603450430157)
@@ -0,0 +1,24 @@
+package com.nswdwy.scala.chapter07_day06.practice
+
+import scala.collection.mutable.ListBuffer
+
+
+/**
+ * @author yycstart
+ * @create 2020-10-22 0:11
+ */
+object _3_Seq1 {
+    def main(args: Array[String]): Unit = {
+        val ints: ListBuffer[Int] = ListBuffer(1, 2, 3, 4)
+        val ints1 = List(3, 4, 5, 6)
+        //Scala中的空集合可以采用特殊
+        val list = 1 :: 2 :: 3:: 4::Nil
+        val list2 = 2::"3"::Nil
+        val list3 = 2::ints1::Nil
+        val list4 = 9::ints1:::2::Nil
+        println(list)
+        println(list2)
+        println(list3)
+        println(list4)
+    }
+}
Index: src/main/java/com/nswdwy/scala/chapter07_day06/practice/_2_Array_methodFunction.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter07_day06/practice/_2_Array_methodFunction.scala	(date 1603415743316)
+++ src/main/java/com/nswdwy/scala/chapter07_day06/practice/_2_Array_methodFunction.scala	(date 1603415743316)
@@ -0,0 +1,18 @@
+package com.nswdwy.scala.chapter07_day06.practice
+
+import scala.collection.mutable.ArrayBuffer
+
+
+/**
+ * @author yycstart
+ * @create 2020-10-22 0:11
+ */
+object _2_Array_methodFunction {
+    def main(args: Array[String]): Unit = {
+        val strings: ArrayBuffer[String] = ArrayBuffer("Hello Scala Hive", "Hello Spark", "Flunk")
+        println(strings.flatMap(strings => strings))
+        val flatten: ArrayBuffer[Char] = strings.flatten
+        println(flatten)
+    }
+
+}
Index: src/main/java/com/nswdwy/scala/chapter06_day04/review/_15_TypeTest.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter06_day04/review/_15_TypeTest.scala	(date 1603296991559)
+++ src/main/java/com/nswdwy/scala/chapter06_day04/review/_15_TypeTest.scala	(date 1603296991559)
@@ -0,0 +1,18 @@
+package com.nswdwy.scala.chapter06_day04.review
+
+/**
+ * @author yycstart
+ * @create 2020-10-22 0:11
+ */
+object _15_TypeTest {
+    def main(args: Array[String]): Unit = {
+        val name = "zhangsan"
+        //用type给对象起别名
+        type CC = typeTest
+        val tt : CC = new typeTest()
+
+    }
+    class typeTest{
+        println("------")
+    }
+}
Index: src/main/java/com/nswdwy/scala/chapter06_day04/review/_14_AppTest.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter06_day04/review/_14_AppTest.scala	(date 1603296685249)
+++ src/main/java/com/nswdwy/scala/chapter06_day04/review/_14_AppTest.scala	(date 1603296685249)
@@ -0,0 +1,9 @@
+package com.nswdwy.scala.chapter06_day04.review
+
+/**
+ * @author yycstart
+ * @create 2020-10-22 0:11
+ */
+object _14_AppTest  extends App{
+    println("application");
+}
Index: src/main/java/com/nswdwy/scala/chapter06_day04/review/_13_emun.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter06_day04/review/_13_emun.scala	(date 1603296664382)
+++ src/main/java/com/nswdwy/scala/chapter06_day04/review/_13_emun.scala	(date 1603296664382)
@@ -0,0 +1,20 @@
+package com.nswdwy.scala.chapter06_day04.review
+
+/**
+ * @author yycstart
+ * @create 2020-10-22 0:07
+ */
+object _13_emun {
+  def main(args: Array[String]): Unit = {
+
+    println(Color.RED.id)
+
+  }
+  object Color extends Enumeration {
+    val RED = Value(1, "red")
+    val YELLOW = Value(2, "yellow")
+    val BLUE = Value(3, "blue")
+  }
+
+
+}
Index: src/main/java/com/nswdwy/scala/chapter06_day04/pratice/UserObjectClass.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter06_day04/pratice/UserObjectClass.scala	(date 1603293704367)
+++ src/main/java/com/nswdwy/scala/chapter06_day04/pratice/UserObjectClass.scala	(date 1603293704367)
@@ -0,0 +1,12 @@
+package com.nswdwy.scala.chapter06_day04.pratice
+
+/**
+ * @author yycstart
+ * @create 2020-10-21 23:21
+ */
+class UserObjectClass {
+
+}
+object UserObjectClass{
+
+}
\ No newline at end of file
Index: src/main/java/com/nswdwy/scala/chapter06_day04/review/_12_Trait.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter06_day04/review/_12_Trait.scala	(date 1603294646301)
+++ src/main/java/com/nswdwy/scala/chapter06_day04/review/_12_Trait.scala	(date 1603294646301)
@@ -0,0 +1,11 @@
+package com.nswdwy.scala.chapter06_day04.review
+
+/**
+ * @author yycstart
+ * @create 2020-10-21 23:07
+ */
+object _12_Trait {
+  def main(args: Array[String]): Unit = {
+
+  }
+}
Index: src/test/java/com/teacher/scala/day03/chapter05/Scala11_Function_Master.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/teacher/scala/day03/chapter05/Scala11_Function_Master.scala	(date 1603274596398)
+++ src/test/java/com/teacher/scala/day03/chapter05/Scala11_Function_Master.scala	(date 1603274596398)
@@ -0,0 +1,26 @@
+package com.teacher.scala.day03.chapter05
+
+import java.io.ObjectOutputStream
+import java.net.Socket
+
+import com.teacher.scala.day01.bean.NewTask
+
+
+
+object Scala11_Function_Master {
+
+    def main(args: Array[String]): Unit = {
+
+        val worker = new Socket("localhost", 9999)
+
+        val objOut = new ObjectOutputStream(worker.getOutputStream)
+
+        val task = new NewTask()
+        objOut.writeObject(task)
+        objOut.flush()
+        objOut.close()
+        worker.close()
+
+    }
+
+}
Index: src/main/java/com/nswdwy/scala/chapter06_day04/pratice/UserObject.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter06_day04/pratice/UserObject.scala	(date 1603293625491)
+++ src/main/java/com/nswdwy/scala/chapter06_day04/pratice/UserObject.scala	(date 1603293625491)
@@ -0,0 +1,9 @@
+package com.nswdwy.scala.chapter06_day04.pratice
+
+/**
+ * @author yycstart
+ * @create 2020-10-21 23:20
+ */
+object UserObject {
+
+}
Index: src/main/java/com/nswdwy/scala/chapter06_day04/pratice/UserClass.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter06_day04/pratice/UserClass.scala	(date 1603293638939)
+++ src/main/java/com/nswdwy/scala/chapter06_day04/pratice/UserClass.scala	(date 1603293638939)
@@ -0,0 +1,9 @@
+package com.nswdwy.scala.chapter06_day04.pratice
+
+/**
+ * @author yycstart
+ * @create 2020-10-21 23:20
+ */
+class UserClass {
+
+}
Index: src/main/java/com/nswdwy/scala/chapter06_day04/review/_11_Simple.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter06_day04/review/_11_Simple.scala	(date 1603292821875)
+++ src/main/java/com/nswdwy/scala/chapter06_day04/review/_11_Simple.scala	(date 1603292821875)
@@ -0,0 +1,17 @@
+package com.nswdwy.scala.chapter06_day04.review
+
+/**
+ * @author yycstart
+ * @create 2020-10-21 23:05
+ */
+class _11_Simple {
+
+  def main(args: Array[String]): Unit = {
+
+  }
+  object Person {
+    def test(): Unit = {
+
+    }
+  }
+}
Index: src/main/java/com/nswdwy/scala/chapter06_day04/review/_11_Simple1.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/nswdwy/scala/chapter06_day04/review/_11_Simple1.scala	(date 1603292861703)
+++ src/main/java/com/nswdwy/scala/chapter06_day04/review/_11_Simple1.scala	(date 1603292861703)
@@ -0,0 +1,16 @@
+package com.nswdwy.scala.chapter06_day04.review
+
+/**
+ * @author yycstart
+ * @create 2020-10-21 23:07
+ */
+object _11_Simple1 {
+  def main(args: Array[String]): Unit = {
+
+  }
+  object Person {
+    def test(): Unit = {
+
+    }
+  }
+}
